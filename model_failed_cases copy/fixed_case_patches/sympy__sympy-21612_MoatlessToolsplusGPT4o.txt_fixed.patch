=== Original Patch ===
diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py
index 2e4a45ad20..b5873bbbf2 100644
--- a/sympy/parsing/latex/_parse_latex_antlr.py
+++ b/sympy/parsing/latex/_parse_latex_antlr.py
@@ -140,7 +140,7 @@ def convert_mp(mp):
     elif mp.DIV() or mp.CMD_DIV() or mp.COLON():
         lh = convert_mp(mp_left)
         rh = convert_mp(mp_right)
-        return sympy.Mul(lh, sympy.Pow(rh, -1, evaluate=False), evaluate=False)
+        return sympy.Mul(lh, sympy.Pow(sympy.Paren(rh), -1, evaluate=False), evaluate=False)
     else:
         if hasattr(mp, 'unary'):
             return convert_unary(mp.unary())

=== Fixed Patch ===
diff --git a/sympy/parsing/latex/_parse_latex_antlr.py b/sympy/parsing/latex/_parse_latex_antlr.py
index 2e4a45ad20..b5873bbbf2 100644
--- a/sympy/parsing/latex/_parse_latex_antlr.py
+++ b/sympy/parsing/latex/_parse_latex_antlr.py
@@ -140,7 +140,7 @@ def convert_mp(mp):
     elif mp.DIV() or mp.CMD_DIV() or mp.COLON():
         lh = convert_mp(mp_left)
         rh = convert_mp(mp_right)
-        return sympy.Mul(lh, sympy.Pow(rh, -1, evaluate=False), evaluate=False)
+return sympy.Mul(lh, sympy.Pow(sympy.Paren(rh), -1, evaluate=False), evaluate=False)
     else:
         if hasattr(mp, 'unary'):
             return convert_unary(mp.unary())

=== Applied Patterns ===

=== Original Error Messages ===
Latex parsing of fractions yields wrong expression due to missing brackets
The missing brackets in the denominator result in a wrong expression.

=== Test Verification Results ===
Tests Passed: False
