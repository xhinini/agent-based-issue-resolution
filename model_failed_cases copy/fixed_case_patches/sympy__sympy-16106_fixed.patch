=== Original Patch ===
diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py
index 59074b8..034d772 100644
--- a/sympy/printing/mathml.py
+++ b/sympy/printing/mathml.py
@@ -443,6 +443,13 @@ class MathMLContentPrinter(MathMLPrinterBase):
             x.appendChild(self._print(arg))
         return x
 
+    def _print_Indexed(self, e):
+        x = self.dom.createElement("apply")
+        x.appendChild(self._print(e.base))
+        for index in e.indices:
+            x.appendChild(self._print(index))
+        return x
+
     def _print_Basic(self, e):
         x = self.dom.createElement(self.mathml_tag(e))
         for arg in e.args:

=== Fixed Patch ===
diff --git a/sympy/printing/mathml.py b/sympy/printing/mathml.py
index 59074b8..034d772 100644
--- a/sympy/printing/mathml.py
+++ b/sympy/printing/mathml.py
@@ -443,6 +443,13 @@ class MathMLContentPrinter(MathMLPrinterBase):
             x.appendChild(self._print(arg))
         return x
 
+    def _print_Indexed(self, e):
+x = self.dom.createElement('apply')
+x.appendChild(self._print(e.base))
+        for index in e.indices:
+x.appendChild(self._print(index))
+return x
+
     def _print_Basic(self, e):
         x = self.dom.createElement(self.mathml_tag(e))
         for arg in e.args:

=== Applied Patterns ===

=== Original Error Messages ===
Writing an `Indexed` object to MathML fails with a `TypeError` exception: `TypeError: 'Indexed' object is not iterable`:
TypeError                                 Traceback (most recent call last)
TypeError: 'Indexed' object is not iterable
It also fails for more complex expressions where at least one element is Indexed.

=== Test Verification Results ===
Tests Passed: False
