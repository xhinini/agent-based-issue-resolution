=== Original Patch ===
diff --git a/django/forms/fields.py b/django/forms/fields.py
index a977256525..4047e0520b 100644
--- a/django/forms/fields.py
+++ b/django/forms/fields.py
@@ -823,6 +823,16 @@ class TypedChoiceField(ChoiceField):
         self.coerce = coerce
         self.empty_value = empty_value
         super().__init__(**kwargs)
+        max_length = kwargs.get('max_length')
+        if max_length is not None:
+            for key, value in self.choices:
+                if isinstance(value, (list, tuple)):
+                    for k2, v2 in value:
+                        if len(k2) > max_length:
+                            raise ValidationError(_('Choice %(choice)s exceeds max_length of %(max_length)d') % {'choice': k2, 'max_length': max_length})
+                else:
+                    if len(key) > max_length:
+                        raise ValidationError(_('Choice %(choice)s exceeds max_length of %(max_length)d') % {'choice': key, 'max_length': max_length})
 
     def _coerce(self, value):
         """
@@ -892,6 +902,16 @@ class TypedMultipleChoiceField(MultipleChoiceField):
         self.coerce = coerce
         self.empty_value = kwargs.pop('empty_value', [])
         super().__init__(**kwargs)
+        max_length = kwargs.get('max_length')
+        if max_length is not None:
+            for key, value in self.choices:
+                if isinstance(value, (list, tuple)):
+                    for k2, v2 in value:
+                        if len(k2) > max_length:
+                            raise ValidationError(_('Choice %(choice)s exceeds max_length of %(max_length)d') % {'choice': k2, 'max_length': max_length})
+                else:
+                    if len(key) > max_length:
+                        raise ValidationError(_('Choice %(choice)s exceeds max_length of %(max_length)d') % {'choice': key, 'max_length': max_length})
 
     def _coerce(self, value):
         """

=== Fixed Patch ===
diff --git a/django/forms/fields.py b/django/forms/fields.py
index a977256525..4047e0520b 100644
--- a/django/forms/fields.py
+++ b/django/forms/fields.py
@@ -823,6 +823,16 @@ class TypedChoiceField(ChoiceField):
         self.coerce = coerce
         self.empty_value = empty_value
         super().__init__(**kwargs)
+max_length = kwargs.get('max_length')
+        if max_length is not None:
+            for key, value in self.choices:
+                if isinstance(value, (list, tuple)):
+                    for k2, v2 in value:
+                        if len(k2) > max_length:
+raise ValidationError(_('Choice %(choice)s exceeds max_length of %(max_length)d') % {'choice': k2, 'max_length': max_length})
+                else:
+                    if len(key) > max_length:
+raise ValidationError(_('Choice %(choice)s exceeds max_length of %(max_length)d') % {'choice': key, 'max_length': max_length})
 
     def _coerce(self, value):
         """
@@ -892,6 +902,16 @@ class TypedMultipleChoiceField(MultipleChoiceField):
         self.coerce = coerce
         self.empty_value = kwargs.pop('empty_value', [])
         super().__init__(**kwargs)
+max_length = kwargs.get('max_length')
+        if max_length is not None:
+            for key, value in self.choices:
+                if isinstance(value, (list, tuple)):
+                    for k2, v2 in value:
+                        if len(k2) > max_length:
+raise ValidationError(_('Choice %(choice)s exceeds max_length of %(max_length)d') % {'choice': k2, 'max_length': max_length})
+                else:
+                    if len(key) > max_length:
+raise ValidationError(_('Choice %(choice)s exceeds max_length of %(max_length)d') % {'choice': key, 'max_length': max_length})
 
     def _coerce(self, value):
         """

=== Applied Patterns ===

=== Original Error Messages ===
+ [<Error: level=40, msg="'max_length' is too small to fit the longest value in 'choices' (3 characters).", hint=None, obj=<django.db.models.fields.CharField: field>, id='fields.E009'>] ====================================================================== FAIL: test_choices_in_max_length (invalid_models_tests.test_ordinary_fields.CharFieldTests) [group] ----------------------------------------------------------------------
+ [<Error: level=40, msg="'max_length' is too small to fit the longest value in 'choices' (6 characters).", hint=None, obj=<django.db.models.fields.CharField: group>, id='fields.E009'>] ---------------------------------------------------------------------- Ran 47 tests in 0.033s FAILED (failures=2, skipped=2) Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')... + git checkout fee75d2aed4e58ada6567c464cfd22e89dc65f4a tests/invalid_models_tests/test_ordinary_fields.py Updated 1 path from 9044ec218d

=== Test Verification Results ===
Tests Passed: False
