=== Original Patch ===
diff --git a/check_versions.py b/check_versions.py
new file mode 100644
index 00000000..3e3ec72a
--- /dev/null
+++ b/check_versions.py
@@ -0,0 +1,5 @@
+import flask
+import werkzeug
+
+print(f"Flask version: {flask.__version__}")
+print(f"Werkzeug version: {werkzeug.__version__}")
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 00000000..45c7daa0
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,9 @@
+from flask import Flask, Blueprint
+
+app = Flask(__name__)
+
+bp = Blueprint('test_bp', __name__)
+
+app.register_blueprint(bp)
+
+print("Script completed successfully, no errors.")
diff --git a/src/flask/app.py b/src/flask/app.py
index f0f31486..95b1062e 100644
--- a/src/flask/app.py
+++ b/src/flask/app.py
@@ -1002,6 +1002,10 @@ class Flask(Scaffold):
 
     @setupmethod
     def register_blueprint(self, blueprint: "Blueprint", **options: t.Any) -> None:
+        if "." in blueprint.name:
+            raise ValueError(
+                f"Blueprint name '{blueprint.name}' may not contain a dot '.' character."
+            )
         """Register a :class:`~flask.Blueprint` on the application. Keyword
         arguments passed to this method will override the defaults set on the
         blueprint.
diff --git a/src/flask/helpers.py b/src/flask/helpers.py
index 585b4dea..3e01ec41 100644
--- a/src/flask/helpers.py
+++ b/src/flask/helpers.py
@@ -12,7 +12,7 @@ from threading import RLock
 import werkzeug.utils
 from werkzeug.exceptions import NotFound
 from werkzeug.routing import BuildError
-from werkzeug.urls import url_quote
+from urllib.parse import quote as url_quote
 
 from .globals import _app_ctx_stack
 from .globals import _request_ctx_stack

=== Fixed Patch ===
diff --git a/check_versions.py b/check_versions.py
index 00000000..3e3ec72a
--- /dev/null
+++ b/check_versions.py
@@ -0,0 +1,5 @@
+import flask
+import werkzeug
+
+print(f'Flask version: {flask.__version__}')
+print(f'Werkzeug version: {werkzeug.__version__}')
diff --git a/reproduce.py b/reproduce.py
index 00000000..45c7daa0
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,9 @@
+from flask import Flask, Blueprint
+
+app = Flask(__name__)
+
+bp = Blueprint('test_bp', __name__)
+
+app.register_blueprint(bp)
+
+print('Script completed successfully, no errors.')
diff --git a/src/flask/app.py b/src/flask/app.py
index f0f31486..95b1062e 100644
--- a/src/flask/app.py
+++ b/src/flask/app.py
@@ -1002,6 +1002,10 @@ class Flask(Scaffold):
 
     @setupmethod
     def register_blueprint(self, blueprint: "Blueprint", **options: t.Any) -> None:
+        if "." in blueprint.name:
+            raise ValueError(
+f"Blueprint name '{blueprint.name}' may not contain a dot '.' character."
+            )
         """Register a :class:`~flask.Blueprint` on the application. Keyword
         arguments passed to this method will override the defaults set on the
         blueprint.
diff --git a/src/flask/helpers.py b/src/flask/helpers.py
index 585b4dea..3e01ec41 100644
--- a/src/flask/helpers.py
+++ b/src/flask/helpers.py
@@ -12,7 +12,7 @@ from threading import RLock
 import werkzeug.utils
 from werkzeug.exceptions import NotFound
 from werkzeug.routing import BuildError
-from werkzeug.urls import url_quote
+from urllib.parse import quote as url_quote
 
 from .globals import _app_ctx_stack
 from .globals import _request_ctx_stack

=== Applied Patterns ===

=== Original Error Messages ===
FAILED tests/test_basic.py::test_max_cookie_size - TypeError: __init__() got ... FAILED tests/test_blueprints.py::test_blueprint_specific_error_handling - Dep... FAILED tests/test_blueprints.py::test_blueprint_specific_user_error_handling FAILED tests/test_blueprints.py::test_blueprint_app_error_handling - Deprecat... FAILED tests/test_blueprints.py::test_blueprint_prefix_slash[-/-/] - Deprecat... FAILED tests/test_blueprints.py::test_blueprint_prefix_slash[/--/] - Deprecat... FAILED tests/test_blueprints.py::test_blueprint_prefix_slash[/-/-/] - Depreca... FAILED tests/test_blueprints.py::test_blueprint_prefix_slash[/foo--/foo] - De... FAILED tests/test_blueprints.py::test_blueprint_prefix_slash[/foo/--/foo/] - ... FAILED tests/test_blueprints.py::test_blueprint_prefix_slash[-/bar-/bar] - De... FAILED tests/test_blueprints.py::test_blueprint_prefix_slash[/foo/-/bar-/foo/bar] FAILED tests/test_blueprints.py::test_blueprint_prefix_slash[/foo/-bar-/foo/bar] FAILED tests/test_blueprints.py::test_blueprint_prefix_slash[/foo-/bar-/foo/bar] FAILED tests/test_blueprints.py::test_blueprint_prefix_slash[/foo/-//bar-/foo/bar] FAILED tests/test_blueprints.py::test_blueprint_prefix_slash[/foo//-/bar-/foo/bar] FAILED tests/test_blueprints.py::test_blueprint_url_defaults - DeprecationWar... FAILED tests/test_blueprints.py::test_blueprint_url_processors - DeprecationW... FAILED tests/test_blueprints.py::test_default_static_max_age - DeprecationWar... FAILED tests/test_blueprints.py::test_dotted_name_not_allowed - Failed: DID N... FAILED tests/test_blueprints.py::test_dotted_names_from_app - DeprecationWarn... FAILED tests/test_blueprints.py::test_empty_url_defaults - DeprecationWarning... FAILED tests/test_blueprints.py::test_route_decorator_custom_endpoint - Depre... FAILED tests/test_blueprints.py::test_route_decorator_custom_endpoint_with_dots FAILED tests/test_blueprints.py::test_endpoint_decorator - DeprecationWarning... FAILED tests/test_blueprints.py::test_template_filter_with_template - Depreca... FAILED tests/test_blueprints.py::test_template_filter_after_route_with_template FAILED tests/test_blueprints.py::test_add_template_filter_with_template - Dep... FAILED tests/test_blueprints.py::test_template_filter_with_name_and_template FAILED tests/test_blueprints.py::test_add_template_filter_with_name_and_template FAILED tests/test_blueprints.py::test_template_test_with_template - Deprecati... FAILED tests/test_blueprints.py::test_template_test_after_route_with_template FAILED tests/test_blueprints.py::test_add_template_test_with_template - Depre... FAILED tests/test_blueprints.py::test_template_test_with_name_and_template - ... FAILED tests/test_blueprints.py::test_add_template_test_with_name_and_template FAILED tests/test_blueprints.py::test_context_processing - DeprecationWarning... FAILED tests/test_blueprints.py::test_request_processing - DeprecationWarning... FAILED tests/test_blueprints.py::test_app_request_processing - DeprecationWar... FAILED tests/test_blueprints.py::test_app_url_processors - DeprecationWarning... FAILED tests/test_blueprints.py::test_nested_blueprint - DeprecationWarning: ... ================== 118 failed, 50 passed, 11 errors in 6.55s =================== + git checkout d8c37f43724cd9fb0870f77877b7c4c7e38a19e0 tests/test_basic.py tests/test_blueprints.py Updated 2 paths from a6c31469
Raise error when blueprint name contains a dot
This is required since every dot is now significant since blueprints can be nested. An error was already added for endpoint names in 1.0, but should have been added for this as well.

=== Test Verification Results ===
Tests Passed: False
