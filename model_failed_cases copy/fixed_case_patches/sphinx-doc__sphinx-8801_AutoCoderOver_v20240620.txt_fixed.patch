=== Original Patch ===
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index dc413b5c2..f3e089296 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -685,7 +685,7 @@ class Documenter:
                     elif name in cls.__dict__:
                         return False
                     elif name in self.get_attr(cls, '__annotations__', {}):
-                        return False
+                        return True
                     elif isinstance(obj, ObjectMember) and obj.class_ is cls:
                         return False
 
@@ -779,9 +779,8 @@ class Documenter:
                 else:
                     keep = False
             else:
-                if (self.options.members is ALL and
-                        is_filtered_inherited_member(membername, obj)):
-                    keep = False
+                if is_filtered_inherited_member(membername, obj):
+                    keep = has_doc or self.options.undoc_members or isinstance(member, ObjectMember)
                 else:
                     # ignore undocumented members if :undoc-members: is not given
                     keep = has_doc or self.options.undoc_members

=== Fixed Patch ===
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index dc413b5c2..f3e089296 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -685,7 +685,7 @@ class Documenter:
                     elif name in cls.__dict__:
                         return False
                     elif name in self.get_attr(cls, '__annotations__', {}):
-                        return False
+return True
                     elif isinstance(obj, ObjectMember) and obj.class_ is cls:
                         return False
 
@@ -779,9 +779,8 @@ class Documenter:
                 else:
                     keep = False
             else:
-                if (self.options.members is ALL and
-                        is_filtered_inherited_member(membername, obj)):
-                    keep = False
+                if is_filtered_inherited_member(membername, obj):
+keep = has_doc or self.options.undoc_members or isinstance(member, ObjectMember)
                 else:
                     # ignore undocumented members if :undoc-members: is not given
                     keep = has_doc or self.options.undoc_members

=== Applied Patterns ===

=== Original Error Messages ===
`Bar.attr1` is not documented. It will be shown if I give `:undoc-members:` option to the autoclass directive call. It seems the attribute is treated as undocumented.

=== Test Verification Results ===
Tests Passed: False
