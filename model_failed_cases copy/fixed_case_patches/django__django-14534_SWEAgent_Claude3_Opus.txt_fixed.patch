=== Original Patch ===
diff --git a/django/forms/boundfield.py b/django/forms/boundfield.py
index 2ff8b0ee26..5879876fa3 100644
--- a/django/forms/boundfield.py
+++ b/django/forms/boundfield.py
@@ -42,9 +42,7 @@ class BoundField:
         This property is cached so that only one database query occurs when
         rendering ModelChoiceFields.
         """
-        id_ = self.field.widget.attrs.get('id') or self.auto_id
-        attrs = {'id': id_} if id_ else {}
-        attrs = self.build_widget_attrs(attrs)
+        attrs = self.build_widget_attrs({})
         return [
             BoundWidget(self.field.widget, widget, self.form.renderer)
             for widget in self.field.widget.subwidgets(self.html_name, self.value(), attrs=attrs)
@@ -277,7 +275,7 @@ class BoundWidget:
 
     @property
     def id_for_label(self):
-        return 'id_%s_%s' % (self.data['name'], self.data['index'])
+        return self.data['attrs'].get('id', 'id_%s_%s' % (self.data['name'], self.data['index']))
 
     @property
     def choice_label(self):
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..924aabb15a
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,15 @@
+from django import forms
+from django.conf import settings
+import django
+
+settings.configure()
+django.setup()
+
+class MyForm(forms.Form):
+    my_field = forms.MultipleChoiceField(
+        choices=[('a', 'A'), ('b', 'B'), ('c', 'C')],
+        widget=forms.CheckboxSelectMultiple,
+    )
+
+form = MyForm(auto_id='my_id_%s')
+print(form.as_p())

=== Fixed Patch ===
diff --git a/django/forms/boundfield.py b/django/forms/boundfield.py
index 2ff8b0ee26..5879876fa3 100644
--- a/django/forms/boundfield.py
+++ b/django/forms/boundfield.py
@@ -42,9 +42,7 @@ class BoundField:
         This property is cached so that only one database query occurs when
         rendering ModelChoiceFields.
         """
-        id_ = self.field.widget.attrs.get('id') or self.auto_id
-        attrs = {'id': id_} if id_ else {}
-        attrs = self.build_widget_attrs(attrs)
+attrs = self.build_widget_attrs({})
         return [
             BoundWidget(self.field.widget, widget, self.form.renderer)
             for widget in self.field.widget.subwidgets(self.html_name, self.value(), attrs=attrs)
@@ -277,7 +275,7 @@ class BoundWidget:
 
     @property
     def id_for_label(self):
-        return 'id_%s_%s' % (self.data['name'], self.data['index'])
+return self.data['attrs'].get('id', 'id_%s_%s' % (self.data['name'], self.data['index']))
 
     @property
     def choice_label(self):
diff --git a/reproduce_bug.py b/reproduce_bug.py
index 0000000000..924aabb15a
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,15 @@
+from django import forms
+from django.conf import settings
+import django
+
+settings.configure()
+django.setup()
+
+class MyForm(forms.Form):
+    my_field = forms.MultipleChoiceField(
+choices = ([('a', 'A'), ('b', 'B'), ('c', 'C')],)
+widget = (forms.CheckboxSelectMultiple,)
+    )
+
+form = MyForm(auto_id='my_id_%s')
+print(form.as_p())

=== Applied Patterns ===

=== Original Error Messages ===
AssertionError: 'id_field_0' != 'prefix_field_0' - id_field_0 ?  ^ + prefix_field_0 ? ++++ ^ ====================================================================== FAIL: test_form_with_iterable_boundfield_id (forms_tests.tests.test_forms.FormsTestCase) ----------------------------------------------------------------------
AssertionError: <input name="name" required type="radio" value="john"> != <input id="id_name_0" name="name" required type="radio" value="john"> - <input name="name" required type="radio" value="john"> + <input id="id_name_0" name="name" required type="radio" value="john"> ?       +++++++++++++++ ====================================================================== FAIL: test_forms_with_radio (forms_tests.tests.test_forms.FormsTestCase) ----------------------------------------------------------------------
AssertionError: <div class="myradio"> <label> <input name="language" required type="radio" value [truncated]... != <div class="myradio"> <label for="id_language_0"> <input id="id_language_0" name [truncated]... <div class="myradio"> - <label> + <label for="id_language_0"> - <input name="language" required type="radio" value="P">Python + <input id="id_language_0" name="language" required type="radio" value="P">Python ?       +++++++++++++++++++ </label> </div><div class="myradio"> - <label> + <label for="id_language_1"> - <input name="language" required type="radio" value="J">Java + <input id="id_language_1" name="language" required type="radio" value="J">Java ?       +++++++++++++++++++ </label> </div> ====================================================================== FAIL: test_iterable_boundfield_select (forms_tests.tests.test_forms.FormsTestCase) ----------------------------------------------------------------------
AssertionError: 'id_name_0' != None ---------------------------------------------------------------------- Ran 121 tests in 0.211s FAILED (failures=4) Testing against Django installed in '/testbed/django' Importing application forms_tests Found 121 test(s). Skipping setup of unused database(s): default, other. System check identified no issues (0 silenced). + git checkout 910ecd1b8df7678f45c3d507dde6bcb1faafa243 tests/forms_tests/tests/test_forms.py Updated 1 path from 7175c8df7b
Please note that this error only occurs when rendering the subwidgets of a widget of type CheckboxSelectMultiple. This has nothing to do with the method BoundField.id_for_label().

=== Test Verification Results ===
Tests Passed: False
