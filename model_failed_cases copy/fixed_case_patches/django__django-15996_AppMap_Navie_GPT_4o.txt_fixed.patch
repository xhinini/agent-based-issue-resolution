=== Original Patch ===
diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py
index 38da1e6ecc..566e799c44 100644
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -125,6 +125,15 @@ class EnumSerializer(BaseSerializer):
     def serialize(self):
         enum_class = self.value.__class__
         module = enum_class.__module__
+        if hasattr(enum_class, "_decompose"):
+            # Decompose combined flag values
+            _, combined_flags = enum._decompose(enum_class, self.value)
+            combined_names = " | ".join(
+                f"{module}.{enum_class.__qualname__}.{flag.name}"
+                for flag in combined_flags
+            )
+            if combined_names:
+                return combined_names, {"import %s" % module}
         return (
             "%s.%s[%r]" % (module, enum_class.__qualname__, self.value.name),
             {"import %s" % module},

=== Fixed Patch ===
diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py
index 38da1e6ecc..566e799c44 100644
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -125,6 +125,15 @@ class EnumSerializer(BaseSerializer):
     def serialize(self):
         enum_class = self.value.__class__
         module = enum_class.__module__
+        if hasattr(enum_class, "_decompose"):
+            # Decompose combined flag values
+_, combined_flags = enum._decompose(enum_class, self.value)
+            combined_names = " | ".join(
+f'{module}.{enum_class.__qualname__}.{flag.name}'
+                for flag in combined_flags
+            )
+            if combined_names:
+return (combined_names, {'import %s' % module})
         return (
             "%s.%s[%r]" % (module, enum_class.__qualname__, self.value.name),
             {"import %s" % module},

=== Applied Patterns ===

=== Original Error Messages ===
AssertionError: Tuples differ: ('migrations.test_writer.IntFlagEnum[None][32 chars]er'}) != ("migrations.test_writer.IntFlagEnum['A'] [73 chars]er'}) First differing element 0: 'migrations.test_writer.IntFlagEnum[None]' "migrations.test_writer.IntFlagEnum['A'] [37 chars]'B']" - ('migrations.test_writer.IntFlagEnum[None]', {'import migrations.test_writer'}) + ("migrations.test_writer.IntFlagEnum['A'] | " +  "migrations.test_writer.IntFlagEnum['B']", +  {'import migrations.test_writer'}) ---------------------------------------------------------------------- Ran 52 tests in 0.040s FAILED (failures=1) Testing against Django installed in '/testbed/django' Importing application migrations Found 52 test(s). Skipping setup of unused database(s): default, other. System check identified no issues (0 silenced). + git checkout b30c0081d4d8a31ab7dc7f72a4c7099af606ef29 tests/migrations/test_writer.py Updated 1 path from 17623c1b07
default=re.RegexFlag[None]

=== Test Verification Results ===
Tests Passed: False
