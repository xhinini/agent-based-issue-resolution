=== Original Patch ===
diff --git a/src/_pytest/_code/code.py b/src/_pytest/_code/code.py
index b19ee7c64..1e6ea681f 100644
--- a/src/_pytest/_code/code.py
+++ b/src/_pytest/_code/code.py
@@ -264,6 +264,8 @@ class TracebackEntry:
         else:
             if key is not None and astcache is not None:
                 astcache[key] = astnode
+        # Ensure the end line is not beyond the current line number
+        end = min(end, self.lineno + 1)
         return source[start:end]
 
     source = property(getsource)
diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py
index 456681ab2..937126aea 100644
--- a/src/_pytest/assertion/rewrite.py
+++ b/src/_pytest/assertion/rewrite.py
@@ -958,6 +958,8 @@ class AssertionRewriter(ast.NodeVisitor):
         for stmt in self.statements:
             for node in traverse_node(stmt):
                 ast.copy_location(node, assert_)
+                # Ensure the line number is set to the assertion line number
+                node.lineno = assert_.lineno
         return self.statements
 
     def visit_Name(self, name: ast.Name) -> Tuple[ast.Name, str]:

=== Fixed Patch ===
diff --git a/src/_pytest/_code/code.py b/src/_pytest/_code/code.py
index b19ee7c64..1e6ea681f 100644
--- a/src/_pytest/_code/code.py
+++ b/src/_pytest/_code/code.py
@@ -264,6 +264,8 @@ class TracebackEntry:
         else:
             if key is not None and astcache is not None:
                 astcache[key] = astnode
+        # Ensure the end line is not beyond the current line number
+end = min(end, self.lineno + 1)
         return source[start:end]
 
     source = property(getsource)
diff --git a/src/_pytest/assertion/rewrite.py b/src/_pytest/assertion/rewrite.py
index 456681ab2..937126aea 100644
--- a/src/_pytest/assertion/rewrite.py
+++ b/src/_pytest/assertion/rewrite.py
@@ -958,6 +958,8 @@ class AssertionRewriter(ast.NodeVisitor):
         for stmt in self.statements:
             for node in traverse_node(stmt):
                 ast.copy_location(node, assert_)
+                # Ensure the line number is set to the assertion line number
+node.lineno = assert_.lineno
         return self.statements
 
     def visit_Name(self, name: ast.Name) -> Tuple[ast.Name, str]:

=== Applied Patterns ===

=== Original Error Messages ===
Error message prints extra code line when using assert in python3.9

=== Test Verification Results ===
Tests Passed: False
