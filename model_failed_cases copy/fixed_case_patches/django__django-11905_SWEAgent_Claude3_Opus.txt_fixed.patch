=== Original Patch ===
diff --git a/django_settings.py b/django_settings.py
new file mode 100644
index 0000000000..4e537caafb
--- /dev/null
+++ b/django_settings.py
@@ -0,0 +1,10 @@
+SECRET_KEY = 'fake-key'
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+]
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': 'db.sqlite3',
+    }
+}
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..bd4a4d2c8d
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,22 @@
+import django
+from django.conf import settings
+
+django.setup()
+
+from django.db import models
+
+class TestModel(models.Model):
+    field = models.IntegerField(null=True)
+    class Meta:
+        app_label = 'myapp'
+
+from django.core.management import call_command
+
+call_command('migrate', verbosity=1, interactive=False)
+
+# Create some test instances
+results = TestModel.objects.filter(field__isnull=1)
+print(results.query)
+print(list(results))
+
+print("Script completed successfully, no errors.")

=== Fixed Patch ===
diff --git a/django_settings.py b/django_settings.py
index 0000000000..4e537caafb
--- /dev/null
+++ b/django_settings.py
@@ -0,0 +1,10 @@
+SECRET_KEY = 'fake-key'
+INSTALLED_APPS = [
+('django.contrib.contenttypes',)
+]
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': 'db.sqlite3',
+    }
+}
diff --git a/reproduce.py b/reproduce.py
index 0000000000..bd4a4d2c8d
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,22 @@
+import django
+from django.conf import settings
+
+django.setup()
+
+from django.db import models
+
+class TestModel(models.Model):
+field = models.IntegerField(null=True)
+    class Meta:
+app_label = 'myapp'
+
+from django.core.management import call_command
+
+call_command('migrate', verbosity=1, interactive=False)
+
+# Create some test instances
+results = TestModel.objects.filter(field__isnull=1)
+print(results.query)
+print(list(results))
+
+print('Script completed successfully, no errors.')

=== Applied Patterns ===

=== Original Error Messages ===
AssertionError: RemovedInDjango40Warning not triggered ====================================================================== FAIL: test_isnull_non_boolean_value (lookup.tests.LookupTests) (qs=<QuerySet []>) ----------------------------------------------------------------------
AssertionError: RemovedInDjango40Warning not triggered ====================================================================== FAIL: test_isnull_non_boolean_value (lookup.tests.LookupTests) (qs=<QuerySet []>) ----------------------------------------------------------------------
AssertionError: RemovedInDjango40Warning not triggered ====================================================================== FAIL: test_isnull_non_boolean_value (lookup.tests.LookupTests) (qs=<QuerySet []>) ----------------------------------------------------------------------
AssertionError: RemovedInDjango40Warning not triggered ---------------------------------------------------------------------- Ran 40 tests in 0.173s FAILED (failures=4) Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')... Testing against Django installed in '/testbed/django' Importing application lookup Skipping setup of unused database(s): other. Operations to perform: Synchronize unmigrated apps: auth, contenttypes, lookup, messages, sessions, staticfiles Apply all migrations: admin, sites Synchronizing apps without migrations: Creating tables... Creating table django_content_type Creating table auth_permission Creating table auth_group Creating table auth_user Creating table django_session Creating table lookup_alarm Creating table lookup_author Creating table lookup_article Creating table lookup_tag Creating table lookup_season Creating table lookup_game Creating table lookup_player Creating table lookup_product Creating table lookup_stock Creating table lookup_freebie Running deferred SQL... Running migrations: Applying admin.0001_initial... OK Applying admin.0002_logentry_remove_auto_add... OK Applying admin.0003_logentry_add_action_flag_choices... OK Applying sites.0001_initial... OK Applying sites.0002_alter_domain_unique... OK System check identified no issues (0 silenced). + git checkout 2f72480fbd27896c986c45193e1603e35c0b19a7 tests/lookup/models.py tests/lookup/tests.py Updated 2 paths from 5facf0d517
Prevent using __isnull lookup with non-boolean value.
__isnull should not allow for non-boolean values. Using truthy/falsey doesn't promote INNER JOIN to an OUTER JOIN but works fine for a simple queries. Using non-boolean values is â€‹undocumented and untested. IMO we should raise an error for non-boolean values to avoid confusion and for consistency.

=== Test Verification Results ===
Tests Passed: False
