# Instance ID: astropy__astropy-14365
# Model: Moatless Tools Claude-3.5 Sonnet

### Original Case Description and Gold Patch
# INSTANCE_ID: astropy__astropy-14365

### ISSUE TYPE
bug fix

### DESCRIPTION
ascii.qdp Table format assumes QDP commands are upper case
### Description

ascii.qdp assumes that commands in a QDP file are upper case, for example, for errors they must be "READ SERR 1 2" whereas QDP itself is not case sensitive and case use "read serr 1 2". 

As many QDP files are created by hand, the expectation that all commands be all-caps should be removed.

### Expected behavior

The following qdp file should read into a `Table` with errors, rather than crashing.
```
read serr 1 2 
1 0.5 1 0.5
```

### How to Reproduce

Create a QDP file:
```
> cat > test.qdp
read serr 1 2 
1 0.5 1 0.5
<EOF>

 > python
Python 3.10.9 (main, Dec  7 2022, 02:03:23) [Clang 13.0.0 (clang-1300.0.29.30)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> from astropy.table import Table
>>> Table.read('test.qdp',format='ascii.qdp')
WARNING: table_id not specified. Reading the first available table [astropy.io.ascii.qdp]
Traceback (most recent call last):
...
    raise ValueError(f'Unrecognized QDP line: {line}')
ValueError: Unrecognized QDP line: read serr 1 2
```

Running "qdp test.qdp" works just fine.


### Versions

Python 3.10.9 (main, Dec  7 2022, 02:03:23) [Clang 13.0.0 (clang-1300.0.29.30)]
astropy 5.1
Numpy 1.24.1
pyerfa 2.0.0.1
Scipy 1.10.0
Matplotlib 3.6.3



### GOLD_PATCH
diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py
--- a/astropy/io/ascii/qdp.py
+++ b/astropy/io/ascii/qdp.py
@@ -68,7 +68,7 @@ def _line_type(line, delimiter=None):
     _new_re = rf"NO({sep}NO)+"
     _data_re = rf"({_decimal_re}|NO|[-+]?nan)({sep}({_decimal_re}|NO|[-+]?nan))*)"
     _type_re = rf"^\s*((?P<command>{_command_re})|(?P<new>{_new_re})|(?P<data>{_data_re})?\s*(\!(?P<comment>.*))?\s*$"
-    _line_type_re = re.compile(_type_re)
+    _line_type_re = re.compile(_type_re, re.IGNORECASE)
     line = line.strip()
     if not line:
         return "comment"
@@ -306,7 +306,7 @@ def _get_tables_from_qdp_file(qdp_file, input_colnames=None, delimiter=None):
 
             values = []
             for v in line.split(delimiter):
-                if v == "NO":
+                if v.upper() == "NO":
                     values.append(np.ma.masked)
                 else:
                     # Understand if number is int or float


### MODEL_OUTPUTS




### Model Generated Patch
diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py
index 83a4f004a..5f3a3621e 100644
--- a/astropy/io/ascii/qdp.py
+++ b/astropy/io/ascii/qdp.py
@@ -60,7 +60,7 @@ def _line_type(line, delimiter=None):
     ValueError: Unrecognized QDP line...
     """
     _decimal_re = r"[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?"
-    _command_re = r"READ [TS]ERR(\s+[0-9]+)+"
+    _command_re = r"(?i)READ [TS]ERR(\s+[0-9]+)+"
 
     sep = delimiter
     if delimiter is None:


### Test Output
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   astropy/io/ascii/qdp.py
	modified:   pyproject.toml

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit 7269fa3e33e8d02485a647da91a5a2a60a06af61
Merge: 30869c3c7f 0996fa6323
Author: William Jamieson <wjamieson@stsci.edu>
Date:   Tue Apr 18 11:56:24 2023 -0400

    Merge pull request #14013 from WilliamJamieson/deprecate/Voigt1D_humlicek2_option

+ git diff 7269fa3e33e8d02485a647da91a5a2a60a06af61
diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py
index 83a4f004aa..5f3a3621ec 100644
--- a/astropy/io/ascii/qdp.py
+++ b/astropy/io/ascii/qdp.py
@@ -60,7 +60,7 @@ def _line_type(line, delimiter=None):
     ValueError: Unrecognized QDP line...
     """
     _decimal_re = r"[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?"
-    _command_re = r"READ [TS]ERR(\s+[0-9]+)+"
+    _command_re = r"(?i)READ [TS]ERR(\s+[0-9]+)+"
 
     sep = delimiter
     if delimiter is None:
diff --git a/pyproject.toml b/pyproject.toml
index 287a356a08..f2ee6c47cc 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e '.[test]' --verbose
Using pip 24.0 from /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/pip (python 3.9)
Obtaining file:///testbed
  Installing build dependencies: started
  Running command pip subprocess to install build dependencies
  Collecting setuptools==68.0.0
    Using cached setuptools-68.0.0-py3-none-any.whl.metadata (6.4 kB)
  Collecting setuptools_scm>=6.2
    Using cached setuptools_scm-8.1.0-py3-none-any.whl.metadata (6.6 kB)
  Collecting wheel
    Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB)
  Collecting cython==0.29.30
    Using cached Cython-0.29.30-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl.metadata (2.8 kB)
  Collecting oldest-supported-numpy
    Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB)
  Collecting extension-helpers
    Using cached extension_helpers-1.1.1-py3-none-any.whl.metadata (2.2 kB)
  Collecting packaging>=20 (from setuptools_scm>=6.2)
    Using cached packaging-24.1-py3-none-any.whl.metadata (3.2 kB)
  Collecting typing-extensions (from setuptools_scm>=6.2)
    Using cached typing_extensions-4.12.2-py3-none-any.whl.metadata (3.0 kB)
  Collecting tomli>=1 (from setuptools_scm>=6.2)
    Using cached tomli-2.0.1-py3-none-any.whl.metadata (8.9 kB)
  Collecting numpy==1.19.3 (from oldest-supported-numpy)
    Using cached numpy-1.19.3-cp39-cp39-manylinux2010_x86_64.whl.metadata (2.0 kB)
  Using cached setuptools-68.0.0-py3-none-any.whl (804 kB)
  Using cached Cython-0.29.30-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl (2.0 MB)
  Using cached setuptools_scm-8.1.0-py3-none-any.whl (43 kB)
  Using cached wheel-0.43.0-py3-none-any.whl (65 kB)
  Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB)
  Using cached numpy-1.19.3-cp39-cp39-manylinux2010_x86_64.whl (14.9 MB)
  Using cached extension_helpers-1.1.1-py3-none-any.whl (21 kB)
  Using cached packaging-24.1-py3-none-any.whl (53 kB)
  Using cached tomli-2.0.1-py3-none-any.whl (12 kB)
  Using cached typing_extensions-4.12.2-py3-none-any.whl (37 kB)
  Installing collected packages: wheel, typing-extensions, tomli, setuptools, packaging, numpy, cython, setuptools_scm, oldest-supported-numpy, extension-helpers
  ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.
  astropy 5.3.dev882+g7269fa3e33.d20240715 requires numpy>=1.21, but you have numpy 1.19.3 which is incompatible.
  Successfully installed cython-0.29.30 extension-helpers-1.1.1 numpy-1.19.3 oldest-supported-numpy-2023.12.21 packaging-24.1 setuptools-68.0.0 setuptools_scm-8.1.0 tomli-2.0.1 typing-extensions-4.12.2 wheel-0.43.0
  WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Running command Checking if build backend supports build_editable
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Running command Getting requirements to build editable
  running egg_info
  writing astropy.egg-info/PKG-INFO
  writing dependency_links to astropy.egg-info/dependency_links.txt
  writing entry points to astropy.egg-info/entry_points.txt
  writing requirements to astropy.egg-info/requires.txt
  writing top-level names to astropy.egg-info/top_level.txt
  reading manifest template 'MANIFEST.in'
  no previously-included directories found matching 'docs/_build'
  no previously-included directories found matching 'build'
  warning: no previously-included files matching '*.pyc' found anywhere in distribution
  warning: no previously-included files matching '*.o' found anywhere in distribution
  adding license file 'LICENSE.rst'
  writing manifest file 'astropy.egg-info/SOURCES.txt'
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Running command Preparing editable metadata (pyproject.toml)
  running dist_info
  creating /tmp/pip-modern-metadata-8mcv41yc/astropy.egg-info
  writing /tmp/pip-modern-metadata-8mcv41yc/astropy.egg-info/PKG-INFO
  writing dependency_links to /tmp/pip-modern-metadata-8mcv41yc/astropy.egg-info/dependency_links.txt
  writing entry points to /tmp/pip-modern-metadata-8mcv41yc/astropy.egg-info/entry_points.txt
  writing requirements to /tmp/pip-modern-metadata-8mcv41yc/astropy.egg-info/requires.txt
  writing top-level names to /tmp/pip-modern-metadata-8mcv41yc/astropy.egg-info/top_level.txt
  writing manifest file '/tmp/pip-modern-metadata-8mcv41yc/astropy.egg-info/SOURCES.txt'
  reading manifest template 'MANIFEST.in'
  no previously-included directories found matching 'docs/_build'
  no previously-included directories found matching 'build'
  warning: no previously-included files matching '*.pyc' found anywhere in distribution
  warning: no previously-included files matching '*.o' found anywhere in distribution
  adding license file 'LICENSE.rst'
  writing manifest file '/tmp/pip-modern-metadata-8mcv41yc/astropy.egg-info/SOURCES.txt'
  creating '/tmp/pip-modern-metadata-8mcv41yc/astropy-5.3.dev882+g7269fa3e33.d20240716.dist-info'
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: numpy>=1.21 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astropy==5.3.dev882+g7269fa3e33.d20240716) (1.25.2)
Requirement already satisfied: pyerfa>=2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astropy==5.3.dev882+g7269fa3e33.d20240716) (2.0.0.3)
Requirement already satisfied: PyYAML>=3.13 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astropy==5.3.dev882+g7269fa3e33.d20240716) (6.0.1)
Requirement already satisfied: packaging>=19.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astropy==5.3.dev882+g7269fa3e33.d20240716) (23.1)
Requirement already satisfied: pytest>=7.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astropy==5.3.dev882+g7269fa3e33.d20240716) (7.4.0)
Requirement already satisfied: pytest-doctestplus>=0.12 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astropy==5.3.dev882+g7269fa3e33.d20240716) (1.0.0)
Requirement already satisfied: pytest-astropy-header>=0.2.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astropy==5.3.dev882+g7269fa3e33.d20240716) (0.2.2)
Requirement already satisfied: pytest-astropy>=0.10 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astropy==5.3.dev882+g7269fa3e33.d20240716) (0.10.0)
Requirement already satisfied: pytest-xdist in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from astropy==5.3.dev882+g7269fa3e33.d20240716) (3.3.1)
Requirement already satisfied: iniconfig in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest>=7.0->astropy==5.3.dev882+g7269fa3e33.d20240716) (2.0.0)
Requirement already satisfied: pluggy<2.0,>=0.12 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest>=7.0->astropy==5.3.dev882+g7269fa3e33.d20240716) (1.3.0)
Requirement already satisfied: exceptiongroup>=1.0.0rc8 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest>=7.0->astropy==5.3.dev882+g7269fa3e33.d20240716) (1.1.3)
Requirement already satisfied: tomli>=1.0.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest>=7.0->astropy==5.3.dev882+g7269fa3e33.d20240716) (2.0.1)
Requirement already satisfied: pytest-remotedata>=0.3.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-astropy>=0.10->astropy==5.3.dev882+g7269fa3e33.d20240716) (0.4.0)
Requirement already satisfied: pytest-openfiles>=0.3.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-astropy>=0.10->astropy==5.3.dev882+g7269fa3e33.d20240716) (0.5.0)
Requirement already satisfied: pytest-arraydiff>=0.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-astropy>=0.10->astropy==5.3.dev882+g7269fa3e33.d20240716) (0.5.0)
Requirement already satisfied: pytest-filter-subpackage>=0.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-astropy>=0.10->astropy==5.3.dev882+g7269fa3e33.d20240716) (0.1.2)
Requirement already satisfied: pytest-cov>=2.3.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-astropy>=0.10->astropy==5.3.dev882+g7269fa3e33.d20240716) (4.1.0)
Requirement already satisfied: pytest-mock>=2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-astropy>=0.10->astropy==5.3.dev882+g7269fa3e33.d20240716) (3.11.1)
Requirement already satisfied: attrs>=19.2.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-astropy>=0.10->astropy==5.3.dev882+g7269fa3e33.d20240716) (23.1.0)
Requirement already satisfied: hypothesis>=5.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-astropy>=0.10->astropy==5.3.dev882+g7269fa3e33.d20240716) (6.82.6)
Requirement already satisfied: setuptools>=30.3.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-doctestplus>=0.12->astropy==5.3.dev882+g7269fa3e33.d20240716) (68.0.0)
Requirement already satisfied: execnet>=1.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-xdist->astropy==5.3.dev882+g7269fa3e33.d20240716) (2.0.2)
Requirement already satisfied: sortedcontainers<3.0.0,>=2.1.0 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from hypothesis>=5.1->pytest-astropy>=0.10->astropy==5.3.dev882+g7269fa3e33.d20240716) (2.4.0)
Requirement already satisfied: coverage>=5.2.1 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from coverage[toml]>=5.2.1->pytest-cov>=2.3.1->pytest-astropy>=0.10->astropy==5.3.dev882+g7269fa3e33.d20240716) (7.6.0)
Requirement already satisfied: psutil in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from pytest-openfiles>=0.3.1->pytest-astropy>=0.10->astropy==5.3.dev882+g7269fa3e33.d20240716) (5.9.5)
Checking if build backend supports build_editable: started
Running command Checking if build backend supports build_editable
Checking if build backend supports build_editable: finished with status 'done'
Building wheels for collected packages: astropy
  Building editable for astropy (pyproject.toml): started
  Running command Building editable for astropy (pyproject.toml)
  running editable_wheel
  creating /tmp/pip-wheel-4uoe_vqf/.tmp-v4czqjth/astropy.egg-info
  writing /tmp/pip-wheel-4uoe_vqf/.tmp-v4czqjth/astropy.egg-info/PKG-INFO
  writing dependency_links to /tmp/pip-wheel-4uoe_vqf/.tmp-v4czqjth/astropy.egg-info/dependency_links.txt
  writing entry points to /tmp/pip-wheel-4uoe_vqf/.tmp-v4czqjth/astropy.egg-info/entry_points.txt
  writing requirements to /tmp/pip-wheel-4uoe_vqf/.tmp-v4czqjth/astropy.egg-info/requires.txt
  writing top-level names to /tmp/pip-wheel-4uoe_vqf/.tmp-v4czqjth/astropy.egg-info/top_level.txt
  writing manifest file '/tmp/pip-wheel-4uoe_vqf/.tmp-v4czqjth/astropy.egg-info/SOURCES.txt'
  reading manifest template 'MANIFEST.in'
  no previously-included directories found matching 'docs/_build'
  no previously-included directories found matching 'build'
  warning: no previously-included files matching '*.pyc' found anywhere in distribution
  warning: no previously-included files matching '*.o' found anywhere in distribution
  adding license file 'LICENSE.rst'
  writing manifest file '/tmp/pip-wheel-4uoe_vqf/.tmp-v4czqjth/astropy.egg-info/SOURCES.txt'
  creating '/tmp/pip-wheel-4uoe_vqf/.tmp-v4czqjth/astropy-5.3.dev882+g7269fa3e33.d20240716.dist-info'
  creating /tmp/pip-wheel-4uoe_vqf/.tmp-v4czqjth/astropy-5.3.dev882+g7269fa3e33.d20240716.dist-info/WHEEL
  running build_py
  running build_ext
  skipping 'astropy/table/_np_utils.c' Cython extension (up-to-date)
  skipping 'astropy/table/_column_mixins.c' Cython extension (up-to-date)
  skipping 'astropy/convolution/_convolve.c' Cython extension (up-to-date)
  skipping 'astropy/timeseries/periodograms/bls/_impl.c' Cython extension (up-to-date)
  skipping 'astropy/io/ascii/cparser.c' Cython extension (up-to-date)
  skipping './astropy/stats/_stats.c' Cython extension (up-to-date)
  skipping './astropy/cosmology/flrw/scalar_inv_efuncs.c' Cython extension (up-to-date)
  skipping './astropy/timeseries/periodograms/lombscargle/implementations/cython_impl.c' Cython extension (up-to-date)
  skipping './astropy/io/fits/_utils.c' Cython extension (up-to-date)
  building 'astropy.table._np_utils' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/table
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/table/_np_utils.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/table/_np_utils.o
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1822,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/table/_np_utils.c:698:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: #warning "Using deprecated NumPy API, disable it with " "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
     17 | #warning "Using deprecated NumPy API, disable it with " \
        |  ^~~~~~~
  creating /tmp/tmpw2od1c14.build-lib/astropy
  creating /tmp/tmpw2od1c14.build-lib/astropy/table
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/table/_np_utils.o -o /tmp/tmpw2od1c14.build-lib/astropy/table/_np_utils.cpython-39-x86_64-linux-gnu.so
  building 'astropy.table._column_mixins' extension
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/table/_column_mixins.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/table/_column_mixins.o
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1822,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/table/_column_mixins.c:696:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: #warning "Using deprecated NumPy API, disable it with " "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
     17 | #warning "Using deprecated NumPy API, disable it with " \
        |  ^~~~~~~
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:21,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/table/_column_mixins.c:696:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/__multiarray_api.h:1463:1: warning: ‘_import_array’ defined but not used [-Wunused-function]
   1463 | _import_array(void)
        | ^~~~~~~~~~~~~
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/table/_column_mixins.o -o /tmp/tmpw2od1c14.build-lib/astropy/table/_column_mixins.cpython-39-x86_64-linux-gnu.so
  building 'astropy.convolution._convolve' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/convolution
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/convolution/src
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/convolution/_convolve.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/convolution/_convolve.o -UNDEBUG -fPIC
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1822,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/convolution/_convolve.c:698:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: #warning "Using deprecated NumPy API, disable it with " "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
     17 | #warning "Using deprecated NumPy API, disable it with " \
        |  ^~~~~~~
  In file included from astropy/convolution/_convolve.c:703:
  astropy/convolution/src/convolve.h:88:19: warning: inline function ‘convolve3d’ declared but never defined
     88 | FORCE_INLINE void convolve3d(DTYPE * const result,
        |                   ^~~~~~~~~~
  astropy/convolution/src/convolve.h:74:19: warning: inline function ‘convolve2d’ declared but never defined
     74 | FORCE_INLINE void convolve2d(DTYPE * const result,
        |                   ^~~~~~~~~~
  astropy/convolution/src/convolve.h:60:19: warning: inline function ‘convolve1d’ declared but never defined
     60 | FORCE_INLINE void convolve1d(DTYPE * const result,
        |                   ^~~~~~~~~~
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/convolution/src/convolve.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/convolution/src/convolve.o -UNDEBUG -fPIC
  creating /tmp/tmpw2od1c14.build-lib/astropy/convolution
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/convolution/_convolve.o /tmp/tmpaxk9pjk7.build-temp/astropy/convolution/src/convolve.o -o /tmp/tmpw2od1c14.build-lib/astropy/convolution/_convolve.cpython-39-x86_64-linux-gnu.so
  building 'astropy.time._parse_times' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/time
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/time/src
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/time/src/parse_times.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/time/src/parse_times.o
  creating /tmp/tmpw2od1c14.build-lib/astropy/time
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/time/src/parse_times.o -o /tmp/tmpw2od1c14.build-lib/astropy/time/_parse_times.cpython-39-x86_64-linux-gnu.so
  building 'astropy.wcs._wcs' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/wcs
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src
  creating /tmp/tmpaxk9pjk7.build-temp/cextern
  creating /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib
  creating /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C
  creating /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/flexed
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/astropy_wcs.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/astropy_wcs.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/astropy_wcs_api.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/astropy_wcs_api.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/distortion.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/distortion.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/distortion_wrap.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/distortion_wrap.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/docstrings.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/docstrings.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/pipeline.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/pipeline.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/pyutil.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/pyutil.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  In file included from /usr/include/string.h:535,
                   from /opt/miniconda3/envs/testbed/include/python3.9/Python.h:30,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:13,
                   from astropy/wcs/src/pyutil.c:9:
  In function ‘strncpy’,
      inlined from ‘set_pscards’ at astropy/wcs/src/pyutil.c:807:5:
  /usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:10: warning: ‘__builtin_strncpy’ specified bound 72 equals destination size [-Wstringop-truncation]
     95 |   return __builtin___strncpy_chk (__dest, __src, __len,
        |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     96 |                                   __glibc_objsize (__dest));
        |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/sip.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/sip.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/sip_wrap.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/sip_wrap.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/str_list_proxy.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/str_list_proxy.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/unit_list_proxy.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/unit_list_proxy.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/util.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/util.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/wcslib_auxprm_wrap.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_auxprm_wrap.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/wcslib_celprm_wrap.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_celprm_wrap.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  astropy/wcs/src/wcslib_celprm_wrap.c: In function ‘PyCelprm_deepcopy’:
  astropy/wcs/src/wcslib_celprm_wrap.c:167:22: warning: initialization of ‘PyCelprm *’ from incompatible pointer type ‘PyObject *’ {aka ‘struct _object *’} [-Wincompatible-pointer-types]
    167 |     PyCelprm* copy = PyCelprm_new(&PyCelprmType, NULL, NULL);
        |                      ^~~~~~~~~~~~
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_celprm_wrap.c:3:
  astropy/wcs/src/wcslib_celprm_wrap.c: In function ‘PyCelprm_set_ref’:
  astropy/wcs/src/wcslib_celprm_wrap.c:327:25: warning: passing argument 1 of ‘PyArray_DIMS’ from incompatible pointer type [-Wincompatible-pointer-types]
    327 |     size = PyArray_SIZE(value_array);
        |                         ^~~~~~~~~~~
        |                         |
        |                         PyObject * {aka struct _object *}
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:73:59: note: in definition of macro ‘PyArray_SIZE’
     73 | #define PyArray_SIZE(m) PyArray_MultiplyList(PyArray_DIMS(m), PyArray_NDIM(m))
        |                                                           ^
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_celprm_wrap.c:3:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1487:29: note: expected ‘PyArrayObject *’ {aka ‘struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1487 | PyArray_DIMS(PyArrayObject *arr)
        |              ~~~~~~~~~~~~~~~^~~
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_celprm_wrap.c:3:
  astropy/wcs/src/wcslib_celprm_wrap.c:327:25: warning: passing argument 1 of ‘PyArray_NDIM’ from incompatible pointer type [-Wincompatible-pointer-types]
    327 |     size = PyArray_SIZE(value_array);
        |                         ^~~~~~~~~~~
        |                         |
        |                         PyObject * {aka struct _object *}
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:73:76: note: in definition of macro ‘PyArray_SIZE’
     73 | #define PyArray_SIZE(m) PyArray_MultiplyList(PyArray_DIMS(m), PyArray_NDIM(m))
        |                                                                            ^
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_celprm_wrap.c:3:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1469:35: note: expected ‘const PyArrayObject *’ {aka ‘const struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1469 | PyArray_NDIM(const PyArrayObject *arr)
        |              ~~~~~~~~~~~~~~~~~~~~~^~~
  astropy/wcs/src/wcslib_celprm_wrap.c:348:35: warning: passing argument 1 of ‘PyArray_DATA’ from incompatible pointer type [-Wincompatible-pointer-types]
    348 |     data = (double*) PyArray_DATA(value_array);
        |                                   ^~~~~~~~~~~
        |                                   |
        |                                   PyObject * {aka struct _object *}
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_celprm_wrap.c:3:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1475:29: note: expected ‘PyArrayObject *’ {aka ‘struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1475 | PyArray_DATA(PyArrayObject *arr)
        |              ~~~~~~~~~~~~~~~^~~
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/wcslib_prjprm_wrap.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_prjprm_wrap.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  astropy/wcs/src/wcslib_prjprm_wrap.c: In function ‘PyPrjprm_deepcopy’:
  astropy/wcs/src/wcslib_prjprm_wrap.c:149:22: warning: initialization of ‘PyPrjprm *’ from incompatible pointer type ‘PyObject *’ {aka ‘struct _object *’} [-Wincompatible-pointer-types]
    149 |     PyPrjprm* copy = PyPrjprm_new(&PyPrjprmType, NULL, NULL);
        |                      ^~~~~~~~~~~~
  astropy/wcs/src/wcslib_prjprm_wrap.c: In function ‘PyPrjprm_get_pv’:
  astropy/wcs/src/wcslib_prjprm_wrap.c:517:14: warning: assignment to ‘PyObject *’ {aka ‘struct _object *’} from incompatible pointer type ‘PyArrayObject *’ {aka ‘struct tagPyArrayObject *’} [-Wincompatible-pointer-types]
    517 |     pv_array = (PyArrayObject*) PyArray_SimpleNew(1, &size, NPY_DOUBLE);
        |              ^
  astropy/wcs/src/wcslib_prjprm_wrap.c:519:33: warning: passing argument 1 of ‘PyArray_DATA’ from incompatible pointer type [-Wincompatible-pointer-types]
    519 |     pv = (double*) PyArray_DATA(pv_array);
        |                                 ^~~~~~~~
        |                                 |
        |                                 PyObject * {aka struct _object *}
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1475:29: note: expected ‘PyArrayObject *’ {aka ‘struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1475 | PyArray_DATA(PyArrayObject *arr)
        |              ~~~~~~~~~~~~~~~^~~
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  astropy/wcs/src/wcslib_prjprm_wrap.c: In function ‘PyPrjprm_set_pv’:
  astropy/wcs/src/wcslib_prjprm_wrap.c:556:25: warning: passing argument 1 of ‘PyArray_DIMS’ from incompatible pointer type [-Wincompatible-pointer-types]
    556 |     size = PyArray_SIZE(value_array);
        |                         ^~~~~~~~~~~
        |                         |
        |                         PyObject * {aka struct _object *}
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:73:59: note: in definition of macro ‘PyArray_SIZE’
     73 | #define PyArray_SIZE(m) PyArray_MultiplyList(PyArray_DIMS(m), PyArray_NDIM(m))
        |                                                           ^
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1487:29: note: expected ‘PyArrayObject *’ {aka ‘struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1487 | PyArray_DIMS(PyArrayObject *arr)
        |              ~~~~~~~~~~~~~~~^~~
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  astropy/wcs/src/wcslib_prjprm_wrap.c:556:25: warning: passing argument 1 of ‘PyArray_NDIM’ from incompatible pointer type [-Wincompatible-pointer-types]
    556 |     size = PyArray_SIZE(value_array);
        |                         ^~~~~~~~~~~
        |                         |
        |                         PyObject * {aka struct _object *}
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:73:76: note: in definition of macro ‘PyArray_SIZE’
     73 | #define PyArray_SIZE(m) PyArray_MultiplyList(PyArray_DIMS(m), PyArray_NDIM(m))
        |                                                                            ^
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1469:35: note: expected ‘const PyArrayObject *’ {aka ‘const struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1469 | PyArray_NDIM(const PyArrayObject *arr)
        |              ~~~~~~~~~~~~~~~~~~~~~^~~
  astropy/wcs/src/wcslib_prjprm_wrap.c:583:35: warning: passing argument 1 of ‘PyArray_DATA’ from incompatible pointer type [-Wincompatible-pointer-types]
    583 |     data = (double*) PyArray_DATA(value_array);
        |                                   ^~~~~~~~~~~
        |                                   |
        |                                   PyObject * {aka struct _object *}
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1475:29: note: expected ‘PyArrayObject *’ {aka ‘struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1475 | PyArray_DATA(PyArrayObject *arr)
        |              ~~~~~~~~~~~~~~~^~~
  astropy/wcs/src/wcslib_prjprm_wrap.c: In function ‘PyPrjprm_get_pvi’:
  astropy/wcs/src/wcslib_prjprm_wrap.c:615:15: warning: unused variable ‘value’ [-Wunused-variable]
    615 |     PyObject* value = NULL;
        |               ^~~~~
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  astropy/wcs/src/wcslib_prjprm_wrap.c: In function ‘PyPrjprm_set_pvi’:
  astropy/wcs/src/wcslib_prjprm_wrap.c:712:29: warning: passing argument 1 of ‘PyArray_DIMS’ from incompatible pointer type [-Wincompatible-pointer-types]
    712 |         size = PyArray_SIZE(value_array);
        |                             ^~~~~~~~~~~
        |                             |
        |                             PyObject * {aka struct _object *}
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:73:59: note: in definition of macro ‘PyArray_SIZE’
     73 | #define PyArray_SIZE(m) PyArray_MultiplyList(PyArray_DIMS(m), PyArray_NDIM(m))
        |                                                           ^
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1487:29: note: expected ‘PyArrayObject *’ {aka ‘struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1487 | PyArray_DIMS(PyArrayObject *arr)
        |              ~~~~~~~~~~~~~~~^~~
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  astropy/wcs/src/wcslib_prjprm_wrap.c:712:29: warning: passing argument 1 of ‘PyArray_NDIM’ from incompatible pointer type [-Wincompatible-pointer-types]
    712 |         size = PyArray_SIZE(value_array);
        |                             ^~~~~~~~~~~
        |                             |
        |                             PyObject * {aka struct _object *}
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:73:76: note: in definition of macro ‘PyArray_SIZE’
     73 | #define PyArray_SIZE(m) PyArray_MultiplyList(PyArray_DIMS(m), PyArray_NDIM(m))
        |                                                                            ^
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1469:35: note: expected ‘const PyArrayObject *’ {aka ‘const struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1469 | PyArray_NDIM(const PyArrayObject *arr)
        |              ~~~~~~~~~~~~~~~~~~~~~^~~
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  astropy/wcs/src/wcslib_prjprm_wrap.c:720:48: warning: passing argument 1 of ‘PyArray_DATA’ from incompatible pointer type [-Wincompatible-pointer-types]
    720 |         scalar = PyArray_ToScalar(PyArray_DATA(value_array), value_array);
        |                                                ^~~~~~~~~~~
        |                                                |
        |                                                PyObject * {aka struct _object *}
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:129:24: note: in definition of macro ‘PyArray_ToScalar’
    129 |         PyArray_Scalar(data, PyArray_DESCR(arr), (PyObject *)arr)
        |                        ^~~~
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1475:29: note: expected ‘PyArrayObject *’ {aka ‘struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1475 | PyArray_DATA(PyArrayObject *arr)
        |              ~~~~~~~~~~~~~~~^~~
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  astropy/wcs/src/wcslib_prjprm_wrap.c:720:62: warning: passing argument 1 of ‘PyArray_DESCR’ from incompatible pointer type [-Wincompatible-pointer-types]
    720 |         scalar = PyArray_ToScalar(PyArray_DATA(value_array), value_array);
        |                                                              ^~~~~~~~~~~
        |                                                              |
        |                                                              PyObject * {aka struct _object *}
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:129:44: note: in definition of macro ‘PyArray_ToScalar’
    129 |         PyArray_Scalar(data, PyArray_DESCR(arr), (PyObject *)arr)
        |                                            ^~~
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1517:30: note: expected ‘PyArrayObject *’ {aka ‘struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1517 | PyArray_DESCR(PyArrayObject *arr)
        |               ~~~~~~~~~~~~~~~^~~
  astropy/wcs/src/wcslib_prjprm_wrap.c: In function ‘PyPrjprm_get_w’:
  astropy/wcs/src/wcslib_prjprm_wrap.c:780:32: warning: passing argument 1 of ‘PyArray_DATA’ from incompatible pointer type [-Wincompatible-pointer-types]
    780 |     w = (double*) PyArray_DATA(w_array);
        |                                ^~~~~~~
        |                                |
        |                                PyObject * {aka struct _object *}
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:16,
                   from astropy/wcs/include/astropy_wcs/wcslib_celprm_wrap.h:4,
                   from astropy/wcs/src/wcslib_prjprm_wrap.c:5:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1475:29: note: expected ‘PyArrayObject *’ {aka ‘struct tagPyArrayObject *’} but argument is of type ‘PyObject *’ {aka ‘struct _object *’}
   1475 | PyArray_DATA(PyArrayObject *arr)
        |              ~~~~~~~~~~~~~~~^~~
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/wcslib_tabprm_wrap.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_tabprm_wrap.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/wcslib_wrap.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_wrap.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  In file included from /usr/include/string.h:535,
                   from /opt/miniconda3/envs/testbed/include/python3.9/Python.h:30,
                   from astropy/wcs/include/astropy_wcs/pyutil.h:13,
                   from astropy/wcs/include/astropy_wcs/wcslib_wrap.h:8,
                   from astropy/wcs/src/wcslib_wrap.c:8:
  In function ‘strncpy’,
      inlined from ‘PyWcsprm_sptr’ at astropy/wcs/src/wcslib_wrap.c:1756:3:
  /usr/include/x86_64-linux-gnu/bits/string_fortified.h:95:10: warning: ‘__builtin_strncpy’ specified bound 9 equals destination size [-Wstringop-truncation]
     95 |   return __builtin___strncpy_chk (__dest, __src, __len,
        |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     96 |                                   __glibc_objsize (__dest));
        |                                   ~~~~~~~~~~~~~~~~~~~~~~~~~
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/wcs/src/wcslib_wtbarr_wrap.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_wtbarr_wrap.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/cel.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/cel.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/dis.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/dis.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/flexed/wcsbth.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/flexed/wcsbth.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/flexed/wcspih.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/flexed/wcspih.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/flexed/wcsulex.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/flexed/wcsulex.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/flexed/wcsutrn.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/flexed/wcsutrn.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/lin.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/lin.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/log.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/log.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/prj.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/prj.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/spc.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/spc.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/sph.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/sph.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/spx.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/spx.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/tab.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/tab.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/wcs.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcs.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/wcserr.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcserr.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/wcsfix.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcsfix.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/wcshdr.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcshdr.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/wcsprintf.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcsprintf.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/wcsunits.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcsunits.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DECHO -DWCSTRIG_MACRO -DASTROPY_WCS_BUILD -D_GNU_SOURCE -DNDEBUG -DHAVE_SINCOS -UDEBUG -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -Icextern/wcslib/C -Iastropy/wcs/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/wcslib/C/wcsutil.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcsutil.o -std=gnu99 -Wno-strict-prototypes -Wno-unused-function -Wno-unused-value -Wno-uninitialized
  creating /tmp/tmpw2od1c14.build-lib/astropy/wcs
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/astropy_wcs.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/astropy_wcs_api.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/distortion.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/distortion_wrap.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/docstrings.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/pipeline.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/pyutil.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/sip.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/sip_wrap.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/str_list_proxy.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/unit_list_proxy.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/util.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_auxprm_wrap.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_celprm_wrap.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_prjprm_wrap.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_tabprm_wrap.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_wrap.o /tmp/tmpaxk9pjk7.build-temp/astropy/wcs/src/wcslib_wtbarr_wrap.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/cel.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/dis.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/flexed/wcsbth.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/flexed/wcspih.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/flexed/wcsulex.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/flexed/wcsutrn.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/lin.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/log.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/prj.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/spc.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/sph.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/spx.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/tab.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcs.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcserr.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcsfix.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcshdr.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcsprintf.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcsunits.o /tmp/tmpaxk9pjk7.build-temp/cextern/wcslib/C/wcsutil.o -o /tmp/tmpw2od1c14.build-lib/astropy/wcs/_wcs.cpython-39-x86_64-linux-gnu.so
  building 'astropy.utils._compiler' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/utils
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/utils/src
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/utils/src/compiler.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/utils/src/compiler.o
  creating /tmp/tmpw2od1c14.build-lib/astropy/utils
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/utils/src/compiler.o -o /tmp/tmpw2od1c14.build-lib/astropy/utils/_compiler.cpython-39-x86_64-linux-gnu.so
  building 'astropy.stats._fast_sigma_clip' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/stats
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/stats/src
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/stats/src/compute_bounds.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/stats/src/compute_bounds.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/stats/src/fast_sigma_clip.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/stats/src/fast_sigma_clip.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/stats/src/wirth_select.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/stats/src/wirth_select.o
  creating /tmp/tmpw2od1c14.build-lib/astropy/stats
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/stats/src/compute_bounds.o /tmp/tmpaxk9pjk7.build-temp/astropy/stats/src/fast_sigma_clip.o /tmp/tmpaxk9pjk7.build-temp/astropy/stats/src/wirth_select.o -o /tmp/tmpw2od1c14.build-lib/astropy/stats/_fast_sigma_clip.cpython-39-x86_64-linux-gnu.so
  building 'astropy.timeseries.periodograms.bls._impl' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/timeseries
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/timeseries/periodograms
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/timeseries/periodograms/bls
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/timeseries/periodograms/bls/_impl.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/timeseries/periodograms/bls/_impl.o
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1822,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/timeseries/periodograms/bls/_impl.c:698:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: #warning "Using deprecated NumPy API, disable it with " "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
     17 | #warning "Using deprecated NumPy API, disable it with " \
        |  ^~~~~~~
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/timeseries/periodograms/bls/bls.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/timeseries/periodograms/bls/bls.o
  astropy/timeseries/periodograms/bls/bls.c: In function ‘run_bls’:
  astropy/timeseries/periodograms/bls/bls.c:92: warning: ignoring ‘#pragma omp parallel’ [-Wunknown-pragmas]
     92 | #pragma omp parallel
        |
  astropy/timeseries/periodograms/bls/bls.c:116: warning: ignoring ‘#pragma omp parallel’ [-Wunknown-pragmas]
    116 |     #pragma omp parallel for reduction(+:sum_y), reduction(+:sum_ivar)
        |
  astropy/timeseries/periodograms/bls/bls.c:125: warning: ignoring ‘#pragma omp parallel’ [-Wunknown-pragmas]
    125 |     #pragma omp parallel for
        |
  creating /tmp/tmpw2od1c14.build-lib/astropy/timeseries
  creating /tmp/tmpw2od1c14.build-lib/astropy/timeseries/periodograms
  creating /tmp/tmpw2od1c14.build-lib/astropy/timeseries/periodograms/bls
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/timeseries/periodograms/bls/_impl.o /tmp/tmpaxk9pjk7.build-temp/astropy/timeseries/periodograms/bls/bls.o -o /tmp/tmpw2od1c14.build-lib/astropy/timeseries/periodograms/bls/_impl.cpython-39-x86_64-linux-gnu.so
  building 'astropy.io.votable.tablewriter' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/io
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/io/votable
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/io/votable/src
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -Iastropy/io/votable/src -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/io/votable/src/tablewriter.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/io/votable/src/tablewriter.o
  astropy/io/votable/src/tablewriter.c: In function ‘write_tabledata’:
  astropy/io/votable/src/tablewriter.c:270:30: warning: assignment discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
    270 |                 if ((str_tmp = PyUnicode_AsUTF8AndSize(str_val, &str_len)) == NULL) {
        |                              ^
  creating /tmp/tmpw2od1c14.build-lib/astropy/io
  creating /tmp/tmpw2od1c14.build-lib/astropy/io/votable
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/io/votable/src/tablewriter.o -o /tmp/tmpw2od1c14.build-lib/astropy/io/votable/tablewriter.cpython-39-x86_64-linux-gnu.so
  building 'astropy.io.ascii.cparser' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/io/ascii
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/io/ascii/src
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/io/ascii/cparser.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/io/ascii/cparser.o
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1822,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from astropy/io/ascii/cparser.c:698:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: #warning "Using deprecated NumPy API, disable it with " "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
     17 | #warning "Using deprecated NumPy API, disable it with " \
        |  ^~~~~~~
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/io/ascii/src/tokenizer.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/io/ascii/src/tokenizer.o
  astropy/io/ascii/src/tokenizer.c: In function ‘push’:
  astropy/io/ascii/src/tokenizer.c:124:54: warning: comparison of integer expressions of different signedness: ‘long int’ and ‘size_t’ {aka ‘long unsigned int’} [-Wsign-compare]
    124 |     if (self->col_ptrs[col] - self->output_cols[col] >=
        |                                                      ^~
  astropy/io/ascii/src/tokenizer.c: In function ‘tokenize’:
  astropy/io/ascii/src/tokenizer.c:424:42: warning: comparison of integer expressions of different signedness: ‘size_t’ {aka ‘long unsigned int’} and ‘int’ [-Wsign-compare]
    424 |                     if (self->source_pos == -1
        |                                          ^~
  creating /tmp/tmpw2od1c14.build-lib/astropy/io/ascii
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/io/ascii/cparser.o /tmp/tmpaxk9pjk7.build-temp/astropy/io/ascii/src/tokenizer.o -o /tmp/tmpw2od1c14.build-lib/astropy/io/ascii/cparser.cpython-39-x86_64-linux-gnu.so
  building 'astropy.io.fits._tiled_compression._compression' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/io/fits
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/io/fits/_tiled_compression
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/io/fits/_tiled_compression/src
  creating /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio
  creating /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio/lib
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I./astropy/io/fits/_tiled_compression/src -I/opt/miniconda3/envs/testbed/include/python3.9 -c ./astropy/io/fits/_tiled_compression/src/compression.c -o /tmp/tmpaxk9pjk7.build-temp/./astropy/io/fits/_tiled_compression/src/compression.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I./astropy/io/fits/_tiled_compression/src -I/opt/miniconda3/envs/testbed/include/python3.9 -c ./astropy/io/fits/_tiled_compression/src/unquantize.c -o /tmp/tmpaxk9pjk7.build-temp/./astropy/io/fits/_tiled_compression/src/unquantize.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I./astropy/io/fits/_tiled_compression/src -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/cfitsio/lib/fits_hcompress.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio/lib/fits_hcompress.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I./astropy/io/fits/_tiled_compression/src -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/cfitsio/lib/fits_hdecompress.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio/lib/fits_hdecompress.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I./astropy/io/fits/_tiled_compression/src -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/cfitsio/lib/pliocomp.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio/lib/pliocomp.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I./astropy/io/fits/_tiled_compression/src -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/cfitsio/lib/quantize.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio/lib/quantize.o
  cextern/cfitsio/lib/quantize.c: In function ‘quick_select_float’:
  cextern/cfitsio/lib/quantize.c:3722:5: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
   3722 |     if (hh <= median)
        |     ^~
  cextern/cfitsio/lib/quantize.c:3724:9: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
   3724 |         if (hh >= median)
        |         ^~
  cextern/cfitsio/lib/quantize.c: In function ‘quick_select_short’:
  cextern/cfitsio/lib/quantize.c:3778:5: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
   3778 |     if (hh <= median)
        |     ^~
  cextern/cfitsio/lib/quantize.c:3780:9: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
   3780 |         if (hh >= median)
        |         ^~
  cextern/cfitsio/lib/quantize.c: In function ‘quick_select_int’:
  cextern/cfitsio/lib/quantize.c:3834:5: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
   3834 |     if (hh <= median)
        |     ^~
  cextern/cfitsio/lib/quantize.c:3836:9: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
   3836 |         if (hh >= median)
        |         ^~
  cextern/cfitsio/lib/quantize.c: In function ‘quick_select_longlong’:
  cextern/cfitsio/lib/quantize.c:3890:5: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
   3890 |     if (hh <= median)
        |     ^~
  cextern/cfitsio/lib/quantize.c:3892:9: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
   3892 |         if (hh >= median)
        |         ^~
  cextern/cfitsio/lib/quantize.c: In function ‘quick_select_double’:
  cextern/cfitsio/lib/quantize.c:3946:5: warning: this ‘if’ clause does not guard... [-Wmisleading-indentation]
   3946 |     if (hh <= median)
        |     ^~
  cextern/cfitsio/lib/quantize.c:3948:9: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
   3948 |         if (hh >= median)
        |         ^~
  At top level:
  cextern/cfitsio/lib/quantize.c:3641:12: warning: ‘FnCompare_float’ defined but not used [-Wunused-function]
   3641 | static int FnCompare_float(const void *v1, const void *v2)
        |            ^~~~~~~~~~~~~~~
  cextern/cfitsio/lib/quantize.c:3628:12: warning: ‘FnCompare_int’ defined but not used [-Wunused-function]
   3628 | static int FnCompare_int(const void *v1, const void *v2)
        |            ^~~~~~~~~~~~~
  cextern/cfitsio/lib/quantize.c:3615:12: warning: ‘FnCompare_short’ defined but not used [-Wunused-function]
   3615 | static int FnCompare_short(const void *v1, const void *v2)
        |            ^~~~~~~~~~~~~~~
  cextern/cfitsio/lib/quantize.c:3494:12: warning: ‘FnNoise1_double’ defined but not used [-Wunused-function]
   3494 | static int FnNoise1_double
        |            ^~~~~~~~~~~~~~~
  cextern/cfitsio/lib/quantize.c:2487:12: warning: ‘FnNoise3_int’ defined but not used [-Wunused-function]
   2487 | static int FnNoise3_int
        |            ^~~~~~~~~~~~
  cextern/cfitsio/lib/quantize.c:2269:12: warning: ‘FnNoise3_short’ defined but not used [-Wunused-function]
   2269 | static int FnNoise3_short
        |            ^~~~~~~~~~~~~~
  cextern/cfitsio/lib/quantize.c: In function ‘fits_img_stats_short’:
  cextern/cfitsio/lib/quantize.c:510:41: warning: ‘ngood’ may be used uninitialized in this function [-Wmaybe-uninitialized]
    510 |                 if (ngoodpix) *ngoodpix = ngood;
        |                               ~~~~~~~~~~^~~~~~~
  cextern/cfitsio/lib/quantize.c: In function ‘fits_img_stats_int’:
  cextern/cfitsio/lib/quantize.c:569:41: warning: ‘ngood’ may be used uninitialized in this function [-Wmaybe-uninitialized]
    569 |                 if (ngoodpix) *ngoodpix = ngood;
        |                               ~~~~~~~~~~^~~~~~~
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I./astropy/io/fits/_tiled_compression/src -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/cfitsio/lib/ricecomp.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio/lib/ricecomp.o
  cextern/cfitsio/lib/ricecomp.c: In function ‘fits_rcomp’:
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:267:21: note: in expansion of macro ‘putcbuf’
    267 |                     putcbuf(lbitbuffer & 0xff,buffer);
        |                     ^~~~~~~
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:270:25: note: in expansion of macro ‘putcbuf’
    270 |                         putcbuf(0, buffer);
        |                         ^~~~~~~
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:286:25: note: in expansion of macro ‘putcbuf’
    286 |                         putcbuf((lbitbuffer>>(-lbits_to_go)) & 0xff,buffer);
        |                         ^~~~~~~
  cextern/cfitsio/lib/ricecomp.c: In function ‘fits_rcomp_short’:
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:498:21: note: in expansion of macro ‘putcbuf’
    498 |                     putcbuf(lbitbuffer & 0xff,buffer);
        |                     ^~~~~~~
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:500:25: note: in expansion of macro ‘putcbuf’
    500 |                         putcbuf(0, buffer);
        |                         ^~~~~~~
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:516:25: note: in expansion of macro ‘putcbuf’
    516 |                         putcbuf((lbitbuffer>>(-lbits_to_go)) & 0xff,buffer);
        |                         ^~~~~~~
  cextern/cfitsio/lib/ricecomp.c: In function ‘fits_rcomp_byte’:
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:723:21: note: in expansion of macro ‘putcbuf’
    723 |                     putcbuf(lbitbuffer & 0xff,buffer);
        |                     ^~~~~~~
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:725:25: note: in expansion of macro ‘putcbuf’
    725 |                         putcbuf(0, buffer);
        |                         ^~~~~~~
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:741:25: note: in expansion of macro ‘putcbuf’
    741 |                         putcbuf((lbitbuffer>>(-lbits_to_go)) & 0xff,buffer);
        |                         ^~~~~~~
  cextern/cfitsio/lib/ricecomp.c: In function ‘output_nbits’:
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:812:9: note: in expansion of macro ‘putcbuf’
    812 |         putcbuf(lbitbuffer & 0xff,buffer);
        |         ^~~~~~~
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:824:9: note: in expansion of macro ‘putcbuf’
    824 |         putcbuf((lbitbuffer>>(-lbits_to_go)) & 0xff,buffer);
        |         ^~~~~~~
  cextern/cfitsio/lib/ricecomp.c: In function ‘done_outputing_bits’:
  cextern/cfitsio/lib/ricecomp.c:70:48: warning: right-hand operand of comma expression has no effect [-Wunused-value]
     70 | #define putcbuf(c,mf)   ((*(mf->current)++ = c), 0)
        |                         ~~~~~~~~~~~~~~~~~~~~~~~^~~~
  cextern/cfitsio/lib/ricecomp.c:837:9: note: in expansion of macro ‘putcbuf’
    837 |         putcbuf(buffer->bitbuffer<<buffer->bits_to_go,buffer);
        |         ^~~~~~~
  creating /tmp/tmpw2od1c14.build-lib/astropy/io/fits
  creating /tmp/tmpw2od1c14.build-lib/astropy/io/fits/_tiled_compression
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/./astropy/io/fits/_tiled_compression/src/compression.o /tmp/tmpaxk9pjk7.build-temp/./astropy/io/fits/_tiled_compression/src/unquantize.o /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio/lib/fits_hcompress.o /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio/lib/fits_hdecompress.o /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio/lib/pliocomp.o /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio/lib/quantize.o /tmp/tmpaxk9pjk7.build-temp/cextern/cfitsio/lib/ricecomp.o -o /tmp/tmpw2od1c14.build-lib/astropy/io/fits/_tiled_compression/_compression.cpython-39-x86_64-linux-gnu.so
  building 'astropy.utils.xml._iterparser' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/utils/xml
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/utils/xml/src
  creating /tmp/tmpaxk9pjk7.build-temp/cextern/expat
  creating /tmp/tmpaxk9pjk7.build-temp/cextern/expat/lib
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DHAVE_EXPAT_CONFIG_H=1 -DBYTEORDER=1234 -DHAVE_UNISTD_H -Iastropy/utils/xml/src -Icextern/expat/lib -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/utils/xml/src/iterparse.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/utils/xml/src/iterparse.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DHAVE_EXPAT_CONFIG_H=1 -DBYTEORDER=1234 -DHAVE_UNISTD_H -Iastropy/utils/xml/src -Icextern/expat/lib -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/expat/lib/xmlparse.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/expat/lib/xmlparse.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DHAVE_EXPAT_CONFIG_H=1 -DBYTEORDER=1234 -DHAVE_UNISTD_H -Iastropy/utils/xml/src -Icextern/expat/lib -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/expat/lib/xmlrole.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/expat/lib/xmlrole.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DHAVE_EXPAT_CONFIG_H=1 -DBYTEORDER=1234 -DHAVE_UNISTD_H -Iastropy/utils/xml/src -Icextern/expat/lib -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/expat/lib/xmltok.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/expat/lib/xmltok.o
  In file included from cextern/expat/lib/xmltok.c:55:
  cextern/expat/lib/xmltok_ns.c: In function ‘findEncodingNS’:
  cextern/expat/lib/xmltok.h:272:10: warning: ‘buf’ may be used uninitialized [-Wmaybe-uninitialized]
    272 |   (((enc)->utf8Convert)(enc, fromP, fromLim, toP, toLim))
        |   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  cextern/expat/lib/xmltok_ns.c:95:3: note: in expansion of macro ‘XmlUtf8Convert’
     95 |   XmlUtf8Convert(enc, &ptr, end, &p, p + ENCODING_MAX - 1);
        |   ^~~~~~~~~~~~~~
  cextern/expat/lib/xmltok.h:272:10: note: by argument 5 of type ‘const char *’ to ‘enum XML_Convert_Result(const ENCODING *, const char **, const char *, char **, const char *)’ {aka ‘enum XML_Convert_Result(const struct encoding *, const char **, const char *, char **, const char *)’}
    272 |   (((enc)->utf8Convert)(enc, fromP, fromLim, toP, toLim))
        |   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  cextern/expat/lib/xmltok_ns.c:95:3: note: in expansion of macro ‘XmlUtf8Convert’
     95 |   XmlUtf8Convert(enc, &ptr, end, &p, p + ENCODING_MAX - 1);
        |   ^~~~~~~~~~~~~~
  In file included from cextern/expat/lib/xmltok.c:1657:
  cextern/expat/lib/xmltok_ns.c:92:8: note: ‘buf’ declared here
     92 |   char buf[ENCODING_MAX];
        |        ^~~
  In file included from cextern/expat/lib/xmltok.c:55:
  cextern/expat/lib/xmltok_ns.c: In function ‘findEncoding’:
  cextern/expat/lib/xmltok.h:272:10: warning: ‘buf’ may be used uninitialized [-Wmaybe-uninitialized]
    272 |   (((enc)->utf8Convert)(enc, fromP, fromLim, toP, toLim))
        |   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  cextern/expat/lib/xmltok_ns.c:95:3: note: in expansion of macro ‘XmlUtf8Convert’
     95 |   XmlUtf8Convert(enc, &ptr, end, &p, p + ENCODING_MAX - 1);
        |   ^~~~~~~~~~~~~~
  cextern/expat/lib/xmltok.h:272:10: note: by argument 5 of type ‘const char *’ to ‘enum XML_Convert_Result(const ENCODING *, const char **, const char *, char **, const char *)’ {aka ‘enum XML_Convert_Result(const struct encoding *, const char **, const char *, char **, const char *)’}
    272 |   (((enc)->utf8Convert)(enc, fromP, fromLim, toP, toLim))
        |   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  cextern/expat/lib/xmltok_ns.c:95:3: note: in expansion of macro ‘XmlUtf8Convert’
     95 |   XmlUtf8Convert(enc, &ptr, end, &p, p + ENCODING_MAX - 1);
        |   ^~~~~~~~~~~~~~
  In file included from cextern/expat/lib/xmltok.c:1646:
  cextern/expat/lib/xmltok_ns.c:92:8: note: ‘buf’ declared here
     92 |   char buf[ENCODING_MAX];
        |        ^~~
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -DHAVE_EXPAT_CONFIG_H=1 -DBYTEORDER=1234 -DHAVE_UNISTD_H -Iastropy/utils/xml/src -Icextern/expat/lib -I/opt/miniconda3/envs/testbed/include/python3.9 -c cextern/expat/lib/xmltok_impl.c -o /tmp/tmpaxk9pjk7.build-temp/cextern/expat/lib/xmltok_impl.o
  creating /tmp/tmpw2od1c14.build-lib/astropy/utils/xml
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/utils/xml/src/iterparse.o /tmp/tmpaxk9pjk7.build-temp/cextern/expat/lib/xmlparse.o /tmp/tmpaxk9pjk7.build-temp/cextern/expat/lib/xmlrole.o /tmp/tmpaxk9pjk7.build-temp/cextern/expat/lib/xmltok.o /tmp/tmpaxk9pjk7.build-temp/cextern/expat/lib/xmltok_impl.o -o /tmp/tmpw2od1c14.build-lib/astropy/utils/xml/_iterparser.cpython-39-x86_64-linux-gnu.so -Wl,--version-script=astropy/utils/xml/src/iterparse.map
  building 'astropy.stats._stats' extension
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c ./astropy/stats/_stats.c -o /tmp/tmpaxk9pjk7.build-temp/./astropy/stats/_stats.o
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1822,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from ./astropy/stats/_stats.c:698:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: #warning "Using deprecated NumPy API, disable it with " "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
     17 | #warning "Using deprecated NumPy API, disable it with " \
        |  ^~~~~~~
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/./astropy/stats/_stats.o -o /tmp/tmpw2od1c14.build-lib/astropy/stats/_stats.cpython-39-x86_64-linux-gnu.so
  building 'astropy.cosmology.flrw.scalar_inv_efuncs' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/cosmology
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/cosmology/flrw
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c ./astropy/cosmology/flrw/scalar_inv_efuncs.c -o /tmp/tmpaxk9pjk7.build-temp/./astropy/cosmology/flrw/scalar_inv_efuncs.o
  creating /tmp/tmpw2od1c14.build-lib/astropy/cosmology
  creating /tmp/tmpw2od1c14.build-lib/astropy/cosmology/flrw
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/./astropy/cosmology/flrw/scalar_inv_efuncs.o -o /tmp/tmpw2od1c14.build-lib/astropy/cosmology/flrw/scalar_inv_efuncs.cpython-39-x86_64-linux-gnu.so
  building 'astropy.timeseries.periodograms.lombscargle.implementations.cython_impl' extension
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/timeseries/periodograms/lombscargle
  creating /tmp/tmpaxk9pjk7.build-temp/astropy/timeseries/periodograms/lombscargle/implementations
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c ./astropy/timeseries/periodograms/lombscargle/implementations/cython_impl.c -o /tmp/tmpaxk9pjk7.build-temp/./astropy/timeseries/periodograms/lombscargle/implementations/cython_impl.o
  In file included from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarraytypes.h:1822,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/ndarrayobject.h:12,
                   from /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/arrayobject.h:4,
                   from ./astropy/timeseries/periodograms/lombscargle/implementations/cython_impl.c:698:
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include/numpy/npy_1_7_deprecated_api.h:17:2: warning: #warning "Using deprecated NumPy API, disable it with " "#define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION" [-Wcpp]
     17 | #warning "Using deprecated NumPy API, disable it with " \
        |  ^~~~~~~
  creating /tmp/tmpw2od1c14.build-lib/astropy/timeseries/periodograms/lombscargle
  creating /tmp/tmpw2od1c14.build-lib/astropy/timeseries/periodograms/lombscargle/implementations
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/./astropy/timeseries/periodograms/lombscargle/implementations/cython_impl.o -o /tmp/tmpw2od1c14.build-lib/astropy/timeseries/periodograms/lombscargle/implementations/cython_impl.cpython-39-x86_64-linux-gnu.so
  building 'astropy.io.fits._utils' extension
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/numpy/core/include -I/opt/miniconda3/envs/testbed/include/python3.9 -c ./astropy/io/fits/_utils.c -o /tmp/tmpaxk9pjk7.build-temp/./astropy/io/fits/_utils.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/./astropy/io/fits/_utils.o -o /tmp/tmpw2od1c14.build-lib/astropy/io/fits/_utils.cpython-39-x86_64-linux-gnu.so
  building 'astropy.compiler_version' extension
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -O2 -Wall -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -I/opt/miniconda3/envs/testbed/include -fPIC -O2 -isystem /opt/miniconda3/envs/testbed/include -fPIC -I/opt/miniconda3/envs/testbed/include/python3.9 -c astropy/_compiler.c -o /tmp/tmpaxk9pjk7.build-temp/astropy/_compiler.o
  gcc -pthread -B /opt/miniconda3/envs/testbed/compiler_compat -shared -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib -Wl,-rpath,/opt/miniconda3/envs/testbed/lib -Wl,-rpath-link,/opt/miniconda3/envs/testbed/lib -L/opt/miniconda3/envs/testbed/lib /tmp/tmpaxk9pjk7.build-temp/astropy/_compiler.o -o /tmp/tmpw2od1c14.build-lib/astropy/compiler_version.cpython-39-x86_64-linux-gnu.so
  copying /tmp/tmpw2od1c14.build-lib/astropy/table/_np_utils.cpython-39-x86_64-linux-gnu.so -> astropy/table
  copying /tmp/tmpw2od1c14.build-lib/astropy/table/_column_mixins.cpython-39-x86_64-linux-gnu.so -> astropy/table
  copying /tmp/tmpw2od1c14.build-lib/astropy/convolution/_convolve.cpython-39-x86_64-linux-gnu.so -> astropy/convolution
  copying /tmp/tmpw2od1c14.build-lib/astropy/time/_parse_times.cpython-39-x86_64-linux-gnu.so -> astropy/time
  copying /tmp/tmpw2od1c14.build-lib/astropy/wcs/_wcs.cpython-39-x86_64-linux-gnu.so -> astropy/wcs
  copying /tmp/tmpw2od1c14.build-lib/astropy/utils/_compiler.cpython-39-x86_64-linux-gnu.so -> astropy/utils
  copying /tmp/tmpw2od1c14.build-lib/astropy/stats/_fast_sigma_clip.cpython-39-x86_64-linux-gnu.so -> astropy/stats
  copying /tmp/tmpw2od1c14.build-lib/astropy/timeseries/periodograms/bls/_impl.cpython-39-x86_64-linux-gnu.so -> astropy/timeseries/periodograms/bls
  copying /tmp/tmpw2od1c14.build-lib/astropy/io/votable/tablewriter.cpython-39-x86_64-linux-gnu.so -> astropy/io/votable
  copying /tmp/tmpw2od1c14.build-lib/astropy/io/ascii/cparser.cpython-39-x86_64-linux-gnu.so -> astropy/io/ascii
  copying /tmp/tmpw2od1c14.build-lib/astropy/io/fits/_tiled_compression/_compression.cpython-39-x86_64-linux-gnu.so -> astropy/io/fits/_tiled_compression
  copying /tmp/tmpw2od1c14.build-lib/astropy/utils/xml/_iterparser.cpython-39-x86_64-linux-gnu.so -> astropy/utils/xml
  copying /tmp/tmpw2od1c14.build-lib/astropy/stats/_stats.cpython-39-x86_64-linux-gnu.so -> astropy/stats
  copying /tmp/tmpw2od1c14.build-lib/astropy/cosmology/flrw/scalar_inv_efuncs.cpython-39-x86_64-linux-gnu.so -> astropy/cosmology/flrw
  copying /tmp/tmpw2od1c14.build-lib/astropy/timeseries/periodograms/lombscargle/implementations/cython_impl.cpython-39-x86_64-linux-gnu.so -> astropy/timeseries/periodograms/lombscargle/implementations
  copying /tmp/tmpw2od1c14.build-lib/astropy/io/fits/_utils.cpython-39-x86_64-linux-gnu.so -> astropy/io/fits
  copying /tmp/tmpw2od1c14.build-lib/astropy/compiler_version.cpython-39-x86_64-linux-gnu.so -> astropy
  Editable install will be performed using a meta path finder.

  Options like `package-data`, `include/exclude-package-data` or
  `packages.find.exclude/include` may have no effect.

  adding '__editable___astropy_5_3_dev882_g7269fa3e33_d20240716_finder.py'
  adding '__editable__.astropy-5.3.dev882+g7269fa3e33.d20240716.pth'
  creating '/tmp/pip-wheel-4uoe_vqf/.tmp-v4czqjth/astropy-5.3.dev882+g7269fa3e33.d20240716-0.editable-cp39-cp39-linux_x86_64.whl' and adding '/tmp/tmpgdvixbxdastropy-5.3.dev882+g7269fa3e33.d20240716-0.editable-cp39-cp39-linux_x86_64.whl' to it
  adding 'astropy-5.3.dev882+g7269fa3e33.d20240716.dist-info/LICENSE.rst'
  adding 'astropy-5.3.dev882+g7269fa3e33.d20240716.dist-info/METADATA'
  adding 'astropy-5.3.dev882+g7269fa3e33.d20240716.dist-info/WHEEL'
  adding 'astropy-5.3.dev882+g7269fa3e33.d20240716.dist-info/entry_points.txt'
  adding 'astropy-5.3.dev882+g7269fa3e33.d20240716.dist-info/top_level.txt'
  adding 'astropy-5.3.dev882+g7269fa3e33.d20240716.dist-info/RECORD'
  /tmp/pip-build-env-1xryjsk_/overlay/lib/python3.9/site-packages/setuptools/command/editable_wheel.py:348: InformationOnly: Editable installation.
  !!

          ********************************************************************************
          Please be careful with folders in your working directory with the same
          name as your package as they may take precedence during imports.
          ********************************************************************************

  !!
    wheel_obj.write_files(unpacked)
  Building editable for astropy (pyproject.toml): finished with status 'done'
  Created wheel for astropy: filename=astropy-5.3.dev882+g7269fa3e33.d20240716-0.editable-cp39-cp39-linux_x86_64.whl size=7351 sha256=6ecbb60137d54eeab29c71fd99668457e2a8ecb2de682830d8ce3f381c840b81
  Stored in directory: /tmp/pip-ephem-wheel-cache-2350m2tx/wheels/7d/66/67/70d1ee2124ccf21d601c352e25cdca10f611f7c8b3f9ffb9e4
Successfully built astropy
Installing collected packages: astropy
  Attempting uninstall: astropy
    Found existing installation: astropy 5.3.dev882+g7269fa3e33.d20240715
    Uninstalling astropy-5.3.dev882+g7269fa3e33.d20240715:
      Removing file or directory /opt/miniconda3/envs/testbed/bin/fits2bitmap
      Removing file or directory /opt/miniconda3/envs/testbed/bin/fitscheck
      Removing file or directory /opt/miniconda3/envs/testbed/bin/fitsdiff
      Removing file or directory /opt/miniconda3/envs/testbed/bin/fitsheader
      Removing file or directory /opt/miniconda3/envs/testbed/bin/fitsinfo
      Removing file or directory /opt/miniconda3/envs/testbed/bin/samp_hub
      Removing file or directory /opt/miniconda3/envs/testbed/bin/showtable
      Removing file or directory /opt/miniconda3/envs/testbed/bin/volint
      Removing file or directory /opt/miniconda3/envs/testbed/bin/wcslint
      Removing file or directory /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/__editable__.astropy-5.3.dev882+g7269fa3e33.d20240715.pth
      Removing file or directory /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/__editable___astropy_5_3_dev882_g7269fa3e33_d20240715_finder.py
      Removing file or directory /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/__pycache__/__editable___astropy_5_3_dev882_g7269fa3e33_d20240715_finder.cpython-39.pyc
      Removing file or directory /opt/miniconda3/envs/testbed/lib/python3.9/site-packages/astropy-5.3.dev882+g7269fa3e33.d20240715.dist-info/
      Successfully uninstalled astropy-5.3.dev882+g7269fa3e33.d20240715
  changing mode of /opt/miniconda3/envs/testbed/bin/fits2bitmap to 755
  changing mode of /opt/miniconda3/envs/testbed/bin/fitscheck to 755
  changing mode of /opt/miniconda3/envs/testbed/bin/fitsdiff to 755
  changing mode of /opt/miniconda3/envs/testbed/bin/fitsheader to 755
  changing mode of /opt/miniconda3/envs/testbed/bin/fitsinfo to 755
  changing mode of /opt/miniconda3/envs/testbed/bin/samp_hub to 755
  changing mode of /opt/miniconda3/envs/testbed/bin/showtable to 755
  changing mode of /opt/miniconda3/envs/testbed/bin/volint to 755
  changing mode of /opt/miniconda3/envs/testbed/bin/wcslint to 755
Successfully installed astropy-5.3.dev882+g7269fa3e33.d20240716
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git checkout 7269fa3e33e8d02485a647da91a5a2a60a06af61 astropy/io/ascii/tests/test_qdp.py
Updated 0 paths from fe91cbe1a0
+ git apply -v -
Checking patch astropy/io/ascii/tests/test_qdp.py...
Applied patch astropy/io/ascii/tests/test_qdp.py cleanly.
+ pytest -rA --tb=long astropy/io/ascii/tests/test_qdp.py
<frozen importlib._bootstrap>:228: RuntimeWarning: numpy.ndarray size changed, may indicate binary incompatibility. Expected 80 from C header, got 96 from PyObject
[1m============================= test session starts ==============================[0m
platform linux -- Python 3.9.19, pytest-7.4.0, pluggy-1.3.0

Running tests with Astropy version 5.3.dev882+g7269fa3e33.d20240716.
Running tests in astropy/io/ascii/tests/test_qdp.py.

Date: 2024-07-16T09:47:53

Platform: Linux-6.5.0-1023-azure-x86_64-with-glibc2.35

Executable: /opt/miniconda3/envs/testbed/bin/python

Full Python Version: 
3.9.19 (main, May  6 2024, 19:43:03) 
[GCC 11.2.0]

encodings: sys: utf-8, locale: UTF-8, filesystem: utf-8
byteorder: little
float info: dig: 15, mant_dig: 15

Package versions: 
Numpy: 1.25.2
Scipy: not available
Matplotlib: not available
h5py: not available
Pandas: not available
PyERFA: 2.0.0.3
Cython: not available
Scikit-image: not available
asdf: not available
pyarrow: not available

Using Astropy options: remote_data: none.

CI: undefined
ARCH_ON_CI: undefined
IS_CRON: undefined

rootdir: /testbed
configfile: setup.cfg
plugins: mock-3.11.1, openfiles-0.5.0, hypothesis-6.82.6, cov-4.1.0, arraydiff-0.5.0, astropy-header-0.2.2, remotedata-0.4.0, astropy-0.10.0, doctestplus-1.0.0, filter-subpackage-0.1.2, xdist-3.3.1
collected 9 items

astropy/io/ascii/tests/test_qdp.py [31mF[0m[32m.[0m[31mF[0m[32m.[0m[32m.[0m[31mF[0m[32m.[0m[32m.[0m[32m.[0m[31m                             [100%][0m

=================================== FAILURES ===================================
[31m[1m________________________ test_get_tables_from_qdp_file _________________________[0m

tmp_path = PosixPath('/tmp/pytest-of-root/pytest-0/test_get_tables_from_qdp_file0')

    def test_get_tables_from_qdp_file(tmp_path):
        example_qdp = """
        ! Swift/XRT hardness ratio of trigger: XXXX, name: BUBU X-2
        ! Columns are as labelled
        READ TERR 1
        READ SERR 2
        ! WT -- hard data
        !MJD            Err (pos)       Err(neg)        Rate            Error
        53000.123456 2.37847222222222e-05    -2.37847222222222e-05   -0.212439       0.212439
        55045.099887 1.14467592592593e-05    -1.14467592592593e-05   0.000000        0.000000
        NO NO NO NO NO
        ! WT -- soft data
        !MJD            Err (pos)       Err(neg)        Rate            Error
        53000.123456 2.37847222222222e-05    -2.37847222222222e-05   0.726155        0.583890
        55045.099887 1.14467592592593e-05    -1.14467592592593e-05   2.410935        1.393592
        NO NO NO NO NO
        ! WT -- hardness ratio
        !MJD            Err (pos)       Err(neg)        Rate            Error
        53000.123456 2.37847222222222e-05    -2.37847222222222e-05   -0.292553       -0.374935
        55045.099887 1.14467592592593e-05    -1.14467592592593e-05   0.000000        -nan
        """
    
        path = tmp_path / "test.qdp"
    
        with open(path, "w") as fp:
            print(example_qdp, file=fp)
    
>       table0 = _read_table_qdp(fp.name, names=["MJD", "Rate"], table_id=0)

[1m[31mastropy/io/ascii/tests/test_qdp.py[0m:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

qdp_file = '/tmp/pytest-of-root/pytest-0/test_get_tables_from_qdp_file0/test.qdp'
names = ['MJD', 'Rate'], table_id = 0, delimiter = None

    def _read_table_qdp(qdp_file, names=None, table_id=None, delimiter=None):
        """Read a table from a QDP file.
    
        Parameters
        ----------
        qdp_file : str
            Input QDP file name
    
        Other Parameters
        ----------------
        names : list of str
            Name of data columns (defaults to ['col1', 'col2', ...]), _not_
            including error columns.
    
        table_id : int, default 0
            Number of the table to be read from the QDP file. This is useful
            when multiple tables present in the file. By default, the first is read.
    
        delimiter : str
            Any delimiter accepted by the `sep` argument of str.split()
    
        Returns
        -------
        tables : list of `~astropy.table.Table`
            List containing all the tables present inside the QDP file
        """
        if table_id is None:
            warnings.warn(
                "table_id not specified. Reading the first available table",
                AstropyUserWarning,
            )
            table_id = 0
    
>       tables = _get_tables_from_qdp_file(
            qdp_file, input_colnames=names, delimiter=delimiter
        )

[1m[31mastropy/io/ascii/qdp.py[0m:418: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

qdp_file = '/tmp/pytest-of-root/pytest-0/test_get_tables_from_qdp_file0/test.qdp'
input_colnames = ['MJD', 'Rate'], delimiter = None

    def _get_tables_from_qdp_file(qdp_file, input_colnames=None, delimiter=None):
        """Get all tables from a QDP file.
    
        Parameters
        ----------
        qdp_file : str
            Input QDP file name
    
        Other Parameters
        ----------------
        input_colnames : list of str
            Name of data columns (defaults to ['col1', 'col2', ...]), _not_
            including error columns.
        delimiter : str
            Delimiter for the values in the table.
    
        Returns
        -------
        list of `~astropy.table.Table`
            List containing all the tables present inside the QDP file
        """
        lines = _get_lines_from_file(qdp_file)
>       contents, ncol = _get_type_from_list_of_lines(lines, delimiter=delimiter)

[1m[31mastropy/io/ascii/qdp.py[0m:259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lines = ['', '! Swift/XRT hardness ratio of trigger: XXXX, name: BUBU X-2', '! Columns are as labelled', 'READ TERR 1', 'READ SERR 2', '! WT -- hard data', ...]
delimiter = None

    def _get_type_from_list_of_lines(lines, delimiter=None):
        """Read through the list of QDP file lines and label each line by type.
    
        Parameters
        ----------
        lines : list
            List containing one file line in each entry
    
        Returns
        -------
        contents : list
            List containing the type for each line (see `line_type_and_data`)
        ncol : int
            The number of columns in the data lines. Must be the same throughout
            the file
    
        Examples
        --------
        >>> line0 = "! A comment"
        >>> line1 = "543 12 456.0"
        >>> lines = [line0, line1]
        >>> types, ncol = _get_type_from_list_of_lines(lines)
        >>> types[0]
        'comment'
        >>> types[1]
        'data,3'
        >>> ncol
        3
        >>> lines.append("23")
        >>> _get_type_from_list_of_lines(lines)
        Traceback (most recent call last):
            ...
        ValueError: Inconsistent number of columns
        """
>       types = [_line_type(line, delimiter=delimiter) for line in lines]

[1m[31mastropy/io/ascii/qdp.py[0m:122: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x77cf60226640>

>   types = [_line_type(line, delimiter=delimiter) for line in lines]

[1m[31mastropy/io/ascii/qdp.py[0m:122: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

line = '', delimiter = None

    def _line_type(line, delimiter=None):
        """Interpret a QDP file line.
    
        Parameters
        ----------
        line : str
            a single line of the file
    
        Returns
        -------
        type : str
            Line type: "comment", "command", or "data"
    
        Examples
        --------
        >>> _line_type("READ SERR 3")
        'command'
        >>> _line_type(" \\n    !some gibberish")
        'comment'
        >>> _line_type("   ")
        'comment'
        >>> _line_type(" 21345.45")
        'data,1'
        >>> _line_type(" 21345.45 1.53e-3 1e-3 .04 NO nan")
        'data,6'
        >>> _line_type(" 21345.45,1.53e-3,1e-3,.04,NO,nan", delimiter=',')
        'data,6'
        >>> _line_type(" 21345.45 ! a comment to disturb")
        'data,1'
        >>> _line_type("NO NO NO NO NO")
        'new'
        >>> _line_type("NO,NO,NO,NO,NO", delimiter=',')
        'new'
        >>> _line_type("N O N NOON OON O")
        Traceback (most recent call last):
            ...
        ValueError: Unrecognized QDP line...
        >>> _line_type(" some non-comment gibberish")
        Traceback (most recent call last):
            ...
        ValueError: Unrecognized QDP line...
        """
        _decimal_re = r"[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?"
        _command_re = r"(?i)READ [TS]ERR(\s+[0-9]+)+"
    
        sep = delimiter
        if delimiter is None:
            sep = r"\s+"
        _new_re = rf"NO({sep}NO)+"
        _data_re = rf"({_decimal_re}|NO|[-+]?nan)({sep}({_decimal_re}|NO|[-+]?nan))*)"
        _type_re = rf"^\s*((?P<command>{_command_re})|(?P<new>{_new_re})|(?P<data>{_data_re})?\s*(\!(?P<comment>.*))?\s*$"
>       _line_type_re = re.compile(_type_re)

[1m[31mastropy/io/ascii/qdp.py[0m:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pattern = '^\\s*((?P<command>(?i)READ [TS]ERR(\\s+[0-9]+)+)|(?P<new>NO(\\s+NO)+)|(?P<data>([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan)(\\s+([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan))*))?\\s*(\\!(?P<comment>.*))?\\s*$'
flags = 0

    def compile(pattern, flags=0):
        "Compile a regular expression pattern, returning a Pattern object."
>       return _compile(pattern, flags)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/re.py[0m:252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pattern = '^\\s*((?P<command>(?i)READ [TS]ERR(\\s+[0-9]+)+)|(?P<new>NO(\\s+NO)+)|(?P<data>([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan)(\\s+([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan))*))?\\s*(\\!(?P<comment>.*))?\\s*$'
flags = 0

    def _compile(pattern, flags):
        # internal: compile pattern
        if isinstance(flags, RegexFlag):
            flags = flags.value
        try:
            return _cache[type(pattern), pattern, flags]
        except KeyError:
            pass
        if isinstance(pattern, Pattern):
            if flags:
                raise ValueError(
                    "cannot process flags argument with a compiled pattern")
            return pattern
        if not sre_compile.isstring(pattern):
            raise TypeError("first argument must be string or compiled pattern")
>       p = sre_compile.compile(pattern, flags)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/re.py[0m:304: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

p = '^\\s*((?P<command>(?i)READ [TS]ERR(\\s+[0-9]+)+)|(?P<new>NO(\\s+NO)+)|(?P<data>([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan)(\\s+([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan))*))?\\s*(\\!(?P<comment>.*))?\\s*$'
flags = 0

    def compile(p, flags=0):
        # internal: convert pattern list to internal format
    
        if isstring(p):
            pattern = p
>           p = sre_parse.parse(p, flags)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_compile.py[0m:788: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

str = '^\\s*((?P<command>(?i)READ [TS]ERR(\\s+[0-9]+)+)|(?P<new>NO(\\s+NO)+)|(?P<data>([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan)(\\s+([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan))*))?\\s*(\\!(?P<comment>.*))?\\s*$'
flags = 0, state = <sre_parse.State object at 0x77cf60226af0>

    def parse(str, flags=0, state=None):
        # parse 're' pattern into list of (opcode, argument) tuples
    
        source = Tokenizer(str)
    
        if state is None:
            state = State()
        state.flags = flags
        state.str = str
    
        try:
>           p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:955: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf602265e0>
state = <sre_parse.State object at 0x77cf60226af0>, verbose = 0, nested = 0

    def _parse_sub(source, state, verbose, nested):
        # parse an alternation: a|b|c
    
        items = []
        itemsappend = items.append
        sourcematch = source.match
        start = source.tell()
        while True:
>           itemsappend(_parse(source, state, verbose, nested + 1,
                               not nested and not items))

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:444: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf602265e0>
state = <sre_parse.State object at 0x77cf60226af0>, verbose = 0, nested = 1
first = True

    def _parse(source, state, verbose, nested, first=False):
        # parse a simple pattern
        subpattern = SubPattern(state)
    
        # precompute constants into local variables
        subpatternappend = subpattern.append
        sourceget = source.get
        sourcematch = source.match
        _len = len
        _ord = ord
    
        while True:
    
            this = source.next
            if this is None:
                break # end of pattern
            if this in "|)":
                break # end of subpattern
            sourceget()
    
            if verbose:
                # skip whitespace and comments
                if this in WHITESPACE:
                    continue
                if this == "#":
                    while True:
                        this = sourceget()
                        if this is None or this == "\n":
                            break
                    continue
    
            if this[0] == "\\":
                code = _escape(source, this, state)
                subpatternappend(code)
    
            elif this not in SPECIAL_CHARS:
                subpatternappend((LITERAL, _ord(this)))
    
            elif this == "[":
                here = source.tell() - 1
                # character set
                set = []
                setappend = set.append
    ##          if sourcematch(":"):
    ##              pass # handle character classes
                if source.next == '[':
                    import warnings
                    warnings.warn(
                        'Possible nested set at position %d' % source.tell(),
                        FutureWarning, stacklevel=nested + 6
                    )
                negate = sourcematch("^")
                # check remaining characters
                while True:
                    this = sourceget()
                    if this is None:
                        raise source.error("unterminated character set",
                                           source.tell() - here)
                    if this == "]" and set:
                        break
                    elif this[0] == "\\":
                        code1 = _class_escape(source, this)
                    else:
                        if set and this in '-&~|' and source.next == this:
                            import warnings
                            warnings.warn(
                                'Possible set %s at position %d' % (
                                    'difference' if this == '-' else
                                    'intersection' if this == '&' else
                                    'symmetric difference' if this == '~' else
                                    'union',
                                    source.tell() - 1),
                                FutureWarning, stacklevel=nested + 6
                            )
                        code1 = LITERAL, _ord(this)
                    if sourcematch("-"):
                        # potential range
                        that = sourceget()
                        if that is None:
                            raise source.error("unterminated character set",
                                               source.tell() - here)
                        if that == "]":
                            if code1[0] is IN:
                                code1 = code1[1][0]
                            setappend(code1)
                            setappend((LITERAL, _ord("-")))
                            break
                        if that[0] == "\\":
                            code2 = _class_escape(source, that)
                        else:
                            if that == '-':
                                import warnings
                                warnings.warn(
                                    'Possible set difference at position %d' % (
                                        source.tell() - 2),
                                    FutureWarning, stacklevel=nested + 6
                                )
                            code2 = LITERAL, _ord(that)
                        if code1[0] != LITERAL or code2[0] != LITERAL:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        lo = code1[1]
                        hi = code2[1]
                        if hi < lo:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        setappend((RANGE, (lo, hi)))
                    else:
                        if code1[0] is IN:
                            code1 = code1[1][0]
                        setappend(code1)
    
                set = _uniq(set)
                # XXX: <fl> should move set optimization to compiler!
                if _len(set) == 1 and set[0][0] is LITERAL:
                    # optimization
                    if negate:
                        subpatternappend((NOT_LITERAL, set[0][1]))
                    else:
                        subpatternappend(set[0])
                else:
                    if negate:
                        set.insert(0, (NEGATE, None))
                    # charmap optimization can't be added here because
                    # global flags still are not known
                    subpatternappend((IN, set))
    
            elif this in REPEAT_CHARS:
                # repeat previous item
                here = source.tell()
                if this == "?":
                    min, max = 0, 1
                elif this == "*":
                    min, max = 0, MAXREPEAT
    
                elif this == "+":
                    min, max = 1, MAXREPEAT
                elif this == "{":
                    if source.next == "}":
                        subpatternappend((LITERAL, _ord(this)))
                        continue
    
                    min, max = 0, MAXREPEAT
                    lo = hi = ""
                    while source.next in DIGITS:
                        lo += sourceget()
                    if sourcematch(","):
                        while source.next in DIGITS:
                            hi += sourceget()
                    else:
                        hi = lo
                    if not sourcematch("}"):
                        subpatternappend((LITERAL, _ord(this)))
                        source.seek(here)
                        continue
    
                    if lo:
                        min = int(lo)
                        if min >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                    if hi:
                        max = int(hi)
                        if max >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                        if max < min:
                            raise source.error("min repeat greater than max repeat",
                                               source.tell() - here)
                else:
                    raise AssertionError("unsupported quantifier %r" % (char,))
                # figure out which item to repeat
                if subpattern:
                    item = subpattern[-1:]
                else:
                    item = None
                if not item or item[0][0] is AT:
                    raise source.error("nothing to repeat",
                                       source.tell() - here + len(this))
                if item[0][0] in _REPEATCODES:
                    raise source.error("multiple repeat",
                                       source.tell() - here + len(this))
                if item[0][0] is SUBPATTERN:
                    group, add_flags, del_flags, p = item[0][1]
                    if group is None and not add_flags and not del_flags:
                        item = p
                if sourcematch("?"):
                    subpattern[-1] = (MIN_REPEAT, (min, max, item))
                else:
                    subpattern[-1] = (MAX_REPEAT, (min, max, item))
    
            elif this == ".":
                subpatternappend((ANY, None))
    
            elif this == "(":
                start = source.tell() - 1
                group = True
                name = None
                add_flags = 0
                del_flags = 0
                if sourcematch("?"):
                    # options
                    char = sourceget()
                    if char is None:
                        raise source.error("unexpected end of pattern")
                    if char == "P":
                        # python extensions
                        if sourcematch("<"):
                            # named group: skip forward to end of name
                            name = source.getuntil(">", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                        elif sourcematch("="):
                            # named backreference
                            name = source.getuntil(")", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            gid = state.groupdict.get(name)
                            if gid is None:
                                msg = "unknown group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            if not state.checkgroup(gid):
                                raise source.error("cannot refer to an open group",
                                                   len(name) + 1)
                            state.checklookbehindgroup(gid, source)
                            subpatternappend((GROUPREF, gid))
                            continue
    
                        else:
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            raise source.error("unknown extension ?P" + char,
                                               len(char) + 2)
                    elif char == ":":
                        # non-capturing group
                        group = None
                    elif char == "#":
                        # comment
                        while True:
                            if source.next is None:
                                raise source.error("missing ), unterminated comment",
                                                   source.tell() - start)
                            if sourceget() == ")":
                                break
                        continue
    
                    elif char in "=!<":
                        # lookahead assertions
                        dir = 1
                        if char == "<":
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            if char not in "=!":
                                raise source.error("unknown extension ?<" + char,
                                                   len(char) + 2)
                            dir = -1 # lookbehind
                            lookbehindgroups = state.lookbehindgroups
                            if lookbehindgroups is None:
                                state.lookbehindgroups = state.groups
                        p = _parse_sub(source, state, verbose, nested + 1)
                        if dir < 0:
                            if lookbehindgroups is None:
                                state.lookbehindgroups = None
                        if not sourcematch(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        if char == "=":
                            subpatternappend((ASSERT, (dir, p)))
                        else:
                            subpatternappend((ASSERT_NOT, (dir, p)))
                        continue
    
                    elif char == "(":
                        # conditional backreference group
                        condname = source.getuntil(")", "group name")
                        if condname.isidentifier():
                            condgroup = state.groupdict.get(condname)
                            if condgroup is None:
                                msg = "unknown group name %r" % condname
                                raise source.error(msg, len(condname) + 1)
                        else:
                            try:
                                condgroup = int(condname)
                                if condgroup < 0:
                                    raise ValueError
                            except ValueError:
                                msg = "bad character in group name %r" % condname
                                raise source.error(msg, len(condname) + 1) from None
                            if not condgroup:
                                raise source.error("bad group number",
                                                   len(condname) + 1)
                            if condgroup >= MAXGROUPS:
                                msg = "invalid group reference %d" % condgroup
                                raise source.error(msg, len(condname) + 1)
                            if condgroup not in state.grouprefpos:
                                state.grouprefpos[condgroup] = (
                                    source.tell() - len(condname) - 1
                                )
                        state.checklookbehindgroup(condgroup, source)
                        item_yes = _parse(source, state, verbose, nested + 1)
                        if source.match("|"):
                            item_no = _parse(source, state, verbose, nested + 1)
                            if source.next == "|":
                                raise source.error("conditional backref with more than two branches")
                        else:
                            item_no = None
                        if not source.match(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        subpatternappend((GROUPREF_EXISTS, (condgroup, item_yes, item_no)))
                        continue
    
                    elif char in FLAGS or char == "-":
                        # flags
                        flags = _parse_flags(source, state, char)
                        if flags is None:  # global flags
                            if not first or subpattern:
                                import warnings
                                warnings.warn(
                                    'Flags not at the start of the expression %r%s'
                                    ' but at position %d' % (
                                        source.string[:20],  # truncate long regexes
                                        ' (truncated)' if len(source.string) > 20 else '',
                                        start,
                                    ),
                                    DeprecationWarning, stacklevel=nested + 6
                                )
                            if (state.flags & SRE_FLAG_VERBOSE) and not verbose:
                                raise Verbose
                            continue
    
                        add_flags, del_flags = flags
                        group = None
                    else:
                        raise source.error("unknown extension ?" + char,
                                           len(char) + 1)
    
                # parse group contents
                if group is not None:
                    try:
                        group = state.opengroup(name)
                    except error as err:
                        raise source.error(err.msg, len(name) + 1) from None
                sub_verbose = ((verbose or (add_flags & SRE_FLAG_VERBOSE)) and
                               not (del_flags & SRE_FLAG_VERBOSE))
>               p = _parse_sub(source, state, sub_verbose, nested + 1)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:841: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf602265e0>
state = <sre_parse.State object at 0x77cf60226af0>, verbose = 0, nested = 2

    def _parse_sub(source, state, verbose, nested):
        # parse an alternation: a|b|c
    
        items = []
        itemsappend = items.append
        sourcematch = source.match
        start = source.tell()
        while True:
>           itemsappend(_parse(source, state, verbose, nested + 1,
                               not nested and not items))

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:444: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf602265e0>
state = <sre_parse.State object at 0x77cf60226af0>, verbose = 0, nested = 3
first = False

    def _parse(source, state, verbose, nested, first=False):
        # parse a simple pattern
        subpattern = SubPattern(state)
    
        # precompute constants into local variables
        subpatternappend = subpattern.append
        sourceget = source.get
        sourcematch = source.match
        _len = len
        _ord = ord
    
        while True:
    
            this = source.next
            if this is None:
                break # end of pattern
            if this in "|)":
                break # end of subpattern
            sourceget()
    
            if verbose:
                # skip whitespace and comments
                if this in WHITESPACE:
                    continue
                if this == "#":
                    while True:
                        this = sourceget()
                        if this is None or this == "\n":
                            break
                    continue
    
            if this[0] == "\\":
                code = _escape(source, this, state)
                subpatternappend(code)
    
            elif this not in SPECIAL_CHARS:
                subpatternappend((LITERAL, _ord(this)))
    
            elif this == "[":
                here = source.tell() - 1
                # character set
                set = []
                setappend = set.append
    ##          if sourcematch(":"):
    ##              pass # handle character classes
                if source.next == '[':
                    import warnings
                    warnings.warn(
                        'Possible nested set at position %d' % source.tell(),
                        FutureWarning, stacklevel=nested + 6
                    )
                negate = sourcematch("^")
                # check remaining characters
                while True:
                    this = sourceget()
                    if this is None:
                        raise source.error("unterminated character set",
                                           source.tell() - here)
                    if this == "]" and set:
                        break
                    elif this[0] == "\\":
                        code1 = _class_escape(source, this)
                    else:
                        if set and this in '-&~|' and source.next == this:
                            import warnings
                            warnings.warn(
                                'Possible set %s at position %d' % (
                                    'difference' if this == '-' else
                                    'intersection' if this == '&' else
                                    'symmetric difference' if this == '~' else
                                    'union',
                                    source.tell() - 1),
                                FutureWarning, stacklevel=nested + 6
                            )
                        code1 = LITERAL, _ord(this)
                    if sourcematch("-"):
                        # potential range
                        that = sourceget()
                        if that is None:
                            raise source.error("unterminated character set",
                                               source.tell() - here)
                        if that == "]":
                            if code1[0] is IN:
                                code1 = code1[1][0]
                            setappend(code1)
                            setappend((LITERAL, _ord("-")))
                            break
                        if that[0] == "\\":
                            code2 = _class_escape(source, that)
                        else:
                            if that == '-':
                                import warnings
                                warnings.warn(
                                    'Possible set difference at position %d' % (
                                        source.tell() - 2),
                                    FutureWarning, stacklevel=nested + 6
                                )
                            code2 = LITERAL, _ord(that)
                        if code1[0] != LITERAL or code2[0] != LITERAL:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        lo = code1[1]
                        hi = code2[1]
                        if hi < lo:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        setappend((RANGE, (lo, hi)))
                    else:
                        if code1[0] is IN:
                            code1 = code1[1][0]
                        setappend(code1)
    
                set = _uniq(set)
                # XXX: <fl> should move set optimization to compiler!
                if _len(set) == 1 and set[0][0] is LITERAL:
                    # optimization
                    if negate:
                        subpatternappend((NOT_LITERAL, set[0][1]))
                    else:
                        subpatternappend(set[0])
                else:
                    if negate:
                        set.insert(0, (NEGATE, None))
                    # charmap optimization can't be added here because
                    # global flags still are not known
                    subpatternappend((IN, set))
    
            elif this in REPEAT_CHARS:
                # repeat previous item
                here = source.tell()
                if this == "?":
                    min, max = 0, 1
                elif this == "*":
                    min, max = 0, MAXREPEAT
    
                elif this == "+":
                    min, max = 1, MAXREPEAT
                elif this == "{":
                    if source.next == "}":
                        subpatternappend((LITERAL, _ord(this)))
                        continue
    
                    min, max = 0, MAXREPEAT
                    lo = hi = ""
                    while source.next in DIGITS:
                        lo += sourceget()
                    if sourcematch(","):
                        while source.next in DIGITS:
                            hi += sourceget()
                    else:
                        hi = lo
                    if not sourcematch("}"):
                        subpatternappend((LITERAL, _ord(this)))
                        source.seek(here)
                        continue
    
                    if lo:
                        min = int(lo)
                        if min >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                    if hi:
                        max = int(hi)
                        if max >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                        if max < min:
                            raise source.error("min repeat greater than max repeat",
                                               source.tell() - here)
                else:
                    raise AssertionError("unsupported quantifier %r" % (char,))
                # figure out which item to repeat
                if subpattern:
                    item = subpattern[-1:]
                else:
                    item = None
                if not item or item[0][0] is AT:
                    raise source.error("nothing to repeat",
                                       source.tell() - here + len(this))
                if item[0][0] in _REPEATCODES:
                    raise source.error("multiple repeat",
                                       source.tell() - here + len(this))
                if item[0][0] is SUBPATTERN:
                    group, add_flags, del_flags, p = item[0][1]
                    if group is None and not add_flags and not del_flags:
                        item = p
                if sourcematch("?"):
                    subpattern[-1] = (MIN_REPEAT, (min, max, item))
                else:
                    subpattern[-1] = (MAX_REPEAT, (min, max, item))
    
            elif this == ".":
                subpatternappend((ANY, None))
    
            elif this == "(":
                start = source.tell() - 1
                group = True
                name = None
                add_flags = 0
                del_flags = 0
                if sourcematch("?"):
                    # options
                    char = sourceget()
                    if char is None:
                        raise source.error("unexpected end of pattern")
                    if char == "P":
                        # python extensions
                        if sourcematch("<"):
                            # named group: skip forward to end of name
                            name = source.getuntil(">", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                        elif sourcematch("="):
                            # named backreference
                            name = source.getuntil(")", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            gid = state.groupdict.get(name)
                            if gid is None:
                                msg = "unknown group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            if not state.checkgroup(gid):
                                raise source.error("cannot refer to an open group",
                                                   len(name) + 1)
                            state.checklookbehindgroup(gid, source)
                            subpatternappend((GROUPREF, gid))
                            continue
    
                        else:
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            raise source.error("unknown extension ?P" + char,
                                               len(char) + 2)
                    elif char == ":":
                        # non-capturing group
                        group = None
                    elif char == "#":
                        # comment
                        while True:
                            if source.next is None:
                                raise source.error("missing ), unterminated comment",
                                                   source.tell() - start)
                            if sourceget() == ")":
                                break
                        continue
    
                    elif char in "=!<":
                        # lookahead assertions
                        dir = 1
                        if char == "<":
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            if char not in "=!":
                                raise source.error("unknown extension ?<" + char,
                                                   len(char) + 2)
                            dir = -1 # lookbehind
                            lookbehindgroups = state.lookbehindgroups
                            if lookbehindgroups is None:
                                state.lookbehindgroups = state.groups
                        p = _parse_sub(source, state, verbose, nested + 1)
                        if dir < 0:
                            if lookbehindgroups is None:
                                state.lookbehindgroups = None
                        if not sourcematch(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        if char == "=":
                            subpatternappend((ASSERT, (dir, p)))
                        else:
                            subpatternappend((ASSERT_NOT, (dir, p)))
                        continue
    
                    elif char == "(":
                        # conditional backreference group
                        condname = source.getuntil(")", "group name")
                        if condname.isidentifier():
                            condgroup = state.groupdict.get(condname)
                            if condgroup is None:
                                msg = "unknown group name %r" % condname
                                raise source.error(msg, len(condname) + 1)
                        else:
                            try:
                                condgroup = int(condname)
                                if condgroup < 0:
                                    raise ValueError
                            except ValueError:
                                msg = "bad character in group name %r" % condname
                                raise source.error(msg, len(condname) + 1) from None
                            if not condgroup:
                                raise source.error("bad group number",
                                                   len(condname) + 1)
                            if condgroup >= MAXGROUPS:
                                msg = "invalid group reference %d" % condgroup
                                raise source.error(msg, len(condname) + 1)
                            if condgroup not in state.grouprefpos:
                                state.grouprefpos[condgroup] = (
                                    source.tell() - len(condname) - 1
                                )
                        state.checklookbehindgroup(condgroup, source)
                        item_yes = _parse(source, state, verbose, nested + 1)
                        if source.match("|"):
                            item_no = _parse(source, state, verbose, nested + 1)
                            if source.next == "|":
                                raise source.error("conditional backref with more than two branches")
                        else:
                            item_no = None
                        if not source.match(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        subpatternappend((GROUPREF_EXISTS, (condgroup, item_yes, item_no)))
                        continue
    
                    elif char in FLAGS or char == "-":
                        # flags
                        flags = _parse_flags(source, state, char)
                        if flags is None:  # global flags
                            if not first or subpattern:
                                import warnings
                                warnings.warn(
                                    'Flags not at the start of the expression %r%s'
                                    ' but at position %d' % (
                                        source.string[:20],  # truncate long regexes
                                        ' (truncated)' if len(source.string) > 20 else '',
                                        start,
                                    ),
                                    DeprecationWarning, stacklevel=nested + 6
                                )
                            if (state.flags & SRE_FLAG_VERBOSE) and not verbose:
                                raise Verbose
                            continue
    
                        add_flags, del_flags = flags
                        group = None
                    else:
                        raise source.error("unknown extension ?" + char,
                                           len(char) + 1)
    
                # parse group contents
                if group is not None:
                    try:
                        group = state.opengroup(name)
                    except error as err:
                        raise source.error(err.msg, len(name) + 1) from None
                sub_verbose = ((verbose or (add_flags & SRE_FLAG_VERBOSE)) and
                               not (del_flags & SRE_FLAG_VERBOSE))
>               p = _parse_sub(source, state, sub_verbose, nested + 1)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:841: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf602265e0>
state = <sre_parse.State object at 0x77cf60226af0>, verbose = 0, nested = 4

    def _parse_sub(source, state, verbose, nested):
        # parse an alternation: a|b|c
    
        items = []
        itemsappend = items.append
        sourcematch = source.match
        start = source.tell()
        while True:
>           itemsappend(_parse(source, state, verbose, nested + 1,
                               not nested and not items))

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:444: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf602265e0>
state = <sre_parse.State object at 0x77cf60226af0>, verbose = 0, nested = 5
first = False

    def _parse(source, state, verbose, nested, first=False):
        # parse a simple pattern
        subpattern = SubPattern(state)
    
        # precompute constants into local variables
        subpatternappend = subpattern.append
        sourceget = source.get
        sourcematch = source.match
        _len = len
        _ord = ord
    
        while True:
    
            this = source.next
            if this is None:
                break # end of pattern
            if this in "|)":
                break # end of subpattern
            sourceget()
    
            if verbose:
                # skip whitespace and comments
                if this in WHITESPACE:
                    continue
                if this == "#":
                    while True:
                        this = sourceget()
                        if this is None or this == "\n":
                            break
                    continue
    
            if this[0] == "\\":
                code = _escape(source, this, state)
                subpatternappend(code)
    
            elif this not in SPECIAL_CHARS:
                subpatternappend((LITERAL, _ord(this)))
    
            elif this == "[":
                here = source.tell() - 1
                # character set
                set = []
                setappend = set.append
    ##          if sourcematch(":"):
    ##              pass # handle character classes
                if source.next == '[':
                    import warnings
                    warnings.warn(
                        'Possible nested set at position %d' % source.tell(),
                        FutureWarning, stacklevel=nested + 6
                    )
                negate = sourcematch("^")
                # check remaining characters
                while True:
                    this = sourceget()
                    if this is None:
                        raise source.error("unterminated character set",
                                           source.tell() - here)
                    if this == "]" and set:
                        break
                    elif this[0] == "\\":
                        code1 = _class_escape(source, this)
                    else:
                        if set and this in '-&~|' and source.next == this:
                            import warnings
                            warnings.warn(
                                'Possible set %s at position %d' % (
                                    'difference' if this == '-' else
                                    'intersection' if this == '&' else
                                    'symmetric difference' if this == '~' else
                                    'union',
                                    source.tell() - 1),
                                FutureWarning, stacklevel=nested + 6
                            )
                        code1 = LITERAL, _ord(this)
                    if sourcematch("-"):
                        # potential range
                        that = sourceget()
                        if that is None:
                            raise source.error("unterminated character set",
                                               source.tell() - here)
                        if that == "]":
                            if code1[0] is IN:
                                code1 = code1[1][0]
                            setappend(code1)
                            setappend((LITERAL, _ord("-")))
                            break
                        if that[0] == "\\":
                            code2 = _class_escape(source, that)
                        else:
                            if that == '-':
                                import warnings
                                warnings.warn(
                                    'Possible set difference at position %d' % (
                                        source.tell() - 2),
                                    FutureWarning, stacklevel=nested + 6
                                )
                            code2 = LITERAL, _ord(that)
                        if code1[0] != LITERAL or code2[0] != LITERAL:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        lo = code1[1]
                        hi = code2[1]
                        if hi < lo:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        setappend((RANGE, (lo, hi)))
                    else:
                        if code1[0] is IN:
                            code1 = code1[1][0]
                        setappend(code1)
    
                set = _uniq(set)
                # XXX: <fl> should move set optimization to compiler!
                if _len(set) == 1 and set[0][0] is LITERAL:
                    # optimization
                    if negate:
                        subpatternappend((NOT_LITERAL, set[0][1]))
                    else:
                        subpatternappend(set[0])
                else:
                    if negate:
                        set.insert(0, (NEGATE, None))
                    # charmap optimization can't be added here because
                    # global flags still are not known
                    subpatternappend((IN, set))
    
            elif this in REPEAT_CHARS:
                # repeat previous item
                here = source.tell()
                if this == "?":
                    min, max = 0, 1
                elif this == "*":
                    min, max = 0, MAXREPEAT
    
                elif this == "+":
                    min, max = 1, MAXREPEAT
                elif this == "{":
                    if source.next == "}":
                        subpatternappend((LITERAL, _ord(this)))
                        continue
    
                    min, max = 0, MAXREPEAT
                    lo = hi = ""
                    while source.next in DIGITS:
                        lo += sourceget()
                    if sourcematch(","):
                        while source.next in DIGITS:
                            hi += sourceget()
                    else:
                        hi = lo
                    if not sourcematch("}"):
                        subpatternappend((LITERAL, _ord(this)))
                        source.seek(here)
                        continue
    
                    if lo:
                        min = int(lo)
                        if min >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                    if hi:
                        max = int(hi)
                        if max >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                        if max < min:
                            raise source.error("min repeat greater than max repeat",
                                               source.tell() - here)
                else:
                    raise AssertionError("unsupported quantifier %r" % (char,))
                # figure out which item to repeat
                if subpattern:
                    item = subpattern[-1:]
                else:
                    item = None
                if not item or item[0][0] is AT:
                    raise source.error("nothing to repeat",
                                       source.tell() - here + len(this))
                if item[0][0] in _REPEATCODES:
                    raise source.error("multiple repeat",
                                       source.tell() - here + len(this))
                if item[0][0] is SUBPATTERN:
                    group, add_flags, del_flags, p = item[0][1]
                    if group is None and not add_flags and not del_flags:
                        item = p
                if sourcematch("?"):
                    subpattern[-1] = (MIN_REPEAT, (min, max, item))
                else:
                    subpattern[-1] = (MAX_REPEAT, (min, max, item))
    
            elif this == ".":
                subpatternappend((ANY, None))
    
            elif this == "(":
                start = source.tell() - 1
                group = True
                name = None
                add_flags = 0
                del_flags = 0
                if sourcematch("?"):
                    # options
                    char = sourceget()
                    if char is None:
                        raise source.error("unexpected end of pattern")
                    if char == "P":
                        # python extensions
                        if sourcematch("<"):
                            # named group: skip forward to end of name
                            name = source.getuntil(">", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                        elif sourcematch("="):
                            # named backreference
                            name = source.getuntil(")", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            gid = state.groupdict.get(name)
                            if gid is None:
                                msg = "unknown group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            if not state.checkgroup(gid):
                                raise source.error("cannot refer to an open group",
                                                   len(name) + 1)
                            state.checklookbehindgroup(gid, source)
                            subpatternappend((GROUPREF, gid))
                            continue
    
                        else:
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            raise source.error("unknown extension ?P" + char,
                                               len(char) + 2)
                    elif char == ":":
                        # non-capturing group
                        group = None
                    elif char == "#":
                        # comment
                        while True:
                            if source.next is None:
                                raise source.error("missing ), unterminated comment",
                                                   source.tell() - start)
                            if sourceget() == ")":
                                break
                        continue
    
                    elif char in "=!<":
                        # lookahead assertions
                        dir = 1
                        if char == "<":
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            if char not in "=!":
                                raise source.error("unknown extension ?<" + char,
                                                   len(char) + 2)
                            dir = -1 # lookbehind
                            lookbehindgroups = state.lookbehindgroups
                            if lookbehindgroups is None:
                                state.lookbehindgroups = state.groups
                        p = _parse_sub(source, state, verbose, nested + 1)
                        if dir < 0:
                            if lookbehindgroups is None:
                                state.lookbehindgroups = None
                        if not sourcematch(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        if char == "=":
                            subpatternappend((ASSERT, (dir, p)))
                        else:
                            subpatternappend((ASSERT_NOT, (dir, p)))
                        continue
    
                    elif char == "(":
                        # conditional backreference group
                        condname = source.getuntil(")", "group name")
                        if condname.isidentifier():
                            condgroup = state.groupdict.get(condname)
                            if condgroup is None:
                                msg = "unknown group name %r" % condname
                                raise source.error(msg, len(condname) + 1)
                        else:
                            try:
                                condgroup = int(condname)
                                if condgroup < 0:
                                    raise ValueError
                            except ValueError:
                                msg = "bad character in group name %r" % condname
                                raise source.error(msg, len(condname) + 1) from None
                            if not condgroup:
                                raise source.error("bad group number",
                                                   len(condname) + 1)
                            if condgroup >= MAXGROUPS:
                                msg = "invalid group reference %d" % condgroup
                                raise source.error(msg, len(condname) + 1)
                            if condgroup not in state.grouprefpos:
                                state.grouprefpos[condgroup] = (
                                    source.tell() - len(condname) - 1
                                )
                        state.checklookbehindgroup(condgroup, source)
                        item_yes = _parse(source, state, verbose, nested + 1)
                        if source.match("|"):
                            item_no = _parse(source, state, verbose, nested + 1)
                            if source.next == "|":
                                raise source.error("conditional backref with more than two branches")
                        else:
                            item_no = None
                        if not source.match(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        subpatternappend((GROUPREF_EXISTS, (condgroup, item_yes, item_no)))
                        continue
    
                    elif char in FLAGS or char == "-":
                        # flags
                        flags = _parse_flags(source, state, char)
                        if flags is None:  # global flags
                            if not first or subpattern:
                                import warnings
>                               warnings.warn(
                                    'Flags not at the start of the expression %r%s'
                                    ' but at position %d' % (
                                        source.string[:20],  # truncate long regexes
                                        ' (truncated)' if len(source.string) > 20 else '',
                                        start,
                                    ),
                                    DeprecationWarning, stacklevel=nested + 6
                                )
[1m[31mE                               DeprecationWarning: Flags not at the start of the expression '^\\s*((?P<command>(?i' (truncated) but at position 17[0m

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:814: DeprecationWarning
[31m[1m_____________________________ test_roundtrip[True] _____________________________[0m

qdp_file = '/tmp/pytest-of-root/pytest-0/test_roundtrip_True_0/test.qdp'
input_colnames = ['MJD', 'Rate'], delimiter = None

    def _get_tables_from_qdp_file(qdp_file, input_colnames=None, delimiter=None):
        """Get all tables from a QDP file.
    
        Parameters
        ----------
        qdp_file : str
            Input QDP file name
    
        Other Parameters
        ----------------
        input_colnames : list of str
            Name of data columns (defaults to ['col1', 'col2', ...]), _not_
            including error columns.
        delimiter : str
            Delimiter for the values in the table.
    
        Returns
        -------
        list of `~astropy.table.Table`
            List containing all the tables present inside the QDP file
        """
        lines = _get_lines_from_file(qdp_file)
        contents, ncol = _get_type_from_list_of_lines(lines, delimiter=delimiter)
    
        table_list = []
        err_specs = {}
        colnames = None
    
        comment_text = ""
        initial_comments = ""
        command_lines = ""
        current_rows = None
    
        for line, datatype in zip(lines, contents):
            line = line.strip().lstrip("!")
            # Is this a comment?
            if datatype == "comment":
                comment_text += line + "\n"
                continue
    
            if datatype == "command":
                # The first time I find commands, I save whatever comments into
                # The initial comments.
                if command_lines == "":
                    initial_comments = comment_text
                    comment_text = ""
    
                if err_specs != {}:
                    warnings.warn(
                        "This file contains multiple command blocks. Please verify",
                        AstropyUserWarning,
                    )
                command_lines += line + "\n"
                continue
    
            if datatype.startswith("data"):
                # The first time I find data, I define err_specs
                if err_specs == {} and command_lines != "":
                    for cline in command_lines.strip().split("\n"):
                        command = cline.strip().split()
                        # This should never happen, but just in case.
                        if len(command) < 3:
                            continue
                        err_specs[command[1].lower()] = [int(c) for c in command[2:]]
                if colnames is None:
                    colnames = _interpret_err_lines(err_specs, ncol, names=input_colnames)
    
                if current_rows is None:
                    current_rows = []
    
                values = []
                for v in line.split(delimiter):
                    if v == "NO":
                        values.append(np.ma.masked)
                    else:
                        # Understand if number is int or float
                        try:
>                           values.append(int(v))
[1m[31mE                           ValueError: invalid literal for int() with base 10: 'no'[0m

[1m[31mastropy/io/ascii/qdp.py[0m:314: ValueError

[33mDuring handling of the above exception, another exception occurred:[0m

tmp_path = PosixPath('/tmp/pytest-of-root/pytest-0/test_roundtrip_True_0')
lowercase = True

    @pytest.mark.parametrize("lowercase", [False, True])
    def test_roundtrip(tmp_path, lowercase):
        example_qdp = """
        ! Swift/XRT hardness ratio of trigger: XXXX, name: BUBU X-2
        ! Columns are as labelled
        READ TERR 1
        READ SERR 2
        ! WT -- hard data
        !MJD            Err (pos)       Err(neg)        Rate            Error
        53000.123456 2.37847222222222e-05    -2.37847222222222e-05   NO       0.212439
        55045.099887 1.14467592592593e-05    -1.14467592592593e-05   0.000000        0.000000
        NO NO NO NO NO
        ! WT -- soft data
        !MJD            Err (pos)       Err(neg)        Rate            Error
        53000.123456 2.37847222222222e-05    -2.37847222222222e-05   0.726155        0.583890
        55045.099887 1.14467592592593e-05    -1.14467592592593e-05   2.410935        1.393592
        NO NO NO NO NO
        ! WT -- hardness ratio
        !MJD            Err (pos)       Err(neg)        Rate            Error
        53000.123456 2.37847222222222e-05    -2.37847222222222e-05   -0.292553       -0.374935
        55045.099887 1.14467592592593e-05    -1.14467592592593e-05   0.000000        NO
        ! Add command, just to raise the warning.
        READ TERR 1
        ! WT -- whatever
        !MJD            Err (pos)       Err(neg)        Rate            Error
        53000.123456 2.37847222222222e-05    -2.37847222222222e-05   -0.292553       -0.374935
        NO 1.14467592592593e-05    -1.14467592592593e-05   0.000000        NO
        """
        if lowercase:
            example_qdp = lowercase_header(example_qdp)
    
        path = str(tmp_path / "test.qdp")
        path2 = str(tmp_path / "test2.qdp")
    
        with open(path, "w") as fp:
            print(example_qdp, file=fp)
        with pytest.warns(AstropyUserWarning) as record:
>           table = _read_table_qdp(path, names=["MJD", "Rate"], table_id=0)

[1m[31mastropy/io/ascii/tests/test_qdp.py[0m:93: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

qdp_file = '/tmp/pytest-of-root/pytest-0/test_roundtrip_True_0/test.qdp'
names = ['MJD', 'Rate'], table_id = 0, delimiter = None

    def _read_table_qdp(qdp_file, names=None, table_id=None, delimiter=None):
        """Read a table from a QDP file.
    
        Parameters
        ----------
        qdp_file : str
            Input QDP file name
    
        Other Parameters
        ----------------
        names : list of str
            Name of data columns (defaults to ['col1', 'col2', ...]), _not_
            including error columns.
    
        table_id : int, default 0
            Number of the table to be read from the QDP file. This is useful
            when multiple tables present in the file. By default, the first is read.
    
        delimiter : str
            Any delimiter accepted by the `sep` argument of str.split()
    
        Returns
        -------
        tables : list of `~astropy.table.Table`
            List containing all the tables present inside the QDP file
        """
        if table_id is None:
            warnings.warn(
                "table_id not specified. Reading the first available table",
                AstropyUserWarning,
            )
            table_id = 0
    
>       tables = _get_tables_from_qdp_file(
            qdp_file, input_colnames=names, delimiter=delimiter
        )

[1m[31mastropy/io/ascii/qdp.py[0m:418: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

qdp_file = '/tmp/pytest-of-root/pytest-0/test_roundtrip_True_0/test.qdp'
input_colnames = ['MJD', 'Rate'], delimiter = None

    def _get_tables_from_qdp_file(qdp_file, input_colnames=None, delimiter=None):
        """Get all tables from a QDP file.
    
        Parameters
        ----------
        qdp_file : str
            Input QDP file name
    
        Other Parameters
        ----------------
        input_colnames : list of str
            Name of data columns (defaults to ['col1', 'col2', ...]), _not_
            including error columns.
        delimiter : str
            Delimiter for the values in the table.
    
        Returns
        -------
        list of `~astropy.table.Table`
            List containing all the tables present inside the QDP file
        """
        lines = _get_lines_from_file(qdp_file)
        contents, ncol = _get_type_from_list_of_lines(lines, delimiter=delimiter)
    
        table_list = []
        err_specs = {}
        colnames = None
    
        comment_text = ""
        initial_comments = ""
        command_lines = ""
        current_rows = None
    
        for line, datatype in zip(lines, contents):
            line = line.strip().lstrip("!")
            # Is this a comment?
            if datatype == "comment":
                comment_text += line + "\n"
                continue
    
            if datatype == "command":
                # The first time I find commands, I save whatever comments into
                # The initial comments.
                if command_lines == "":
                    initial_comments = comment_text
                    comment_text = ""
    
                if err_specs != {}:
                    warnings.warn(
                        "This file contains multiple command blocks. Please verify",
                        AstropyUserWarning,
                    )
                command_lines += line + "\n"
                continue
    
            if datatype.startswith("data"):
                # The first time I find data, I define err_specs
                if err_specs == {} and command_lines != "":
                    for cline in command_lines.strip().split("\n"):
                        command = cline.strip().split()
                        # This should never happen, but just in case.
                        if len(command) < 3:
                            continue
                        err_specs[command[1].lower()] = [int(c) for c in command[2:]]
                if colnames is None:
                    colnames = _interpret_err_lines(err_specs, ncol, names=input_colnames)
    
                if current_rows is None:
                    current_rows = []
    
                values = []
                for v in line.split(delimiter):
                    if v == "NO":
                        values.append(np.ma.masked)
                    else:
                        # Understand if number is int or float
                        try:
                            values.append(int(v))
                        except ValueError:
>                           values.append(float(v))
[1m[31mE                           ValueError: could not convert string to float: 'no'[0m

[1m[31mastropy/io/ascii/qdp.py[0m:316: ValueError
[31m[1m_________________________ test_roundtrip_example_comma _________________________[0m

tmp_path = PosixPath('/tmp/pytest-of-root/pytest-0/test_roundtrip_example_comma0')

    def test_roundtrip_example_comma(tmp_path):
        example_qdp = """
            ! Initial comment line 1
            ! Initial comment line 2
            READ TERR 1
            READ SERR 3
            ! Table 0 comment
            !a,a(pos),a(neg),b,c,ce,d
            53000.5,0.25,-0.5,1,1.5,3.5,2
            54000.5,1.25,-1.5,2,2.5,4.5,3
            NO,NO,NO,NO,NO
            ! Table 1 comment
            !a,a(pos),a(neg),b,c,ce,d
            54000.5,2.25,-2.5,NO,3.5,5.5,5
            55000.5,3.25,-3.5,4,4.5,6.5,nan
            """
        test_file = tmp_path / "test.qdp"
    
>       t = Table.read(
            example_qdp, format="ascii.qdp", table_id=1, names=["a", "b", "c", "d"], sep=","
        )

[1m[31mastropy/io/ascii/tests/test_qdp.py[0m:201: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <astropy.table.connect.TableRead object at 0x77cf86e7e7c0>
args = ('\n        ! Initial comment line 1\n        ! Initial comment line 2\n        READ TERR 1\n        READ SERR 3\n    ...!a,a(pos),a(neg),b,c,ce,d\n        54000.5,2.25,-2.5,NO,3.5,5.5,5\n        55000.5,3.25,-3.5,4,4.5,6.5,nan\n        ',)
kwargs = {'format': 'ascii.qdp', 'names': ['a', 'b', 'c', 'd'], 'sep': ',', 'table_id': 1}
cls = <class 'astropy.table.table.Table'>, units = None, descriptions = None

    def __call__(self, *args, **kwargs):
        cls = self._cls
        units = kwargs.pop("units", None)
        descriptions = kwargs.pop("descriptions", None)
    
>       out = self.registry.read(cls, *args, **kwargs)

[1m[31mastropy/table/connect.py[0m:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <astropy.io.registry.core.UnifiedIORegistry object at 0x77cf606f6250>
cls = <class 'astropy.table.table.Table'>, format = 'ascii.qdp', cache = False
args = ('\n        ! Initial comment line 1\n        ! Initial comment line 2\n        READ TERR 1\n        READ SERR 3\n    ...!a,a(pos),a(neg),b,c,ce,d\n        54000.5,2.25,-2.5,NO,3.5,5.5,5\n        55000.5,3.25,-3.5,4,4.5,6.5,nan\n        ',)
kwargs = {'names': ['a', 'b', 'c', 'd'], 'sep': ',', 'table_id': 1}, ctx = None
reader = functools.partial(<function io_read at 0x77cf605f8e50>, 'ascii.qdp')

    def read(self, cls, *args, format=None, cache=False, **kwargs):
        """
        Read in data.
    
        Parameters
        ----------
        cls : class
        *args
            The arguments passed to this method depend on the format.
        format : str or None
        cache : bool
            Whether to cache the results of reading in the data.
        **kwargs
            The arguments passed to this method depend on the format.
    
        Returns
        -------
        object or None
            The output of the registered reader.
        """
        ctx = None
        try:
            # Expand a tilde-prefixed path if present in args[0]
            args = _expand_user_in_args(args)
    
            if format is None:
                path = None
                fileobj = None
    
                if len(args):
                    if isinstance(args[0], PATH_TYPES) and not os.path.isdir(args[0]):
                        from astropy.utils.data import get_readable_fileobj
    
                        # path might be a os.PathLike object
                        if isinstance(args[0], os.PathLike):
                            args = (os.fspath(args[0]),) + args[1:]
                        path = args[0]
                        try:
                            ctx = get_readable_fileobj(
                                args[0], encoding="binary", cache=cache
                            )
                            fileobj = ctx.__enter__()
                        except OSError:
                            raise
                        except Exception:
                            fileobj = None
                        else:
                            args = [fileobj] + list(args[1:])
                    elif hasattr(args[0], "read"):
                        path = None
                        fileobj = args[0]
    
                format = self._get_valid_format(
                    "read", cls, path, fileobj, args, kwargs
                )
    
            reader = self.get_reader(format, cls)
>           data = reader(*args, **kwargs)

[1m[31mastropy/io/registry/core.py[0m:218: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

format = 'qdp'
filename = '\n        ! Initial comment line 1\n        ! Initial comment line 2\n        READ TERR 1\n        READ SERR 3\n     ...  !a,a(pos),a(neg),b,c,ce,d\n        54000.5,2.25,-2.5,NO,3.5,5.5,5\n        55000.5,3.25,-3.5,4,4.5,6.5,nan\n        '
kwargs = {'format': 'qdp', 'names': ['a', 'b', 'c', 'd'], 'sep': ',', 'table_id': 1}
read = <function read at 0x77cf603efee0>

    def io_read(format, filename, **kwargs):
        from .ui import read
    
        if format != "ascii":
            format = re.sub(r"^ascii\.", "", format)
            kwargs["format"] = format
>       return read(filename, **kwargs)

[1m[31mastropy/io/ascii/connect.py[0m:19: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

table = '\n        ! Initial comment line 1\n        ! Initial comment line 2\n        READ TERR 1\n        READ SERR 3\n     ...  !a,a(pos),a(neg),b,c,ce,d\n        54000.5,2.25,-2.5,NO,3.5,5.5,5\n        55000.5,3.25,-3.5,4,4.5,6.5,nan\n        '
guess = False
kwargs = {'fast_reader': {'enable': True}, 'fill_values': [('', '0')], 'format': 'qdp', 'names': ['a', 'b', 'c', 'd'], ...}
dat = None, fast_reader = {'enable': True}, format = 'qdp'
new_kwargs = {'Reader': <class 'astropy.io.ascii.qdp.QDP'>, 'fast_reader': {'enable': True}, 'fill_values': [('', '0')], 'names': ['a', 'b', 'c', 'd'], ...}
Reader = <class 'astropy.io.ascii.qdp.QDP'>, encoding = None

    def read(table, guess=None, **kwargs):
        # This the final output from reading. Static analysis indicates the reading
        # logic (which is indeed complex) might not define `dat`, thus do so here.
        dat = None
    
        # Docstring defined below
        del _read_trace[:]
    
        # Downstream readers might munge kwargs
        kwargs = copy.deepcopy(kwargs)
    
        _validate_read_write_kwargs("read", **kwargs)
    
        # Convert 'fast_reader' key in kwargs into a dict if not already and make sure
        # 'enable' key is available.
        fast_reader = _get_fast_reader_dict(kwargs)
        kwargs["fast_reader"] = fast_reader
    
        if fast_reader["enable"] and fast_reader.get("chunk_size"):
            return _read_in_chunks(table, **kwargs)
    
        if "fill_values" not in kwargs:
            kwargs["fill_values"] = [("", "0")]
    
        # If an Outputter is supplied in kwargs that will take precedence.
        if (
            "Outputter" in kwargs
        ):  # user specified Outputter, not supported for fast reading
            fast_reader["enable"] = False
    
        format = kwargs.get("format")
        # Dictionary arguments are passed by reference per default and thus need
        # special protection:
        new_kwargs = copy.deepcopy(kwargs)
        kwargs["fast_reader"] = copy.deepcopy(fast_reader)
    
        # Get the Reader class based on possible format and Reader kwarg inputs.
        Reader = _get_format_class(format, kwargs.get("Reader"), "Reader")
        if Reader is not None:
            new_kwargs["Reader"] = Reader
            format = Reader._format_name
    
        # Remove format keyword if there, this is only allowed in read() not get_reader()
        if "format" in new_kwargs:
            del new_kwargs["format"]
    
        if guess is None:
            guess = _GUESS
    
        if guess:
            # If ``table`` is probably an HTML file then tell guess function to add
            # the HTML reader at the top of the guess list.  This is in response to
            # issue #3691 (and others) where libxml can segfault on a long non-HTML
            # file, thus prompting removal of the HTML reader from the default
            # guess list.
            new_kwargs["guess_html"] = _probably_html(table)
    
            # If `table` is a filename or readable file object then read in the
            # file now.  This prevents problems in Python 3 with the file object
            # getting closed or left at the file end.  See #3132, #3013, #3109,
            # #2001.  If a `readme` arg was passed that implies CDS format, in
            # which case the original `table` as the data filename must be left
            # intact.
            if "readme" not in new_kwargs:
                encoding = kwargs.get("encoding")
                try:
                    table = _expand_user_if_path(table)
                    with get_readable_fileobj(table, encoding=encoding) as fileobj:
                        table = fileobj.read()
                except ValueError:  # unreadable or invalid binary file
                    raise
                except Exception:
                    pass
                else:
                    # Ensure that `table` has at least one \r or \n in it
                    # so that the core.BaseInputter test of
                    # ('\n' not in table and '\r' not in table)
                    # will fail and so `table` cannot be interpreted there
                    # as a filename.  See #4160.
                    if not re.search(r"[\r\n]", table):
                        table = table + os.linesep
    
                    # If the table got successfully read then look at the content
                    # to see if is probably HTML, but only if it wasn't already
                    # identified as HTML based on the filename.
                    if not new_kwargs["guess_html"]:
                        new_kwargs["guess_html"] = _probably_html(table)
    
            # Get the table from guess in ``dat``.  If ``dat`` comes back as None
            # then there was just one set of kwargs in the guess list so fall
            # through below to the non-guess way so that any problems result in a
            # more useful traceback.
            dat = _guess(table, new_kwargs, format, fast_reader)
            if dat is None:
                guess = False
    
        if not guess:
            if format is None:
                reader = get_reader(**new_kwargs)
                format = reader._format_name
    
            table = _expand_user_if_path(table)
    
            # Try the fast reader version of `format` first if applicable.  Note that
            # if user specified a fast format (e.g. format='fast_basic') this test
            # will fail and the else-clause below will be used.
            if fast_reader["enable"] and f"fast_{format}" in core.FAST_CLASSES:
                fast_kwargs = copy.deepcopy(new_kwargs)
                fast_kwargs["Reader"] = core.FAST_CLASSES[f"fast_{format}"]
                fast_reader_rdr = get_reader(**fast_kwargs)
                try:
                    dat = fast_reader_rdr.read(table)
                    _read_trace.append(
                        {
                            "kwargs": copy.deepcopy(fast_kwargs),
                            "Reader": fast_reader_rdr.__class__,
                            "status": "Success with fast reader (no guessing)",
                        }
                    )
                except (
                    core.ParameterError,
                    cparser.CParserError,
                    UnicodeEncodeError,
                ) as err:
                    # special testing value to avoid falling back on the slow reader
                    if fast_reader["enable"] == "force":
                        raise core.InconsistentTableError(
                            f"fast reader {fast_reader_rdr.__class__} exception: {err}"
                        )
                    # If the fast reader doesn't work, try the slow version
                    reader = get_reader(**new_kwargs)
                    dat = reader.read(table)
                    _read_trace.append(
                        {
                            "kwargs": copy.deepcopy(new_kwargs),
                            "Reader": reader.__class__,
                            "status": (
                                "Success with slow reader after failing"
                                " with fast (no guessing)"
                            ),
                        }
                    )
            else:
                reader = get_reader(**new_kwargs)
>               dat = reader.read(table)

[1m[31mastropy/io/ascii/ui.py[0m:426: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <astropy.io.ascii.qdp.QDP object at 0x77cf603eb5b0>
table = '\n        ! Initial comment line 1\n        ! Initial comment line 2\n        READ TERR 1\n        READ SERR 3\n     ...  !a,a(pos),a(neg),b,c,ce,d\n        54000.5,2.25,-2.5,NO,3.5,5.5,5\n        55000.5,3.25,-3.5,4,4.5,6.5,nan\n        '

    def read(self, table):
        self.lines = self.inputter.get_lines(table, newline="\n")
>       return _read_table_qdp(
            self.lines,
            table_id=self.table_id,
            names=self.names,
            delimiter=self.delimiter,
        )

[1m[31mastropy/io/ascii/qdp.py[0m:632: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

qdp_file = ['', '        ! Initial comment line 1', '        ! Initial comment line 2', '        READ TERR 1', '        READ SERR 3', '        ! Table 0 comment', ...]
names = ['a', 'b', 'c', 'd'], table_id = 1, delimiter = ','

    def _read_table_qdp(qdp_file, names=None, table_id=None, delimiter=None):
        """Read a table from a QDP file.
    
        Parameters
        ----------
        qdp_file : str
            Input QDP file name
    
        Other Parameters
        ----------------
        names : list of str
            Name of data columns (defaults to ['col1', 'col2', ...]), _not_
            including error columns.
    
        table_id : int, default 0
            Number of the table to be read from the QDP file. This is useful
            when multiple tables present in the file. By default, the first is read.
    
        delimiter : str
            Any delimiter accepted by the `sep` argument of str.split()
    
        Returns
        -------
        tables : list of `~astropy.table.Table`
            List containing all the tables present inside the QDP file
        """
        if table_id is None:
            warnings.warn(
                "table_id not specified. Reading the first available table",
                AstropyUserWarning,
            )
            table_id = 0
    
>       tables = _get_tables_from_qdp_file(
            qdp_file, input_colnames=names, delimiter=delimiter
        )

[1m[31mastropy/io/ascii/qdp.py[0m:418: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

qdp_file = ['', '        ! Initial comment line 1', '        ! Initial comment line 2', '        READ TERR 1', '        READ SERR 3', '        ! Table 0 comment', ...]
input_colnames = ['a', 'b', 'c', 'd'], delimiter = ','

    def _get_tables_from_qdp_file(qdp_file, input_colnames=None, delimiter=None):
        """Get all tables from a QDP file.
    
        Parameters
        ----------
        qdp_file : str
            Input QDP file name
    
        Other Parameters
        ----------------
        input_colnames : list of str
            Name of data columns (defaults to ['col1', 'col2', ...]), _not_
            including error columns.
        delimiter : str
            Delimiter for the values in the table.
    
        Returns
        -------
        list of `~astropy.table.Table`
            List containing all the tables present inside the QDP file
        """
        lines = _get_lines_from_file(qdp_file)
>       contents, ncol = _get_type_from_list_of_lines(lines, delimiter=delimiter)

[1m[31mastropy/io/ascii/qdp.py[0m:259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

lines = ['', '        ! Initial comment line 1', '        ! Initial comment line 2', '        READ TERR 1', '        READ SERR 3', '        ! Table 0 comment', ...]
delimiter = ','

    def _get_type_from_list_of_lines(lines, delimiter=None):
        """Read through the list of QDP file lines and label each line by type.
    
        Parameters
        ----------
        lines : list
            List containing one file line in each entry
    
        Returns
        -------
        contents : list
            List containing the type for each line (see `line_type_and_data`)
        ncol : int
            The number of columns in the data lines. Must be the same throughout
            the file
    
        Examples
        --------
        >>> line0 = "! A comment"
        >>> line1 = "543 12 456.0"
        >>> lines = [line0, line1]
        >>> types, ncol = _get_type_from_list_of_lines(lines)
        >>> types[0]
        'comment'
        >>> types[1]
        'data,3'
        >>> ncol
        3
        >>> lines.append("23")
        >>> _get_type_from_list_of_lines(lines)
        Traceback (most recent call last):
            ...
        ValueError: Inconsistent number of columns
        """
>       types = [_line_type(line, delimiter=delimiter) for line in lines]

[1m[31mastropy/io/ascii/qdp.py[0m:122: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

.0 = <list_iterator object at 0x77cf603ebc70>

>   types = [_line_type(line, delimiter=delimiter) for line in lines]

[1m[31mastropy/io/ascii/qdp.py[0m:122: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

line = '', delimiter = ','

    def _line_type(line, delimiter=None):
        """Interpret a QDP file line.
    
        Parameters
        ----------
        line : str
            a single line of the file
    
        Returns
        -------
        type : str
            Line type: "comment", "command", or "data"
    
        Examples
        --------
        >>> _line_type("READ SERR 3")
        'command'
        >>> _line_type(" \\n    !some gibberish")
        'comment'
        >>> _line_type("   ")
        'comment'
        >>> _line_type(" 21345.45")
        'data,1'
        >>> _line_type(" 21345.45 1.53e-3 1e-3 .04 NO nan")
        'data,6'
        >>> _line_type(" 21345.45,1.53e-3,1e-3,.04,NO,nan", delimiter=',')
        'data,6'
        >>> _line_type(" 21345.45 ! a comment to disturb")
        'data,1'
        >>> _line_type("NO NO NO NO NO")
        'new'
        >>> _line_type("NO,NO,NO,NO,NO", delimiter=',')
        'new'
        >>> _line_type("N O N NOON OON O")
        Traceback (most recent call last):
            ...
        ValueError: Unrecognized QDP line...
        >>> _line_type(" some non-comment gibberish")
        Traceback (most recent call last):
            ...
        ValueError: Unrecognized QDP line...
        """
        _decimal_re = r"[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?"
        _command_re = r"(?i)READ [TS]ERR(\s+[0-9]+)+"
    
        sep = delimiter
        if delimiter is None:
            sep = r"\s+"
        _new_re = rf"NO({sep}NO)+"
        _data_re = rf"({_decimal_re}|NO|[-+]?nan)({sep}({_decimal_re}|NO|[-+]?nan))*)"
        _type_re = rf"^\s*((?P<command>{_command_re})|(?P<new>{_new_re})|(?P<data>{_data_re})?\s*(\!(?P<comment>.*))?\s*$"
>       _line_type_re = re.compile(_type_re)

[1m[31mastropy/io/ascii/qdp.py[0m:71: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pattern = '^\\s*((?P<command>(?i)READ [TS]ERR(\\s+[0-9]+)+)|(?P<new>NO(,NO)+)|(?P<data>([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan)(,([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan))*))?\\s*(\\!(?P<comment>.*))?\\s*$'
flags = 0

    def compile(pattern, flags=0):
        "Compile a regular expression pattern, returning a Pattern object."
>       return _compile(pattern, flags)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/re.py[0m:252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

pattern = '^\\s*((?P<command>(?i)READ [TS]ERR(\\s+[0-9]+)+)|(?P<new>NO(,NO)+)|(?P<data>([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan)(,([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan))*))?\\s*(\\!(?P<comment>.*))?\\s*$'
flags = 0

    def _compile(pattern, flags):
        # internal: compile pattern
        if isinstance(flags, RegexFlag):
            flags = flags.value
        try:
            return _cache[type(pattern), pattern, flags]
        except KeyError:
            pass
        if isinstance(pattern, Pattern):
            if flags:
                raise ValueError(
                    "cannot process flags argument with a compiled pattern")
            return pattern
        if not sre_compile.isstring(pattern):
            raise TypeError("first argument must be string or compiled pattern")
>       p = sre_compile.compile(pattern, flags)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/re.py[0m:304: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

p = '^\\s*((?P<command>(?i)READ [TS]ERR(\\s+[0-9]+)+)|(?P<new>NO(,NO)+)|(?P<data>([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan)(,([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan))*))?\\s*(\\!(?P<comment>.*))?\\s*$'
flags = 0

    def compile(p, flags=0):
        # internal: convert pattern list to internal format
    
        if isstring(p):
            pattern = p
>           p = sre_parse.parse(p, flags)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_compile.py[0m:788: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

str = '^\\s*((?P<command>(?i)READ [TS]ERR(\\s+[0-9]+)+)|(?P<new>NO(,NO)+)|(?P<data>([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan)(,([+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?|NO|[-+]?nan))*))?\\s*(\\!(?P<comment>.*))?\\s*$'
flags = 0, state = <sre_parse.State object at 0x77cf603ebf70>

    def parse(str, flags=0, state=None):
        # parse 're' pattern into list of (opcode, argument) tuples
    
        source = Tokenizer(str)
    
        if state is None:
            state = State()
        state.flags = flags
        state.str = str
    
        try:
>           p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:955: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf603eb4c0>
state = <sre_parse.State object at 0x77cf603ebf70>, verbose = 0, nested = 0

    def _parse_sub(source, state, verbose, nested):
        # parse an alternation: a|b|c
    
        items = []
        itemsappend = items.append
        sourcematch = source.match
        start = source.tell()
        while True:
>           itemsappend(_parse(source, state, verbose, nested + 1,
                               not nested and not items))

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:444: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf603eb4c0>
state = <sre_parse.State object at 0x77cf603ebf70>, verbose = 0, nested = 1
first = True

    def _parse(source, state, verbose, nested, first=False):
        # parse a simple pattern
        subpattern = SubPattern(state)
    
        # precompute constants into local variables
        subpatternappend = subpattern.append
        sourceget = source.get
        sourcematch = source.match
        _len = len
        _ord = ord
    
        while True:
    
            this = source.next
            if this is None:
                break # end of pattern
            if this in "|)":
                break # end of subpattern
            sourceget()
    
            if verbose:
                # skip whitespace and comments
                if this in WHITESPACE:
                    continue
                if this == "#":
                    while True:
                        this = sourceget()
                        if this is None or this == "\n":
                            break
                    continue
    
            if this[0] == "\\":
                code = _escape(source, this, state)
                subpatternappend(code)
    
            elif this not in SPECIAL_CHARS:
                subpatternappend((LITERAL, _ord(this)))
    
            elif this == "[":
                here = source.tell() - 1
                # character set
                set = []
                setappend = set.append
    ##          if sourcematch(":"):
    ##              pass # handle character classes
                if source.next == '[':
                    import warnings
                    warnings.warn(
                        'Possible nested set at position %d' % source.tell(),
                        FutureWarning, stacklevel=nested + 6
                    )
                negate = sourcematch("^")
                # check remaining characters
                while True:
                    this = sourceget()
                    if this is None:
                        raise source.error("unterminated character set",
                                           source.tell() - here)
                    if this == "]" and set:
                        break
                    elif this[0] == "\\":
                        code1 = _class_escape(source, this)
                    else:
                        if set and this in '-&~|' and source.next == this:
                            import warnings
                            warnings.warn(
                                'Possible set %s at position %d' % (
                                    'difference' if this == '-' else
                                    'intersection' if this == '&' else
                                    'symmetric difference' if this == '~' else
                                    'union',
                                    source.tell() - 1),
                                FutureWarning, stacklevel=nested + 6
                            )
                        code1 = LITERAL, _ord(this)
                    if sourcematch("-"):
                        # potential range
                        that = sourceget()
                        if that is None:
                            raise source.error("unterminated character set",
                                               source.tell() - here)
                        if that == "]":
                            if code1[0] is IN:
                                code1 = code1[1][0]
                            setappend(code1)
                            setappend((LITERAL, _ord("-")))
                            break
                        if that[0] == "\\":
                            code2 = _class_escape(source, that)
                        else:
                            if that == '-':
                                import warnings
                                warnings.warn(
                                    'Possible set difference at position %d' % (
                                        source.tell() - 2),
                                    FutureWarning, stacklevel=nested + 6
                                )
                            code2 = LITERAL, _ord(that)
                        if code1[0] != LITERAL or code2[0] != LITERAL:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        lo = code1[1]
                        hi = code2[1]
                        if hi < lo:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        setappend((RANGE, (lo, hi)))
                    else:
                        if code1[0] is IN:
                            code1 = code1[1][0]
                        setappend(code1)
    
                set = _uniq(set)
                # XXX: <fl> should move set optimization to compiler!
                if _len(set) == 1 and set[0][0] is LITERAL:
                    # optimization
                    if negate:
                        subpatternappend((NOT_LITERAL, set[0][1]))
                    else:
                        subpatternappend(set[0])
                else:
                    if negate:
                        set.insert(0, (NEGATE, None))
                    # charmap optimization can't be added here because
                    # global flags still are not known
                    subpatternappend((IN, set))
    
            elif this in REPEAT_CHARS:
                # repeat previous item
                here = source.tell()
                if this == "?":
                    min, max = 0, 1
                elif this == "*":
                    min, max = 0, MAXREPEAT
    
                elif this == "+":
                    min, max = 1, MAXREPEAT
                elif this == "{":
                    if source.next == "}":
                        subpatternappend((LITERAL, _ord(this)))
                        continue
    
                    min, max = 0, MAXREPEAT
                    lo = hi = ""
                    while source.next in DIGITS:
                        lo += sourceget()
                    if sourcematch(","):
                        while source.next in DIGITS:
                            hi += sourceget()
                    else:
                        hi = lo
                    if not sourcematch("}"):
                        subpatternappend((LITERAL, _ord(this)))
                        source.seek(here)
                        continue
    
                    if lo:
                        min = int(lo)
                        if min >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                    if hi:
                        max = int(hi)
                        if max >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                        if max < min:
                            raise source.error("min repeat greater than max repeat",
                                               source.tell() - here)
                else:
                    raise AssertionError("unsupported quantifier %r" % (char,))
                # figure out which item to repeat
                if subpattern:
                    item = subpattern[-1:]
                else:
                    item = None
                if not item or item[0][0] is AT:
                    raise source.error("nothing to repeat",
                                       source.tell() - here + len(this))
                if item[0][0] in _REPEATCODES:
                    raise source.error("multiple repeat",
                                       source.tell() - here + len(this))
                if item[0][0] is SUBPATTERN:
                    group, add_flags, del_flags, p = item[0][1]
                    if group is None and not add_flags and not del_flags:
                        item = p
                if sourcematch("?"):
                    subpattern[-1] = (MIN_REPEAT, (min, max, item))
                else:
                    subpattern[-1] = (MAX_REPEAT, (min, max, item))
    
            elif this == ".":
                subpatternappend((ANY, None))
    
            elif this == "(":
                start = source.tell() - 1
                group = True
                name = None
                add_flags = 0
                del_flags = 0
                if sourcematch("?"):
                    # options
                    char = sourceget()
                    if char is None:
                        raise source.error("unexpected end of pattern")
                    if char == "P":
                        # python extensions
                        if sourcematch("<"):
                            # named group: skip forward to end of name
                            name = source.getuntil(">", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                        elif sourcematch("="):
                            # named backreference
                            name = source.getuntil(")", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            gid = state.groupdict.get(name)
                            if gid is None:
                                msg = "unknown group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            if not state.checkgroup(gid):
                                raise source.error("cannot refer to an open group",
                                                   len(name) + 1)
                            state.checklookbehindgroup(gid, source)
                            subpatternappend((GROUPREF, gid))
                            continue
    
                        else:
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            raise source.error("unknown extension ?P" + char,
                                               len(char) + 2)
                    elif char == ":":
                        # non-capturing group
                        group = None
                    elif char == "#":
                        # comment
                        while True:
                            if source.next is None:
                                raise source.error("missing ), unterminated comment",
                                                   source.tell() - start)
                            if sourceget() == ")":
                                break
                        continue
    
                    elif char in "=!<":
                        # lookahead assertions
                        dir = 1
                        if char == "<":
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            if char not in "=!":
                                raise source.error("unknown extension ?<" + char,
                                                   len(char) + 2)
                            dir = -1 # lookbehind
                            lookbehindgroups = state.lookbehindgroups
                            if lookbehindgroups is None:
                                state.lookbehindgroups = state.groups
                        p = _parse_sub(source, state, verbose, nested + 1)
                        if dir < 0:
                            if lookbehindgroups is None:
                                state.lookbehindgroups = None
                        if not sourcematch(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        if char == "=":
                            subpatternappend((ASSERT, (dir, p)))
                        else:
                            subpatternappend((ASSERT_NOT, (dir, p)))
                        continue
    
                    elif char == "(":
                        # conditional backreference group
                        condname = source.getuntil(")", "group name")
                        if condname.isidentifier():
                            condgroup = state.groupdict.get(condname)
                            if condgroup is None:
                                msg = "unknown group name %r" % condname
                                raise source.error(msg, len(condname) + 1)
                        else:
                            try:
                                condgroup = int(condname)
                                if condgroup < 0:
                                    raise ValueError
                            except ValueError:
                                msg = "bad character in group name %r" % condname
                                raise source.error(msg, len(condname) + 1) from None
                            if not condgroup:
                                raise source.error("bad group number",
                                                   len(condname) + 1)
                            if condgroup >= MAXGROUPS:
                                msg = "invalid group reference %d" % condgroup
                                raise source.error(msg, len(condname) + 1)
                            if condgroup not in state.grouprefpos:
                                state.grouprefpos[condgroup] = (
                                    source.tell() - len(condname) - 1
                                )
                        state.checklookbehindgroup(condgroup, source)
                        item_yes = _parse(source, state, verbose, nested + 1)
                        if source.match("|"):
                            item_no = _parse(source, state, verbose, nested + 1)
                            if source.next == "|":
                                raise source.error("conditional backref with more than two branches")
                        else:
                            item_no = None
                        if not source.match(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        subpatternappend((GROUPREF_EXISTS, (condgroup, item_yes, item_no)))
                        continue
    
                    elif char in FLAGS or char == "-":
                        # flags
                        flags = _parse_flags(source, state, char)
                        if flags is None:  # global flags
                            if not first or subpattern:
                                import warnings
                                warnings.warn(
                                    'Flags not at the start of the expression %r%s'
                                    ' but at position %d' % (
                                        source.string[:20],  # truncate long regexes
                                        ' (truncated)' if len(source.string) > 20 else '',
                                        start,
                                    ),
                                    DeprecationWarning, stacklevel=nested + 6
                                )
                            if (state.flags & SRE_FLAG_VERBOSE) and not verbose:
                                raise Verbose
                            continue
    
                        add_flags, del_flags = flags
                        group = None
                    else:
                        raise source.error("unknown extension ?" + char,
                                           len(char) + 1)
    
                # parse group contents
                if group is not None:
                    try:
                        group = state.opengroup(name)
                    except error as err:
                        raise source.error(err.msg, len(name) + 1) from None
                sub_verbose = ((verbose or (add_flags & SRE_FLAG_VERBOSE)) and
                               not (del_flags & SRE_FLAG_VERBOSE))
>               p = _parse_sub(source, state, sub_verbose, nested + 1)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:841: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf603eb4c0>
state = <sre_parse.State object at 0x77cf603ebf70>, verbose = 0, nested = 2

    def _parse_sub(source, state, verbose, nested):
        # parse an alternation: a|b|c
    
        items = []
        itemsappend = items.append
        sourcematch = source.match
        start = source.tell()
        while True:
>           itemsappend(_parse(source, state, verbose, nested + 1,
                               not nested and not items))

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:444: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf603eb4c0>
state = <sre_parse.State object at 0x77cf603ebf70>, verbose = 0, nested = 3
first = False

    def _parse(source, state, verbose, nested, first=False):
        # parse a simple pattern
        subpattern = SubPattern(state)
    
        # precompute constants into local variables
        subpatternappend = subpattern.append
        sourceget = source.get
        sourcematch = source.match
        _len = len
        _ord = ord
    
        while True:
    
            this = source.next
            if this is None:
                break # end of pattern
            if this in "|)":
                break # end of subpattern
            sourceget()
    
            if verbose:
                # skip whitespace and comments
                if this in WHITESPACE:
                    continue
                if this == "#":
                    while True:
                        this = sourceget()
                        if this is None or this == "\n":
                            break
                    continue
    
            if this[0] == "\\":
                code = _escape(source, this, state)
                subpatternappend(code)
    
            elif this not in SPECIAL_CHARS:
                subpatternappend((LITERAL, _ord(this)))
    
            elif this == "[":
                here = source.tell() - 1
                # character set
                set = []
                setappend = set.append
    ##          if sourcematch(":"):
    ##              pass # handle character classes
                if source.next == '[':
                    import warnings
                    warnings.warn(
                        'Possible nested set at position %d' % source.tell(),
                        FutureWarning, stacklevel=nested + 6
                    )
                negate = sourcematch("^")
                # check remaining characters
                while True:
                    this = sourceget()
                    if this is None:
                        raise source.error("unterminated character set",
                                           source.tell() - here)
                    if this == "]" and set:
                        break
                    elif this[0] == "\\":
                        code1 = _class_escape(source, this)
                    else:
                        if set and this in '-&~|' and source.next == this:
                            import warnings
                            warnings.warn(
                                'Possible set %s at position %d' % (
                                    'difference' if this == '-' else
                                    'intersection' if this == '&' else
                                    'symmetric difference' if this == '~' else
                                    'union',
                                    source.tell() - 1),
                                FutureWarning, stacklevel=nested + 6
                            )
                        code1 = LITERAL, _ord(this)
                    if sourcematch("-"):
                        # potential range
                        that = sourceget()
                        if that is None:
                            raise source.error("unterminated character set",
                                               source.tell() - here)
                        if that == "]":
                            if code1[0] is IN:
                                code1 = code1[1][0]
                            setappend(code1)
                            setappend((LITERAL, _ord("-")))
                            break
                        if that[0] == "\\":
                            code2 = _class_escape(source, that)
                        else:
                            if that == '-':
                                import warnings
                                warnings.warn(
                                    'Possible set difference at position %d' % (
                                        source.tell() - 2),
                                    FutureWarning, stacklevel=nested + 6
                                )
                            code2 = LITERAL, _ord(that)
                        if code1[0] != LITERAL or code2[0] != LITERAL:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        lo = code1[1]
                        hi = code2[1]
                        if hi < lo:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        setappend((RANGE, (lo, hi)))
                    else:
                        if code1[0] is IN:
                            code1 = code1[1][0]
                        setappend(code1)
    
                set = _uniq(set)
                # XXX: <fl> should move set optimization to compiler!
                if _len(set) == 1 and set[0][0] is LITERAL:
                    # optimization
                    if negate:
                        subpatternappend((NOT_LITERAL, set[0][1]))
                    else:
                        subpatternappend(set[0])
                else:
                    if negate:
                        set.insert(0, (NEGATE, None))
                    # charmap optimization can't be added here because
                    # global flags still are not known
                    subpatternappend((IN, set))
    
            elif this in REPEAT_CHARS:
                # repeat previous item
                here = source.tell()
                if this == "?":
                    min, max = 0, 1
                elif this == "*":
                    min, max = 0, MAXREPEAT
    
                elif this == "+":
                    min, max = 1, MAXREPEAT
                elif this == "{":
                    if source.next == "}":
                        subpatternappend((LITERAL, _ord(this)))
                        continue
    
                    min, max = 0, MAXREPEAT
                    lo = hi = ""
                    while source.next in DIGITS:
                        lo += sourceget()
                    if sourcematch(","):
                        while source.next in DIGITS:
                            hi += sourceget()
                    else:
                        hi = lo
                    if not sourcematch("}"):
                        subpatternappend((LITERAL, _ord(this)))
                        source.seek(here)
                        continue
    
                    if lo:
                        min = int(lo)
                        if min >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                    if hi:
                        max = int(hi)
                        if max >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                        if max < min:
                            raise source.error("min repeat greater than max repeat",
                                               source.tell() - here)
                else:
                    raise AssertionError("unsupported quantifier %r" % (char,))
                # figure out which item to repeat
                if subpattern:
                    item = subpattern[-1:]
                else:
                    item = None
                if not item or item[0][0] is AT:
                    raise source.error("nothing to repeat",
                                       source.tell() - here + len(this))
                if item[0][0] in _REPEATCODES:
                    raise source.error("multiple repeat",
                                       source.tell() - here + len(this))
                if item[0][0] is SUBPATTERN:
                    group, add_flags, del_flags, p = item[0][1]
                    if group is None and not add_flags and not del_flags:
                        item = p
                if sourcematch("?"):
                    subpattern[-1] = (MIN_REPEAT, (min, max, item))
                else:
                    subpattern[-1] = (MAX_REPEAT, (min, max, item))
    
            elif this == ".":
                subpatternappend((ANY, None))
    
            elif this == "(":
                start = source.tell() - 1
                group = True
                name = None
                add_flags = 0
                del_flags = 0
                if sourcematch("?"):
                    # options
                    char = sourceget()
                    if char is None:
                        raise source.error("unexpected end of pattern")
                    if char == "P":
                        # python extensions
                        if sourcematch("<"):
                            # named group: skip forward to end of name
                            name = source.getuntil(">", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                        elif sourcematch("="):
                            # named backreference
                            name = source.getuntil(")", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            gid = state.groupdict.get(name)
                            if gid is None:
                                msg = "unknown group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            if not state.checkgroup(gid):
                                raise source.error("cannot refer to an open group",
                                                   len(name) + 1)
                            state.checklookbehindgroup(gid, source)
                            subpatternappend((GROUPREF, gid))
                            continue
    
                        else:
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            raise source.error("unknown extension ?P" + char,
                                               len(char) + 2)
                    elif char == ":":
                        # non-capturing group
                        group = None
                    elif char == "#":
                        # comment
                        while True:
                            if source.next is None:
                                raise source.error("missing ), unterminated comment",
                                                   source.tell() - start)
                            if sourceget() == ")":
                                break
                        continue
    
                    elif char in "=!<":
                        # lookahead assertions
                        dir = 1
                        if char == "<":
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            if char not in "=!":
                                raise source.error("unknown extension ?<" + char,
                                                   len(char) + 2)
                            dir = -1 # lookbehind
                            lookbehindgroups = state.lookbehindgroups
                            if lookbehindgroups is None:
                                state.lookbehindgroups = state.groups
                        p = _parse_sub(source, state, verbose, nested + 1)
                        if dir < 0:
                            if lookbehindgroups is None:
                                state.lookbehindgroups = None
                        if not sourcematch(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        if char == "=":
                            subpatternappend((ASSERT, (dir, p)))
                        else:
                            subpatternappend((ASSERT_NOT, (dir, p)))
                        continue
    
                    elif char == "(":
                        # conditional backreference group
                        condname = source.getuntil(")", "group name")
                        if condname.isidentifier():
                            condgroup = state.groupdict.get(condname)
                            if condgroup is None:
                                msg = "unknown group name %r" % condname
                                raise source.error(msg, len(condname) + 1)
                        else:
                            try:
                                condgroup = int(condname)
                                if condgroup < 0:
                                    raise ValueError
                            except ValueError:
                                msg = "bad character in group name %r" % condname
                                raise source.error(msg, len(condname) + 1) from None
                            if not condgroup:
                                raise source.error("bad group number",
                                                   len(condname) + 1)
                            if condgroup >= MAXGROUPS:
                                msg = "invalid group reference %d" % condgroup
                                raise source.error(msg, len(condname) + 1)
                            if condgroup not in state.grouprefpos:
                                state.grouprefpos[condgroup] = (
                                    source.tell() - len(condname) - 1
                                )
                        state.checklookbehindgroup(condgroup, source)
                        item_yes = _parse(source, state, verbose, nested + 1)
                        if source.match("|"):
                            item_no = _parse(source, state, verbose, nested + 1)
                            if source.next == "|":
                                raise source.error("conditional backref with more than two branches")
                        else:
                            item_no = None
                        if not source.match(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        subpatternappend((GROUPREF_EXISTS, (condgroup, item_yes, item_no)))
                        continue
    
                    elif char in FLAGS or char == "-":
                        # flags
                        flags = _parse_flags(source, state, char)
                        if flags is None:  # global flags
                            if not first or subpattern:
                                import warnings
                                warnings.warn(
                                    'Flags not at the start of the expression %r%s'
                                    ' but at position %d' % (
                                        source.string[:20],  # truncate long regexes
                                        ' (truncated)' if len(source.string) > 20 else '',
                                        start,
                                    ),
                                    DeprecationWarning, stacklevel=nested + 6
                                )
                            if (state.flags & SRE_FLAG_VERBOSE) and not verbose:
                                raise Verbose
                            continue
    
                        add_flags, del_flags = flags
                        group = None
                    else:
                        raise source.error("unknown extension ?" + char,
                                           len(char) + 1)
    
                # parse group contents
                if group is not None:
                    try:
                        group = state.opengroup(name)
                    except error as err:
                        raise source.error(err.msg, len(name) + 1) from None
                sub_verbose = ((verbose or (add_flags & SRE_FLAG_VERBOSE)) and
                               not (del_flags & SRE_FLAG_VERBOSE))
>               p = _parse_sub(source, state, sub_verbose, nested + 1)

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:841: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf603eb4c0>
state = <sre_parse.State object at 0x77cf603ebf70>, verbose = 0, nested = 4

    def _parse_sub(source, state, verbose, nested):
        # parse an alternation: a|b|c
    
        items = []
        itemsappend = items.append
        sourcematch = source.match
        start = source.tell()
        while True:
>           itemsappend(_parse(source, state, verbose, nested + 1,
                               not nested and not items))

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:444: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = <sre_parse.Tokenizer object at 0x77cf603eb4c0>
state = <sre_parse.State object at 0x77cf603ebf70>, verbose = 0, nested = 5
first = False

    def _parse(source, state, verbose, nested, first=False):
        # parse a simple pattern
        subpattern = SubPattern(state)
    
        # precompute constants into local variables
        subpatternappend = subpattern.append
        sourceget = source.get
        sourcematch = source.match
        _len = len
        _ord = ord
    
        while True:
    
            this = source.next
            if this is None:
                break # end of pattern
            if this in "|)":
                break # end of subpattern
            sourceget()
    
            if verbose:
                # skip whitespace and comments
                if this in WHITESPACE:
                    continue
                if this == "#":
                    while True:
                        this = sourceget()
                        if this is None or this == "\n":
                            break
                    continue
    
            if this[0] == "\\":
                code = _escape(source, this, state)
                subpatternappend(code)
    
            elif this not in SPECIAL_CHARS:
                subpatternappend((LITERAL, _ord(this)))
    
            elif this == "[":
                here = source.tell() - 1
                # character set
                set = []
                setappend = set.append
    ##          if sourcematch(":"):
    ##              pass # handle character classes
                if source.next == '[':
                    import warnings
                    warnings.warn(
                        'Possible nested set at position %d' % source.tell(),
                        FutureWarning, stacklevel=nested + 6
                    )
                negate = sourcematch("^")
                # check remaining characters
                while True:
                    this = sourceget()
                    if this is None:
                        raise source.error("unterminated character set",
                                           source.tell() - here)
                    if this == "]" and set:
                        break
                    elif this[0] == "\\":
                        code1 = _class_escape(source, this)
                    else:
                        if set and this in '-&~|' and source.next == this:
                            import warnings
                            warnings.warn(
                                'Possible set %s at position %d' % (
                                    'difference' if this == '-' else
                                    'intersection' if this == '&' else
                                    'symmetric difference' if this == '~' else
                                    'union',
                                    source.tell() - 1),
                                FutureWarning, stacklevel=nested + 6
                            )
                        code1 = LITERAL, _ord(this)
                    if sourcematch("-"):
                        # potential range
                        that = sourceget()
                        if that is None:
                            raise source.error("unterminated character set",
                                               source.tell() - here)
                        if that == "]":
                            if code1[0] is IN:
                                code1 = code1[1][0]
                            setappend(code1)
                            setappend((LITERAL, _ord("-")))
                            break
                        if that[0] == "\\":
                            code2 = _class_escape(source, that)
                        else:
                            if that == '-':
                                import warnings
                                warnings.warn(
                                    'Possible set difference at position %d' % (
                                        source.tell() - 2),
                                    FutureWarning, stacklevel=nested + 6
                                )
                            code2 = LITERAL, _ord(that)
                        if code1[0] != LITERAL or code2[0] != LITERAL:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        lo = code1[1]
                        hi = code2[1]
                        if hi < lo:
                            msg = "bad character range %s-%s" % (this, that)
                            raise source.error(msg, len(this) + 1 + len(that))
                        setappend((RANGE, (lo, hi)))
                    else:
                        if code1[0] is IN:
                            code1 = code1[1][0]
                        setappend(code1)
    
                set = _uniq(set)
                # XXX: <fl> should move set optimization to compiler!
                if _len(set) == 1 and set[0][0] is LITERAL:
                    # optimization
                    if negate:
                        subpatternappend((NOT_LITERAL, set[0][1]))
                    else:
                        subpatternappend(set[0])
                else:
                    if negate:
                        set.insert(0, (NEGATE, None))
                    # charmap optimization can't be added here because
                    # global flags still are not known
                    subpatternappend((IN, set))
    
            elif this in REPEAT_CHARS:
                # repeat previous item
                here = source.tell()
                if this == "?":
                    min, max = 0, 1
                elif this == "*":
                    min, max = 0, MAXREPEAT
    
                elif this == "+":
                    min, max = 1, MAXREPEAT
                elif this == "{":
                    if source.next == "}":
                        subpatternappend((LITERAL, _ord(this)))
                        continue
    
                    min, max = 0, MAXREPEAT
                    lo = hi = ""
                    while source.next in DIGITS:
                        lo += sourceget()
                    if sourcematch(","):
                        while source.next in DIGITS:
                            hi += sourceget()
                    else:
                        hi = lo
                    if not sourcematch("}"):
                        subpatternappend((LITERAL, _ord(this)))
                        source.seek(here)
                        continue
    
                    if lo:
                        min = int(lo)
                        if min >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                    if hi:
                        max = int(hi)
                        if max >= MAXREPEAT:
                            raise OverflowError("the repetition number is too large")
                        if max < min:
                            raise source.error("min repeat greater than max repeat",
                                               source.tell() - here)
                else:
                    raise AssertionError("unsupported quantifier %r" % (char,))
                # figure out which item to repeat
                if subpattern:
                    item = subpattern[-1:]
                else:
                    item = None
                if not item or item[0][0] is AT:
                    raise source.error("nothing to repeat",
                                       source.tell() - here + len(this))
                if item[0][0] in _REPEATCODES:
                    raise source.error("multiple repeat",
                                       source.tell() - here + len(this))
                if item[0][0] is SUBPATTERN:
                    group, add_flags, del_flags, p = item[0][1]
                    if group is None and not add_flags and not del_flags:
                        item = p
                if sourcematch("?"):
                    subpattern[-1] = (MIN_REPEAT, (min, max, item))
                else:
                    subpattern[-1] = (MAX_REPEAT, (min, max, item))
    
            elif this == ".":
                subpatternappend((ANY, None))
    
            elif this == "(":
                start = source.tell() - 1
                group = True
                name = None
                add_flags = 0
                del_flags = 0
                if sourcematch("?"):
                    # options
                    char = sourceget()
                    if char is None:
                        raise source.error("unexpected end of pattern")
                    if char == "P":
                        # python extensions
                        if sourcematch("<"):
                            # named group: skip forward to end of name
                            name = source.getuntil(">", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                        elif sourcematch("="):
                            # named backreference
                            name = source.getuntil(")", "group name")
                            if not name.isidentifier():
                                msg = "bad character in group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            gid = state.groupdict.get(name)
                            if gid is None:
                                msg = "unknown group name %r" % name
                                raise source.error(msg, len(name) + 1)
                            if not state.checkgroup(gid):
                                raise source.error("cannot refer to an open group",
                                                   len(name) + 1)
                            state.checklookbehindgroup(gid, source)
                            subpatternappend((GROUPREF, gid))
                            continue
    
                        else:
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            raise source.error("unknown extension ?P" + char,
                                               len(char) + 2)
                    elif char == ":":
                        # non-capturing group
                        group = None
                    elif char == "#":
                        # comment
                        while True:
                            if source.next is None:
                                raise source.error("missing ), unterminated comment",
                                                   source.tell() - start)
                            if sourceget() == ")":
                                break
                        continue
    
                    elif char in "=!<":
                        # lookahead assertions
                        dir = 1
                        if char == "<":
                            char = sourceget()
                            if char is None:
                                raise source.error("unexpected end of pattern")
                            if char not in "=!":
                                raise source.error("unknown extension ?<" + char,
                                                   len(char) + 2)
                            dir = -1 # lookbehind
                            lookbehindgroups = state.lookbehindgroups
                            if lookbehindgroups is None:
                                state.lookbehindgroups = state.groups
                        p = _parse_sub(source, state, verbose, nested + 1)
                        if dir < 0:
                            if lookbehindgroups is None:
                                state.lookbehindgroups = None
                        if not sourcematch(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        if char == "=":
                            subpatternappend((ASSERT, (dir, p)))
                        else:
                            subpatternappend((ASSERT_NOT, (dir, p)))
                        continue
    
                    elif char == "(":
                        # conditional backreference group
                        condname = source.getuntil(")", "group name")
                        if condname.isidentifier():
                            condgroup = state.groupdict.get(condname)
                            if condgroup is None:
                                msg = "unknown group name %r" % condname
                                raise source.error(msg, len(condname) + 1)
                        else:
                            try:
                                condgroup = int(condname)
                                if condgroup < 0:
                                    raise ValueError
                            except ValueError:
                                msg = "bad character in group name %r" % condname
                                raise source.error(msg, len(condname) + 1) from None
                            if not condgroup:
                                raise source.error("bad group number",
                                                   len(condname) + 1)
                            if condgroup >= MAXGROUPS:
                                msg = "invalid group reference %d" % condgroup
                                raise source.error(msg, len(condname) + 1)
                            if condgroup not in state.grouprefpos:
                                state.grouprefpos[condgroup] = (
                                    source.tell() - len(condname) - 1
                                )
                        state.checklookbehindgroup(condgroup, source)
                        item_yes = _parse(source, state, verbose, nested + 1)
                        if source.match("|"):
                            item_no = _parse(source, state, verbose, nested + 1)
                            if source.next == "|":
                                raise source.error("conditional backref with more than two branches")
                        else:
                            item_no = None
                        if not source.match(")"):
                            raise source.error("missing ), unterminated subpattern",
                                               source.tell() - start)
                        subpatternappend((GROUPREF_EXISTS, (condgroup, item_yes, item_no)))
                        continue
    
                    elif char in FLAGS or char == "-":
                        # flags
                        flags = _parse_flags(source, state, char)
                        if flags is None:  # global flags
                            if not first or subpattern:
                                import warnings
>                               warnings.warn(
                                    'Flags not at the start of the expression %r%s'
                                    ' but at position %d' % (
                                        source.string[:20],  # truncate long regexes
                                        ' (truncated)' if len(source.string) > 20 else '',
                                        start,
                                    ),
                                    DeprecationWarning, stacklevel=nested + 6
                                )
[1m[31mE                               DeprecationWarning: Flags not at the start of the expression '^\\s*((?P<command>(?i' (truncated) but at position 17[0m

[1m[31m/opt/miniconda3/envs/testbed/lib/python3.9/sre_parse.py[0m:814: DeprecationWarning
==================================== PASSES ====================================
[36m[1m=========================== short test summary info ============================[0m
[32mPASSED[0m astropy/io/ascii/tests/test_qdp.py::[1mtest_roundtrip[False][0m
[32mPASSED[0m astropy/io/ascii/tests/test_qdp.py::[1mtest_read_example[0m
[32mPASSED[0m astropy/io/ascii/tests/test_qdp.py::[1mtest_roundtrip_example[0m
[32mPASSED[0m astropy/io/ascii/tests/test_qdp.py::[1mtest_read_write_simple[0m
[32mPASSED[0m astropy/io/ascii/tests/test_qdp.py::[1mtest_read_write_simple_specify_name[0m
[32mPASSED[0m astropy/io/ascii/tests/test_qdp.py::[1mtest_get_lines_from_qdp[0m
[31mFAILED[0m astropy/io/ascii/tests/test_qdp.py::[1mtest_get_tables_from_qdp_file[0m - DeprecationWarning: Flags not at the start of the expression '^\\s*((?P<com...
[31mFAILED[0m astropy/io/ascii/tests/test_qdp.py::[1mtest_roundtrip[True][0m - ValueError: could not convert string to float: 'no'
[31mFAILED[0m astropy/io/ascii/tests/test_qdp.py::[1mtest_roundtrip_example_comma[0m - DeprecationWarning: Flags not at the start of the expression '^\\s*((?P<com...
[31m========================= [31m[1m3 failed[0m, [32m6 passed[0m[31m in 0.39s[0m[31m ==========================[0m
+ git checkout 7269fa3e33e8d02485a647da91a5a2a60a06af61 astropy/io/ascii/tests/test_qdp.py
Updated 1 path from fe91cbe1a0

