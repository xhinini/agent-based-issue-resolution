# Instance ID: sympy__sympy-22840
# Model: AutoCoderOver v20240620

### Original Case Description and Gold Patch
# INSTANCE_ID: sympy__sympy-22840

### ISSUE TYPE
bug fix

### DESCRIPTION
cse() has strange behaviour for MatrixSymbol indexing
Example: 
```python
import sympy as sp
from pprint import pprint


def sub_in_matrixsymbols(exp, matrices):
    for matrix in matrices:
        for i in range(matrix.shape[0]):
            for j in range(matrix.shape[1]):
                name = "%s_%d_%d" % (matrix.name, i, j)
                sym = sp.symbols(name)
                exp = exp.subs(sym, matrix[i, j])
    return exp


def t44(name):
    return sp.Matrix(4, 4, lambda i, j: sp.symbols('%s_%d_%d' % (name, i, j)))


# Construct matrices of symbols that work with our
# expressions. (MatrixSymbols does not.)
a = t44("a")
b = t44("b")

# Set up expression. This is a just a simple example.
e = a * b

# Put in matrixsymbols. (Gives array-input in codegen.)
e2 = sub_in_matrixsymbols(e, [sp.MatrixSymbol("a", 4, 4), sp.MatrixSymbol("b", 4, 4)])
cse_subs, cse_reduced = sp.cse(e2)
pprint((cse_subs, cse_reduced))

# Codegen, etc..
print "\nccode:"
for sym, expr in cse_subs:
    constants, not_c, c_expr = sympy.printing.ccode(
        expr,
        human=False,
        assign_to=sympy.printing.ccode(sym),
    )
    assert not constants, constants
    assert not not_c, not_c
    print "%s\n" % c_expr

```

This gives the following output:

```
([(x0, a),
  (x1, x0[0, 0]),
  (x2, b),
  (x3, x2[0, 0]),
  (x4, x0[0, 1]),
  (x5, x2[1, 0]),
  (x6, x0[0, 2]),
  (x7, x2[2, 0]),
  (x8, x0[0, 3]),
  (x9, x2[3, 0]),
  (x10, x2[0, 1]),
  (x11, x2[1, 1]),
  (x12, x2[2, 1]),
  (x13, x2[3, 1]),
  (x14, x2[0, 2]),
  (x15, x2[1, 2]),
  (x16, x2[2, 2]),
  (x17, x2[3, 2]),
  (x18, x2[0, 3]),
  (x19, x2[1, 3]),
  (x20, x2[2, 3]),
  (x21, x2[3, 3]),
  (x22, x0[1, 0]),
  (x23, x0[1, 1]),
  (x24, x0[1, 2]),
  (x25, x0[1, 3]),
  (x26, x0[2, 0]),
  (x27, x0[2, 1]),
  (x28, x0[2, 2]),
  (x29, x0[2, 3]),
  (x30, x0[3, 0]),
  (x31, x0[3, 1]),
  (x32, x0[3, 2]),
  (x33, x0[3, 3])],
 [Matrix([
[    x1*x3 + x4*x5 + x6*x7 + x8*x9,     x1*x10 + x11*x4 + x12*x6 + x13*x8,     x1*x14 + x15*x4 + x16*x6 + x17*x8,     x1*x18 + x19*x4 + x20*x6 + x21*x8],
[x22*x3 + x23*x5 + x24*x7 + x25*x9, x10*x22 + x11*x23 + x12*x24 + x13*x25, x14*x22 + x15*x23 + x16*x24 + x17*x25, x18*x22 + x19*x23 + x20*x24 + x21*x25],
[x26*x3 + x27*x5 + x28*x7 + x29*x9, x10*x26 + x11*x27 + x12*x28 + x13*x29, x14*x26 + x15*x27 + x16*x28 + x17*x29, x18*x26 + x19*x27 + x20*x28 + x21*x29],
[x3*x30 + x31*x5 + x32*x7 + x33*x9, x10*x30 + x11*x31 + x12*x32 + x13*x33, x14*x30 + x15*x31 + x16*x32 + x17*x33, x18*x30 + x19*x31 + x20*x32 + x21*x33]])])

ccode:
x0[0] = a[0];
x0[1] = a[1];
x0[2] = a[2];
x0[3] = a[3];
x0[4] = a[4];
x0[5] = a[5];
x0[6] = a[6];
x0[7] = a[7];
x0[8] = a[8];
x0[9] = a[9];
x0[10] = a[10];
x0[11] = a[11];
x0[12] = a[12];
x0[13] = a[13];
x0[14] = a[14];
x0[15] = a[15];
x1 = x0[0];
x2[0] = b[0];
x2[1] = b[1];
x2[2] = b[2];
x2[3] = b[3];
x2[4] = b[4];
x2[5] = b[5];
x2[6] = b[6];
x2[7] = b[7];
x2[8] = b[8];
x2[9] = b[9];
x2[10] = b[10];
x2[11] = b[11];
x2[12] = b[12];
x2[13] = b[13];
x2[14] = b[14];
x2[15] = b[15];
x3 = x2[0];
x4 = x0[1];
x5 = x2[4];
x6 = x0[2];
x7 = x2[8];
x8 = x0[3];
x9 = x2[12];
x10 = x2[1];
x11 = x2[5];
x12 = x2[9];
x13 = x2[13];
x14 = x2[2];
x15 = x2[6];
x16 = x2[10];
x17 = x2[14];
x18 = x2[3];
x19 = x2[7];
x20 = x2[11];
x21 = x2[15];
x22 = x0[4];
x23 = x0[5];
x24 = x0[6];
x25 = x0[7];
x26 = x0[8];
x27 = x0[9];
x28 = x0[10];
x29 = x0[11];
x30 = x0[12];
x31 = x0[13];
x32 = x0[14];
x33 = x0[15];
```

`x0` and `x2` are just copies of the matrices `a` and `b`, respectively.


### GOLD_PATCH
diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py
--- a/sympy/simplify/cse_main.py
+++ b/sympy/simplify/cse_main.py
@@ -567,6 +567,7 @@ def tree_cse(exprs, symbols, opt_subs=None, order='canonical', ignore=()):
         Substitutions containing any Symbol from ``ignore`` will be ignored.
     """
     from sympy.matrices.expressions import MatrixExpr, MatrixSymbol, MatMul, MatAdd
+    from sympy.matrices.expressions.matexpr import MatrixElement
     from sympy.polys.rootoftools import RootOf
 
     if opt_subs is None:
@@ -586,7 +587,10 @@ def _find_repeated(expr):
         if isinstance(expr, RootOf):
             return
 
-        if isinstance(expr, Basic) and (expr.is_Atom or expr.is_Order):
+        if isinstance(expr, Basic) and (
+                expr.is_Atom or
+                expr.is_Order or
+                isinstance(expr, (MatrixSymbol, MatrixElement))):
             if expr.is_Symbol:
                 excluded_symbols.add(expr)
             return


### MODEL_OUTPUTS




### Model Generated Patch
diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py
index 78db834466..a7ceadc6fc 100644
--- a/sympy/matrices/expressions/matexpr.py
+++ b/sympy/matrices/expressions/matexpr.py
@@ -231,6 +231,7 @@ def _check_dim(cls, dim):
 
 
     def _entry(self, i, j, **kwargs):
+        return MatrixElement(self, i, j)
         raise NotImplementedError(
             "Indexing not implemented for %s" % self.__class__.__name__)
 
diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py
index d649dd02a9..5b4aab11b4 100644
--- a/sympy/simplify/cse_main.py
+++ b/sympy/simplify/cse_main.py
@@ -146,7 +146,8 @@ def cse_release_variables(r, e):
             rv.extend([(s, None) for s in sorted(c, key=str)])
         if i >= len(r):
             rv.append((syms.pop(), _p))
-        else:
+        elif isinstance(e, MatrixSymbol):
+            temp.append(Tuple(*[e[i, j] for i in range(e.shape[0]) for j in range(e.shape[1])]))
             rv.append((s[i], _p))
         in_use -= c
         i -= 1
@@ -784,7 +785,7 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,
         exprs = sympify(exprs)
 
     # Handle the case if just one expression was passed.
-    if isinstance(exprs, (Basic, MatrixBase)):
+    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
         exprs = [exprs]
 
     copy = exprs
@@ -793,6 +794,14 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,
         if isinstance(e, (Matrix, ImmutableMatrix)):
             temp.append(Tuple(*e.flat()))
         elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):
+            m = SparseMatrix(e.rows, e.cols, {})
+            for k, v in reduced_exprs[i]:
+                m[k] = v
+            if isinstance(e, ImmutableSparseMatrix):
+                m = m.as_immutable()
+            reduced_exprs[i] = m
+        elif isinstance(e, MatrixSymbol):
+            reduced_exprs[i] = Matrix(e.shape[0], e.shape[1], reduced_exprs[i])
             temp.append(Tuple(*e.todok().items()))
         else:
             temp.append(e)


### Test Output
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   sympy/matrices/expressions/matexpr.py
	modified:   sympy/simplify/cse_main.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit d822fcba181155b85ff2b29fe525adbafb22b448
Merge: 1cfce0660a 4e6a36c921
Author: Chris Smith <smichr@gmail.com>
Date:   Mon Jan 10 17:36:03 2022 -0600

    Merge pull request #22829 from smichr/parse
    
    do not use None as key in local_dict

+ git diff d822fcba181155b85ff2b29fe525adbafb22b448
diff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py
index 78db834466..a7ceadc6fc 100644
--- a/sympy/matrices/expressions/matexpr.py
+++ b/sympy/matrices/expressions/matexpr.py
@@ -231,6 +231,7 @@ def _check_dim(cls, dim):
 
 
     def _entry(self, i, j, **kwargs):
+        return MatrixElement(self, i, j)
         raise NotImplementedError(
             "Indexing not implemented for %s" % self.__class__.__name__)
 
diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py
index d649dd02a9..5b4aab11b4 100644
--- a/sympy/simplify/cse_main.py
+++ b/sympy/simplify/cse_main.py
@@ -146,7 +146,8 @@ def cse_release_variables(r, e):
             rv.extend([(s, None) for s in sorted(c, key=str)])
         if i >= len(r):
             rv.append((syms.pop(), _p))
-        else:
+        elif isinstance(e, MatrixSymbol):
+            temp.append(Tuple(*[e[i, j] for i in range(e.shape[0]) for j in range(e.shape[1])]))
             rv.append((s[i], _p))
         in_use -= c
         i -= 1
@@ -784,7 +785,7 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,
         exprs = sympify(exprs)
 
     # Handle the case if just one expression was passed.
-    if isinstance(exprs, (Basic, MatrixBase)):
+    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
         exprs = [exprs]
 
     copy = exprs
@@ -793,6 +794,14 @@ def cse(exprs, symbols=None, optimizations=None, postprocess=None,
         if isinstance(e, (Matrix, ImmutableMatrix)):
             temp.append(Tuple(*e.flat()))
         elif isinstance(e, (SparseMatrix, ImmutableSparseMatrix)):
+            m = SparseMatrix(e.rows, e.cols, {})
+            for k, v in reduced_exprs[i]:
+                m[k] = v
+            if isinstance(e, ImmutableSparseMatrix):
+                m = m.as_immutable()
+            reduced_exprs[i] = m
+        elif isinstance(e, MatrixSymbol):
+            reduced_exprs[i] = Matrix(e.shape[0], e.shape[1], reduced_exprs[i])
             temp.append(Tuple(*e.todok().items()))
         else:
             temp.append(e)
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.10.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.10.dev0
    Uninstalling sympy-1.10.dev0:
      Successfully uninstalled sympy-1.10.dev0
  Running setup.py develop for sympy
Successfully installed sympy-1.10.dev0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git checkout d822fcba181155b85ff2b29fe525adbafb22b448 sympy/simplify/tests/test_cse.py sympy/utilities/tests/test_codegen.py
Updated 0 paths from 7618ee7ffe
+ git apply -v -
Checking patch sympy/simplify/tests/test_cse.py...
Checking patch sympy/utilities/tests/test_codegen.py...
Applied patch sympy/simplify/tests/test_cse.py cleanly.
Applied patch sympy/utilities/tests/test_codegen.py cleanly.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ bin/test -C --verbose sympy/simplify/tests/test_cse.py sympy/utilities/tests/test_codegen.py
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.19-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        82855765
hash randomization: on (PYTHONHASHSEED=2773136446)

sympy/simplify/tests/test_cse.py[47] 
test_numbered_symbols ok
test_preprocess_for_cse ok
test_postprocess_for_cse ok
test_cse_single E
test_cse_single2 E
test_cse_not_possible E
test_nested_substitution E
test_subtraction_opt E
test_multiple_expressions E
test_non_commutative_cse f
test_bypass_non_commutatives E
test_non_commutative_order f
test_issue_10228 f
test_powers f
test_issue_4498 E
test_issue_4020 E
test_issue_4203 E
test_issue_6263 E
test_dont_cse_tuples E
test_pow_invpow E
test_postprocess E
test_issue_4499 E
test_issue_6169 E
test_cse_Indexed E
test_cse_MatrixSymbol E
test_cse_MatrixExpr E
test_Piecewise E
test_ignore_order_terms E
test_name_conflict E
test_name_conflict_cust_symbols E
test_symbols_exhausted_error E
test_issue_7840 E
test_issue_8891 E
test_issue_11230 E
test_issue_11577 f
test_hollow_rejection E
test_cse_ignore E
test_cse_ignore_issue_15002 E
test_cse__performance E
test_issue_12070 E
test_issue_13000 E
test_issue_18203 E
test_unevaluated_mul E
test_cse_release_variables E
test_cse_list E
test_issue_18991 ok
test_unevaluated_Mul E                                                    [FAIL]

sympy/utilities/tests/test_codegen.py[57] 
test_Routine_argument_order ok
test_empty_c_code ok
test_empty_c_code_with_comment ok
test_empty_c_header ok
test_simple_c_code ok
test_c_code_reserved_words ok
test_numbersymbol_c_code ok
test_c_code_argument_order ok
test_simple_c_header ok
test_simple_c_codegen ok
test_multiple_results_c ok
test_no_results_c ok
test_ansi_math1_codegen ok
test_ansi_math2_codegen ok
test_complicated_codegen ok
test_loops_c ok
test_dummy_loops_c ok
test_partial_loops_c ok
test_output_arg_c ok
test_output_arg_c_reserved_words ok
test_multidim_c_argument_cse E
test_ccode_results_named_ordered ok
test_ccode_matrixsymbol_slice ok
test_ccode_cse E
test_ccode_unused_array_arg ok
test_empty_f_code ok
test_empty_f_code_with_header ok
test_empty_f_header ok
test_simple_f_code ok
test_numbersymbol_f_code ok
test_erf_f_code ok
test_f_code_argument_order ok
test_simple_f_header ok
test_simple_f_codegen ok
test_multiple_results_f ok
test_no_results_f ok
test_intrinsic_math_codegen ok
test_intrinsic_math2_codegen ok
test_complicated_codegen_f95 ok
test_loops ok
test_dummy_loops_f95 ok
test_loops_InOut ok
test_partial_loops_f ok
test_output_arg_f ok
test_inline_function ok
test_f_code_call_signature_wrap ok
test_check_case ok
test_check_case_false_positive ok
test_c_fortran_omit_routine_name ok
test_fcode_matrix_output ok
test_fcode_results_named_ordered ok
test_fcode_matrixsymbol_slice ok
test_fcode_matrixsymbol_slice_autoname ok
test_global_vars ok
test_custom_codegen ok
test_c_with_printer ok
test_fcode_complex ok                                                     [FAIL]


________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_cse_single _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 84, in test_cse_single
    substs, reduced = cse([e])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_cse_single2 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 97, in test_cse_single2
    substs, reduced = cse(e)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_cse_not_possible ____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 112, in test_cse_not_possible
    substs, reduced = cse([e])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
__________ sympy/simplify/tests/test_cse.py:test_nested_substitution ___________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 124, in test_nested_substitution
    substs, reduced = cse([e])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_subtraction_opt _____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 132, in test_subtraction_opt
    substs, reduced = cse(
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
__________ sympy/simplify/tests/test_cse.py:test_multiple_expressions __________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 153, in test_multiple_expressions
    substs, reduced = cse([e1, e2])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
________ sympy/simplify/tests/test_cse.py:test_bypass_non_commutatives _________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 193, in test_bypass_non_commutatives
    assert cse(l) == ([], l)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_4498 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 228, in test_issue_4498
    assert cse(w/(x - y) + z/(y - x), optimizations='basic') == \
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_4020 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 233, in test_issue_4020
    assert cse(x**5 + x**4 + x**3 + x**2, optimizations='basic') \
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_4203 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 238, in test_issue_4203
    assert cse(sin(x**x)/x**x) == ([(x0, x**x)], [sin(x0)/x0])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_6263 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 243, in test_issue_6263
    assert cse(e, optimizations='basic') == ([], [True])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_dont_cse_tuples _____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 251, in test_dont_cse_tuples
    name_val, (expr,) = cse(
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_pow_invpow _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 269, in test_pow_invpow
    assert cse(1/x**2 + x**2) == \
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_postprocess _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 291, in test_postprocess
    assert cse([eq, Eq(x, z + 1), z - 2, (z + 1)*(x + 1)],
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_4499 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 311, in test_issue_4499
    c = cse(t)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_6169 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 323, in test_issue_6169
    assert cse(r) == ([], [r])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_cse_Indexed _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 337, in test_cse_Indexed
    replacements, reduced_exprs = cse([expr1, expr2])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_cse_MatrixSymbol ____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 344, in test_cse_MatrixSymbol
    assert cse(A) == ([], [A])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_____________ sympy/simplify/tests/test_cse.py:test_cse_MatrixExpr _____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 360, in test_cse_MatrixExpr
    replacements, reduced_exprs = cse([expr1, expr2])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_Piecewise ________________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 372, in test_Piecewise
    ans = cse(f)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
___________ sympy/simplify/tests/test_cse.py:test_ignore_order_terms ___________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 380, in test_ignore_order_terms
    assert cse(eq) == ([], [sin(x**3 + y) + x + x**2/2 + O(x**3)])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_____________ sympy/simplify/tests/test_cse.py:test_name_conflict ______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 387, in test_name_conflict
    substs, reduced = cse(l)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______ sympy/simplify/tests/test_cse.py:test_name_conflict_cust_symbols _______
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 395, in test_name_conflict_cust_symbols
    substs, reduced = cse(l, symbols("x:10"))
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
________ sympy/simplify/tests/test_cse.py:test_symbols_exhausted_error _________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 403, in test_symbols_exhausted_error
    cse(l, symbols=sym)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_7840 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 422, in test_issue_7840
    substitutions,new_eqn = cse(C393)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_issue_8891 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 447, in test_issue_8891
    res = cse([x + y, m])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_issue_11230 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 457, in test_issue_11230
    R, C = cse(p)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_hollow_rejection ____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 514, in test_hollow_rejection
    assert cse(eq) == ([], eq)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_______________ sympy/simplify/tests/test_cse.py:test_cse_ignore _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 519, in test_cse_ignore
    subst1, red1 = cse(exprs)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_________ sympy/simplify/tests/test_cse.py:test_cse_ignore_issue_15002 _________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 531, in test_cse_ignore_issue_15002
    substs, reduced = cse(l, ignore=(x,))
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_cse__performance ____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 543, in test_cse__performance
    subst, red = cse(exprs)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_issue_12070 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 551, in test_issue_12070
    subst, red = cse(exprs)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_issue_13000 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 558, in test_issue_13000
    cse_eq = cse(eq)[1][0]
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
______________ sympy/simplify/tests/test_cse.py:test_issue_18203 _______________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 564, in test_issue_18203
    assert cse(eq) == ([], [eq])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_unevaluated_mul _____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 569, in test_unevaluated_mul
    assert cse(eq) == ([(x0, x + y)], [x0**2])
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_________ sympy/simplify/tests/test_cse.py:test_cse_release_variables __________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 577, in test_cse_release_variables
    r, e = cse(eqs, postprocess=cse_release_variables)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
________________ sympy/simplify/tests/test_cse.py:test_cse_list ________________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 588, in test_cse_list
    assert _cse(x) == ([], x)
  File "/testbed/sympy/simplify/tests/test_cse.py", line 587, in <lambda>
    _cse = lambda x: cse(x, list=False)
  File "/testbed/sympy/simplify/cse_main.py", line 780, in cse
    return _cse_homogeneous(exprs,
  File "/testbed/sympy/simplify/cse_main.py", line 921, in _cse_homogeneous
    replacements, (reduced_exprs,) = cse(exprs, **kwargs)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
____________ sympy/simplify/tests/test_cse.py:test_unevaluated_Mul _____________
Traceback (most recent call last):
  File "/testbed/sympy/simplify/tests/test_cse.py", line 605, in test_unevaluated_Mul
    assert cse(m) == ([], m)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
______ sympy/utilities/tests/test_codegen.py:test_multidim_c_argument_cse ______
Traceback (most recent call last):
  File "/testbed/sympy/utilities/tests/test_codegen.py", line 526, in test_multidim_c_argument_cse
    r = cgen.routine("c", c)
  File "/testbed/sympy/utilities/codegen.py", line 612, in routine
    common, simplified = cse(expr)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined
________________________________________________________________________________
_____________ sympy/utilities/tests/test_codegen.py:test_ccode_cse _____________
Traceback (most recent call last):
  File "/testbed/sympy/utilities/tests/test_codegen.py", line 602, in test_ccode_cse
    result = codegen(name_expr, code_gen=generator, header=False, empty=False)
  File "/testbed/sympy/utilities/codegen.py", line 2140, in codegen
    routines.append(code_gen.routine(name, expr, argument_sequence,
  File "/testbed/sympy/utilities/codegen.py", line 603, in routine
    common, simplified = cse(rhs)
  File "/testbed/sympy/simplify/cse_main.py", line 788, in cse
    if isinstance(exprs, (Basic, MatrixBase, MatrixSymbol)):
NameError: name 'MatrixSymbol' is not defined

 tests finished: 59 passed, 5 expected to fail, 40 exceptions, in 9.50 seconds =
DO *NOT* COMMIT!
+ git checkout d822fcba181155b85ff2b29fe525adbafb22b448 sympy/simplify/tests/test_cse.py sympy/utilities/tests/test_codegen.py
Updated 2 paths from 7618ee7ffe

